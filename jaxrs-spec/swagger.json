{
  "swagger" : "2.0",
  "info" : {
    "description" : "Che Feature API",
    "version" : "1.0.0",
    "title" : "Che Feature API",
    "contact" : {
      "email" : "skabashniuk@redhat.com"
    },
    "license" : {
      "name" : "Eclipse Public License v1.0",
      "url" : "http://www.eclipse.org/legal/epl-v10.html"
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/skabashniuk/Che/1.0.0",
  "schemes" : [ "https" ],
  "paths" : {
    "/service" : {
      "post" : {
        "summary" : "Create a new CheService",
        "description" : "Create a new CheService",
        "operationId" : "addCheService",
        "consumes" : [ "application/json", "application/x-yaml" ],
        "produces" : [ "application/json", "application/x-yaml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CheServiceItem",
          "description" : "CheFeature item to add",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CheService"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "The CheService successfully created",
            "schema" : {
              "$ref" : "#/definitions/CheService"
            }
          },
          "400" : {
            "description" : "400 Server receives invalid input parameter",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "403 The user does not have access to update resource",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "409 Operation could not be performed because of conflict with prior state.",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/service/{name}" : {
      "get" : {
        "summary" : "Searches latest CheService by name",
        "description" : "Searches latest CheService by name",
        "operationId" : "getServiceByName",
        "produces" : [ "application/x-yaml", "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "Numeric ID of the user to get.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The CheService successfully fetched",
            "schema" : {
              "$ref" : "#/definitions/CheService"
            }
          },
          "500" : {
            "description" : "500 Internal server error occurred",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/service/{name}/{version}" : {
      "get" : {
        "summary" : "Get CheService by name and version",
        "description" : "Get CheService by name and version",
        "operationId" : "getServiceByNameAndVersion",
        "produces" : [ "application/x-yaml", "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "CheService name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "CheService version.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The CheService successfully fetched",
            "schema" : {
              "$ref" : "#/definitions/CheService"
            }
          },
          "500" : {
            "description" : "500 Internal server error occurred",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Removes CheService by name and version",
        "description" : "Removes CheService by name and version",
        "operationId" : "deleteServiceByNameAndVersion",
        "produces" : [ "application/x-yaml", "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "Service name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Service version.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "The CheService successfully removed"
          },
          "403" : {
            "description" : "403 The user does not have access to update resource",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "404 The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "500 Internal server error occurred",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/feature" : {
      "post" : {
        "summary" : "Create a new CheFeature",
        "description" : "Create a new CheFeature",
        "operationId" : "addFeature",
        "consumes" : [ "application/json", "application/x-yaml" ],
        "produces" : [ "application/json", "application/x-yaml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CheFeatureItem",
          "description" : "CheFeature item to add",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CheFeature"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "The CheFeature successfully created",
            "schema" : {
              "$ref" : "#/definitions/CheFeature"
            }
          },
          "403" : {
            "description" : "403 The user does not have access to update resource",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "404 The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "409 Operation could not be performed because of conflict with prior state.",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "500 Internal server error occurred",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/feature/{name}" : {
      "get" : {
        "summary" : "Searches latest CheFeature by name",
        "description" : "Searches latest CheFeature by name",
        "operationId" : "searchFeatureByName",
        "produces" : [ "application/x-yaml", "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "Numeric ID of the user to get.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The CheFeature successfully fetched",
            "schema" : {
              "$ref" : "#/definitions/CheFeature"
            }
          },
          "500" : {
            "description" : "Internal server error occurred during CheFeature fetching"
          }
        }
      }
    },
    "/feature/{name}/{version}" : {
      "get" : {
        "summary" : "Get CheFeature by name and version",
        "description" : "Get CheFeature by name and version",
        "operationId" : "searchFeatureByNameAndVersion",
        "produces" : [ "application/x-yaml", "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "CheFeature name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "CheFeature version.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The CheFeature successfully fetched",
            "schema" : {
              "$ref" : "#/definitions/CheFeature"
            }
          },
          "500" : {
            "description" : "Internal server error occurred during CheFeature fetching"
          }
        }
      },
      "delete" : {
        "summary" : "Removes CheFeature by name and version",
        "description" : "Removes CheFeature by name and version",
        "operationId" : "deleteFeatureByNameAndVersion",
        "produces" : [ "application/x-yaml", "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "CheFeature name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "CheFeature version.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "The CheFeature successfully removed"
          },
          "403" : {
            "description" : "The user does not have access to remove the CheFeature"
          },
          "404" : {
            "description" : "The CheFeature doesn't exist"
          },
          "500" : {
            "description" : "Internal server error occurred"
          }
        }
      }
    }
  },
  "definitions" : {
    "CheService" : {
      "type" : "object",
      "required" : [ "apiVersion", "kind", "metadata", "spec" ],
      "properties" : {
        "apiVersion" : {
          "type" : "string",
          "example" : "che.eclipse.org/v1"
        },
        "kind" : {
          "type" : "string",
          "example" : "CheService"
        },
        "metadata" : {
          "$ref" : "#/definitions/KubernetesObjectMeta"
        },
        "spec" : {
          "$ref" : "#/definitions/CheServiceSpec"
        }
      }
    },
    "CheServiceSpec" : {
      "type" : "object",
      "required" : [ "commands", "pods", "services", "version" ],
      "properties" : {
        "version" : {
          "type" : "string",
          "example" : "1.0.0"
        },
        "services" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Service"
          }
        },
        "pods" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Pod"
          }
        },
        "commands" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CheCommand"
          }
        }
      }
    },
    "Pod" : {
      "type" : "object",
      "description" : "Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts."
    },
    "Service" : {
      "type" : "object",
      "description" : "Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy."
    },
    "CheCommand" : {
      "type" : "object",
      "required" : [ "apiVersion", "kind", "metadata", "spec" ],
      "properties" : {
        "apiVersion" : {
          "type" : "string",
          "example" : "che.eclipse.org/v1"
        },
        "kind" : {
          "type" : "string",
          "example" : "CheCommand"
        },
        "metadata" : {
          "$ref" : "#/definitions/KubernetesObjectMeta"
        },
        "spec" : {
          "$ref" : "#/definitions/CheCommandSpec"
        }
      }
    },
    "CheCommandSpec" : {
      "type" : "object",
      "required" : [ "command", "target-label-selector", "working-dir" ],
      "properties" : {
        "target-label-selector" : {
          "type" : "string",
          "example" : "che.eclipse.org/container-name= theia-maven-sidecar"
        },
        "working-dir" : {
          "type" : "string",
          "example" : "$(project)"
        },
        "command" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "mvn"
          }
        }
      }
    },
    "CheFeature" : {
      "type" : "object",
      "required" : [ "apiVersion", "kind", "metadata", "spec" ],
      "properties" : {
        "apiVersion" : {
          "type" : "string",
          "example" : "che.eclipse.org/v1"
        },
        "kind" : {
          "type" : "string",
          "example" : "CheFeature"
        },
        "metadata" : {
          "$ref" : "#/definitions/KubernetesObjectMeta"
        },
        "spec" : {
          "$ref" : "#/definitions/CheFeatureSpec"
        }
      }
    },
    "CheFeatureSpec" : {
      "type" : "object",
      "required" : [ "services", "version" ],
      "properties" : {
        "version" : {
          "type" : "string",
          "example" : "1.0.0"
        },
        "services" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CheServiceReference"
          }
        }
      }
    },
    "CheServiceReference" : {
      "type" : "object",
      "required" : [ "name", "version" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "o.typefox.theia-ide.che-service.mainpod"
        },
        "version" : {
          "type" : "string",
          "example" : "51.233"
        },
        "services" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CheServiceParameter"
          }
        }
      }
    },
    "CheServiceParameter" : {
      "type" : "object",
      "required" : [ "name", "value" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "THEIA_PLUGINS"
        },
        "value" : {
          "type" : "string",
          "example" : "org.eclipse.che.terminal@latest"
        }
      }
    },
    "KubernetesObjectMeta" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "o.typefox.theia-ide.che-service.mainpod"
        }
      }
    },
    "Error" : {
      "type" : "object",
      "required" : [ "code", "message" ],
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        }
      }
    }
  },
  "responses" : {
    "BadRequestException" : {
      "description" : "400 Server receives invalid input parameter",
      "schema" : {
        "$ref" : "#/definitions/Error"
      }
    },
    "ForbiddenException" : {
      "description" : "403 The user does not have access to update resource",
      "schema" : {
        "$ref" : "#/definitions/Error"
      }
    },
    "NotFoundException" : {
      "description" : "404 The specified resource was not found",
      "schema" : {
        "$ref" : "#/definitions/Error"
      }
    },
    "ConflictException" : {
      "description" : "409 Operation could not be performed because of conflict with prior state.",
      "schema" : {
        "$ref" : "#/definitions/Error"
      }
    },
    "ServerException" : {
      "description" : "500 Internal server error occurred",
      "schema" : {
        "$ref" : "#/definitions/Error"
      }
    }
  }
}