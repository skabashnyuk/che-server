---
swagger: 2.0
info:
  description: Che Feature API
  version: 1.0.0
  title: Che Feature API
  contact:
    email: skabashniuk@redhat.com
  license:
    name: Eclipse Public License v1.0
    url: http://www.eclipse.org/legal/epl-v10.html
host: virtserver.swaggerhub.com
basePath: /skabashniuk/Che/1.0.0
schemes:
- https
paths:
  /service:
    get:
      summary: Searches CheService by list of ids
      description: Searches  CheService by list of ids, example ?id=io.typefox.theia-ide.che-service:1.2.3&org.eclipse.che.svn:4.2.3
      operationId: getServiceByIdList
      produces:
      - application/x-yaml
      - application/json
      parameters:
      - name: id
        in: query
        description: list if CheService ids.
        required: true
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: The CheService successfully fetched
          schema:
            type: array
            items:
              $ref: '#/definitions/CheService'
        500:
          description: 500 Internal server error occurred
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a new CheService
      description: Create a new CheService
      operationId: addCheService
      consumes:
      - application/json
      - application/x-yaml
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - in: body
        name: CheServiceItem
        description: CheFeature item to add
        required: false
        schema:
          $ref: '#/definitions/CheService'
      responses:
        201:
          description: The CheService successfully created
          schema:
            $ref: '#/definitions/CheService'
        400:
          description: 400 Server receives invalid input parameter
          schema:
            $ref: '#/definitions/Error'
        403:
          description: 403 The user does not have access to update resource
          schema:
            $ref: '#/definitions/Error'
        409:
          description: 409 Operation could not be performed because of conflict with prior state.
          schema:
            $ref: '#/definitions/Error'
  /service/{name}/{version}:
    get:
      summary: Get CheService by name and version
      description: Get CheService by name and version
      operationId: getServiceByNameAndVersion
      produces:
      - application/x-yaml
      - application/json
      parameters:
      - name: name
        in: path
        description: CheService name.
        required: true
        type: string
      - name: version
        in: path
        description: CheService version.
        required: true
        type: string
      responses:
        200:
          description: The CheService successfully fetched
          schema:
            $ref: '#/definitions/CheService'
        500:
          description: 500 Internal server error occurred
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Removes CheService by name and version
      description: Removes CheService by name and version
      operationId: deleteServiceByNameAndVersion
      produces:
      - application/x-yaml
      - application/json
      parameters:
      - name: name
        in: path
        description: Service name.
        required: true
        type: string
      - name: version
        in: path
        description: Service version.
        required: true
        type: string
      responses:
        204:
          description: The CheService successfully removed
        403:
          description: 403 The user does not have access to update resource
          schema:
            $ref: '#/definitions/Error'
        404:
          description: 404 The specified resource was not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: 500 Internal server error occurred
          schema:
            $ref: '#/definitions/Error'
  /feature:
    get:
      summary: Searches CheFeature by list of ids
      description: Searches CheFeature by list of ids. For example, ?id=io.typefox.theia-ide.che-service:1.2.3&org.eclipse.che.svn:4.2
      operationId: searchFeatureByListOfId
      produces:
      - application/x-yaml
      - application/json
      parameters:
      - name: id
        in: query
        description: list if CheService ids.
        required: true
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        200:
          description: The CheFeature successfully fetched
          schema:
            type: array
            items:
              $ref: '#/definitions/CheFeature'
        500:
          description: 500 Internal server error occurred
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a new CheFeature
      description: Create a new CheFeature
      operationId: addFeature
      consumes:
      - application/json
      - application/x-yaml
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - in: body
        name: CheFeatureItem
        description: CheFeature item to add
        required: false
        schema:
          $ref: '#/definitions/CheFeature'
      responses:
        201:
          description: The CheFeature successfully created
          schema:
            $ref: '#/definitions/CheFeature'
        403:
          description: 403 The user does not have access to update resource
          schema:
            $ref: '#/definitions/Error'
        404:
          description: 404 The specified resource was not found
          schema:
            $ref: '#/definitions/Error'
        409:
          description: 409 Operation could not be performed because of conflict with prior state.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: 500 Internal server error occurred
          schema:
            $ref: '#/definitions/Error'
  /feature/{name}/{version}:
    get:
      summary: Get CheFeature by name and version
      description: Get CheFeature by name and version
      operationId: searchFeatureByNameAndVersion
      produces:
      - application/x-yaml
      - application/json
      parameters:
      - name: name
        in: path
        description: CheFeature name.
        required: true
        type: string
      - name: version
        in: path
        description: CheFeature version.
        required: true
        type: string
      responses:
        200:
          description: The CheFeature successfully fetched
          schema:
            $ref: '#/definitions/CheFeature'
        500:
          description: 500 Internal server error occurred
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Removes CheFeature by name and version
      description: Removes CheFeature by name and version
      operationId: deleteFeatureByNameAndVersion
      produces:
      - application/x-yaml
      - application/json
      parameters:
      - name: name
        in: path
        description: CheFeature name.
        required: true
        type: string
      - name: version
        in: path
        description: CheFeature version.
        required: true
        type: string
      responses:
        204:
          description: The CheFeature successfully removed
        403:
          description: 403 The user does not have access to update resource
          schema:
            $ref: '#/definitions/Error'
        404:
          description: 404 The specified resource was not found
          schema:
            $ref: '#/definitions/Error'
        409:
          description: 409 Operation could not be performed because of conflict with prior state.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: 500 Internal server error occurred
          schema:
            $ref: '#/definitions/Error'
definitions:
  CheService:
    type: object
    required:
    - apiVersion
    - kind
    - metadata
    - spec
    properties:
      apiVersion:
        type: string
        example: che.eclipse.org/v1
      kind:
        type: string
        example: CheService
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/CheServiceSpec'
    example:
      metadata:
        generation: 6
        finalizers:
        - finalizers
        - finalizers
        resourceVersion: resourceVersion
        annotations:
          key: annotations
        generateName: generateName
        deletionTimestamp: null
        labels:
          key: labels
        ownerReferences:
        - uid: uid
          controller: true
          apiVersion: apiVersion
          kind: kind
          name: name
          blockOwnerDeletion: true
        - uid: uid
          controller: true
          apiVersion: apiVersion
          kind: kind
          name: name
          blockOwnerDeletion: true
        selfLink: selfLink
        deletionGracePeriodSeconds: 0
        uid: uid
        initializers:
          result:
            reason: reason
            metadata:
              continue: continue
              resourceVersion: resourceVersion
              selfLink: selfLink
            apiVersion: apiVersion
            code: 1
            kind: kind
            details:
              uid: uid
              kind: kind
              causes:
              - reason: reason
                field: field
                message: message
              - reason: reason
                field: field
                message: message
              retryAfterSeconds: 5
              name: name
              group: group
            message: message
            status: status
          pending:
          - name: name
          - name: name
        clusterName: clusterName
        creationTimestamp: {}
        name: name
        namespace: namespace
      apiVersion: che.eclipse.org/v1
      kind: CheService
      spec:
        pods:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: null
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: {}
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            dnsPolicy: dnsPolicy
            nodeName: nodeName
            terminationGracePeriodSeconds: 8
            dnsConfig:
              searches:
              - searches
              - searches
              nameservers:
              - nameservers
              - nameservers
              options:
              - name: name
                value: value
              - name: name
                value: value
            hostNetwork: true
            serviceAccountName: serviceAccountName
            imagePullSecrets:
            - name: name
            - name: name
            priorityClassName: priorityClassName
            hostAliases:
            - ip: ip
              hostnames:
              - hostnames
              - hostnames
            - ip: ip
              hostnames:
              - hostnames
              - hostnames
            securityContext:
              runAsUser: 9
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              fsGroup: 9
              supplementalGroups:
              - 6
              - 6
              runAsNonRoot: true
            nodeSelector:
              key: nodeSelector
            hostname: hostname
            tolerations:
            - effect: effect
              tolerationSeconds: 9
              value: value
              key: key
              operator: operator
            - effect: effect
              tolerationSeconds: 9
              value: value
              key: key
              operator: operator
            automountServiceAccountToken: true
            schedulerName: schedulerName
            activeDeadlineSeconds: 3
            hostIPC: true
            volumes:
            - quobyte:
                volume: volume
                registry: registry
                readOnly: true
                user: user
                group: group
              azureFile:
                secretName: secretName
                readOnly: true
                shareName: shareName
              flexVolume:
                driver: driver
                options:
                  key: options
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              secret:
                secretName: secretName
                defaultMode: 3
                optional: true
                items:
                - mode: 6
                  path: path
                  key: key
                - mode: 6
                  path: path
                  key: key
              projected:
                sources:
                - downwardAPI:
                    items:
                    - mode: 2
                      path: path
                      resourceFieldRef:
                        divisor: {}
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 2
                      path: path
                      resourceFieldRef:
                        divisor: {}
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 6
                      path: path
                      key: key
                    - mode: 6
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 6
                      path: path
                      key: key
                    - mode: 6
                      path: path
                      key: key
                - downwardAPI:
                    items:
                    - mode: 2
                      path: path
                      resourceFieldRef:
                        divisor: {}
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 2
                      path: path
                      resourceFieldRef:
                        divisor: {}
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 6
                      path: path
                      key: key
                    - mode: 6
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 6
                      path: path
                      key: key
                    - mode: 6
                      path: path
                      key: key
                defaultMode: 6
              cephfs:
                path: path
                secretRef:
                  name: name
                secretFile: secretFile
                readOnly: true
                user: user
                monitors:
                - monitors
                - monitors
              scaleIO:
                system: system
                protectionDomain: protectionDomain
                sslEnabled: true
                storageMode: storageMode
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                storagePool: storagePool
                gateway: gateway
              emptyDir:
                sizeLimit: null
                medium: medium
              glusterfs:
                path: path
                endpoints: endpoints
                readOnly: true
              gcePersistentDisk:
                partition: 6
                readOnly: true
                pdName: pdName
                fsType: fsType
              photonPersistentDisk:
                pdID: pdID
                fsType: fsType
              azureDisk:
                diskName: diskName
                kind: kind
                readOnly: true
                cachingMode: cachingMode
                diskURI: diskURI
                fsType: fsType
              cinder:
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              downwardAPI:
                defaultMode: 1
                items:
                - mode: 2
                  path: path
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 2
                  path: path
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              awsElasticBlockStore:
                partition: 6
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              flocker:
                datasetName: datasetName
                datasetUUID: datasetUUID
              iscsi:
                chapAuthSession: true
                iscsiInterface: iscsiInterface
                lun: 5
                chapAuthDiscovery: true
                iqn: iqn
                portals:
                - portals
                - portals
                secretRef:
                  name: name
                initiatorName: initiatorName
                readOnly: true
                fsType: fsType
                targetPortal: targetPortal
              rbd:
                image: image
                pool: pool
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                keyring: keyring
                user: user
                monitors:
                - monitors
                - monitors
              configMap:
                defaultMode: 3
                name: name
                optional: true
                items:
                - mode: 6
                  path: path
                  key: key
                - mode: 6
                  path: path
                  key: key
              storageos:
                volumeNamespace: volumeNamespace
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              persistentVolumeClaim:
                claimName: claimName
                readOnly: true
              gitRepo:
                repository: repository
                directory: directory
                revision: revision
              portworxVolume:
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              vsphereVolume:
                storagePolicyName: storagePolicyName
                storagePolicyID: storagePolicyID
                volumePath: volumePath
                fsType: fsType
              fc:
                lun: 6
                targetWWNs:
                - targetWWNs
                - targetWWNs
                readOnly: true
                wwids:
                - wwids
                - wwids
                fsType: fsType
              hostPath:
                path: path
                type: type
            - quobyte:
                volume: volume
                registry: registry
                readOnly: true
                user: user
                group: group
              azureFile:
                secretName: secretName
                readOnly: true
                shareName: shareName
              flexVolume:
                driver: driver
                options:
                  key: options
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              secret:
                secretName: secretName
                defaultMode: 3
                optional: true
                items:
                - mode: 6
                  path: path
                  key: key
                - mode: 6
                  path: path
                  key: key
              projected:
                sources:
                - downwardAPI:
                    items:
                    - mode: 2
                      path: path
                      resourceFieldRef:
                        divisor: {}
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 2
                      path: path
                      resourceFieldRef:
                        divisor: {}
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 6
                      path: path
                      key: key
                    - mode: 6
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 6
                      path: path
                      key: key
                    - mode: 6
                      path: path
                      key: key
                - downwardAPI:
                    items:
                    - mode: 2
                      path: path
                      resourceFieldRef:
                        divisor: {}
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 2
                      path: path
                      resourceFieldRef:
                        divisor: {}
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 6
                      path: path
                      key: key
                    - mode: 6
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 6
                      path: path
                      key: key
                    - mode: 6
                      path: path
                      key: key
                defaultMode: 6
              cephfs:
                path: path
                secretRef:
                  name: name
                secretFile: secretFile
                readOnly: true
                user: user
                monitors:
                - monitors
                - monitors
              scaleIO:
                system: system
                protectionDomain: protectionDomain
                sslEnabled: true
                storageMode: storageMode
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                storagePool: storagePool
                gateway: gateway
              emptyDir:
                sizeLimit: null
                medium: medium
              glusterfs:
                path: path
                endpoints: endpoints
                readOnly: true
              gcePersistentDisk:
                partition: 6
                readOnly: true
                pdName: pdName
                fsType: fsType
              photonPersistentDisk:
                pdID: pdID
                fsType: fsType
              azureDisk:
                diskName: diskName
                kind: kind
                readOnly: true
                cachingMode: cachingMode
                diskURI: diskURI
                fsType: fsType
              cinder:
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              downwardAPI:
                defaultMode: 1
                items:
                - mode: 2
                  path: path
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 2
                  path: path
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              awsElasticBlockStore:
                partition: 6
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              flocker:
                datasetName: datasetName
                datasetUUID: datasetUUID
              iscsi:
                chapAuthSession: true
                iscsiInterface: iscsiInterface
                lun: 5
                chapAuthDiscovery: true
                iqn: iqn
                portals:
                - portals
                - portals
                secretRef:
                  name: name
                initiatorName: initiatorName
                readOnly: true
                fsType: fsType
                targetPortal: targetPortal
              rbd:
                image: image
                pool: pool
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                keyring: keyring
                user: user
                monitors:
                - monitors
                - monitors
              configMap:
                defaultMode: 3
                name: name
                optional: true
                items:
                - mode: 6
                  path: path
                  key: key
                - mode: 6
                  path: path
                  key: key
              storageos:
                volumeNamespace: volumeNamespace
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              persistentVolumeClaim:
                claimName: claimName
                readOnly: true
              gitRepo:
                repository: repository
                directory: directory
                revision: revision
              portworxVolume:
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              vsphereVolume:
                storagePolicyName: storagePolicyName
                storagePolicyID: storagePolicyID
                volumePath: volumePath
                fsType: fsType
              fc:
                lun: 6
                targetWWNs:
                - targetWWNs
                - targetWWNs
                readOnly: true
                wwids:
                - wwids
                - wwids
                fsType: fsType
              hostPath:
                path: path
                type: type
            serviceAccount: serviceAccount
            priority: 5
            restartPolicy: restartPolicy
            subdomain: subdomain
            containers:
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 7
                periodSeconds: 1
                tcpSocket:
                  port: null
                  host: host
                timeoutSeconds: 6
                successThreshold: 1
                initialDelaySeconds: 1
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: null
                limits:
                  key: null
              securityContext:
                privileged: true
                runAsUser: 4
                capabilities:
                  add:
                  - add
                  - add
                  drop:
                  - drop
                  - drop
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 7
                hostPort: 1
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 7
                hostPort: 1
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: mountPropagation
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: mountPropagation
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: null
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: null
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: null
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: null
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 7
                periodSeconds: 1
                tcpSocket:
                  port: null
                  host: host
                timeoutSeconds: 6
                successThreshold: 1
                initialDelaySeconds: 1
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 7
                periodSeconds: 1
                tcpSocket:
                  port: null
                  host: host
                timeoutSeconds: 6
                successThreshold: 1
                initialDelaySeconds: 1
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: null
                limits:
                  key: null
              securityContext:
                privileged: true
                runAsUser: 4
                capabilities:
                  add:
                  - add
                  - add
                  drop:
                  - drop
                  - drop
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 7
                hostPort: 1
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 7
                hostPort: 1
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: mountPropagation
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: mountPropagation
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: null
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: null
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: null
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: null
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 7
                periodSeconds: 1
                tcpSocket:
                  port: null
                  host: host
                timeoutSeconds: 6
                successThreshold: 1
                initialDelaySeconds: 1
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            initContainers:
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 7
                periodSeconds: 1
                tcpSocket:
                  port: null
                  host: host
                timeoutSeconds: 6
                successThreshold: 1
                initialDelaySeconds: 1
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: null
                limits:
                  key: null
              securityContext:
                privileged: true
                runAsUser: 4
                capabilities:
                  add:
                  - add
                  - add
                  drop:
                  - drop
                  - drop
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 7
                hostPort: 1
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 7
                hostPort: 1
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: mountPropagation
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: mountPropagation
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: null
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: null
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: null
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: null
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 7
                periodSeconds: 1
                tcpSocket:
                  port: null
                  host: host
                timeoutSeconds: 6
                successThreshold: 1
                initialDelaySeconds: 1
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 7
                periodSeconds: 1
                tcpSocket:
                  port: null
                  host: host
                timeoutSeconds: 6
                successThreshold: 1
                initialDelaySeconds: 1
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: null
                limits:
                  key: null
              securityContext:
                privileged: true
                runAsUser: 4
                capabilities:
                  add:
                  - add
                  - add
                  drop:
                  - drop
                  - drop
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 7
                hostPort: 1
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 7
                hostPort: 1
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: mountPropagation
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: mountPropagation
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: null
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: null
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: null
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: null
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 7
                periodSeconds: 1
                tcpSocket:
                  port: null
                  host: host
                timeoutSeconds: 6
                successThreshold: 1
                initialDelaySeconds: 1
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  - matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                preferredDuringSchedulingIgnoredDuringExecution:
                - preference:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  weight: 2
                - preference:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  weight: 2
              podAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 4
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 4
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 4
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 4
            hostPID: true
          status:
            phase: phase
            reason: reason
            podIP: podIP
            containerStatuses:
            - image: image
              imageID: imageID
              restartCount: 0
              ready: true
              name: name
              state:
                running:
                  startedAt: null
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 3
                  startedAt: null
                  containerID: containerID
                  message: message
                  signal: 7
                  finishedAt: null
              containerID: containerID
              lastState:
                running:
                  startedAt: null
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 3
                  startedAt: null
                  containerID: containerID
                  message: message
                  signal: 7
                  finishedAt: null
            - image: image
              imageID: imageID
              restartCount: 0
              ready: true
              name: name
              state:
                running:
                  startedAt: null
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 3
                  startedAt: null
                  containerID: containerID
                  message: message
                  signal: 7
                  finishedAt: null
              containerID: containerID
              lastState:
                running:
                  startedAt: null
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 3
                  startedAt: null
                  containerID: containerID
                  message: message
                  signal: 7
                  finishedAt: null
            hostIP: hostIP
            startTime: null
            qosClass: qosClass
            conditions:
            - reason: reason
              lastTransitionTime: null
              message: message
              type: type
              lastProbeTime: null
              status: status
            - reason: reason
              lastTransitionTime: null
              message: message
              type: type
              lastProbeTime: null
              status: status
            message: message
            initContainerStatuses:
            - image: image
              imageID: imageID
              restartCount: 0
              ready: true
              name: name
              state:
                running:
                  startedAt: null
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 3
                  startedAt: null
                  containerID: containerID
                  message: message
                  signal: 7
                  finishedAt: null
              containerID: containerID
              lastState:
                running:
                  startedAt: null
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 3
                  startedAt: null
                  containerID: containerID
                  message: message
                  signal: 7
                  finishedAt: null
            - image: image
              imageID: imageID
              restartCount: 0
              ready: true
              name: name
              state:
                running:
                  startedAt: null
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 3
                  startedAt: null
                  containerID: containerID
                  message: message
                  signal: 7
                  finishedAt: null
              containerID: containerID
              lastState:
                running:
                  startedAt: null
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 3
                  startedAt: null
                  containerID: containerID
                  message: message
                  signal: 7
                  finishedAt: null
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: null
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: {}
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            dnsPolicy: dnsPolicy
            nodeName: nodeName
            terminationGracePeriodSeconds: 8
            dnsConfig:
              searches:
              - searches
              - searches
              nameservers:
              - nameservers
              - nameservers
              options:
              - name: name
                value: value
              - name: name
                value: value
            hostNetwork: true
            serviceAccountName: serviceAccountName
            imagePullSecrets:
            - name: name
            - name: name
            priorityClassName: priorityClassName
            hostAliases:
            - ip: ip
              hostnames:
              - hostnames
              - hostnames
            - ip: ip
              hostnames:
              - hostnames
              - hostnames
            securityContext:
              runAsUser: 9
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              fsGroup: 9
              supplementalGroups:
              - 6
              - 6
              runAsNonRoot: true
            nodeSelector:
              key: nodeSelector
            hostname: hostname
            tolerations:
            - effect: effect
              tolerationSeconds: 9
              value: value
              key: key
              operator: operator
            - effect: effect
              tolerationSeconds: 9
              value: value
              key: key
              operator: operator
            automountServiceAccountToken: true
            schedulerName: schedulerName
            activeDeadlineSeconds: 3
            hostIPC: true
            volumes:
            - quobyte:
                volume: volume
                registry: registry
                readOnly: true
                user: user
                group: group
              azureFile:
                secretName: secretName
                readOnly: true
                shareName: shareName
              flexVolume:
                driver: driver
                options:
                  key: options
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              secret:
                secretName: secretName
                defaultMode: 3
                optional: true
                items:
                - mode: 6
                  path: path
                  key: key
                - mode: 6
                  path: path
                  key: key
              projected:
                sources:
                - downwardAPI:
                    items:
                    - mode: 2
                      path: path
                      resourceFieldRef:
                        divisor: {}
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 2
                      path: path
                      resourceFieldRef:
                        divisor: {}
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 6
                      path: path
                      key: key
                    - mode: 6
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 6
                      path: path
                      key: key
                    - mode: 6
                      path: path
                      key: key
                - downwardAPI:
                    items:
                    - mode: 2
                      path: path
                      resourceFieldRef:
                        divisor: {}
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 2
                      path: path
                      resourceFieldRef:
                        divisor: {}
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 6
                      path: path
                      key: key
                    - mode: 6
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 6
                      path: path
                      key: key
                    - mode: 6
                      path: path
                      key: key
                defaultMode: 6
              cephfs:
                path: path
                secretRef:
                  name: name
                secretFile: secretFile
                readOnly: true
                user: user
                monitors:
                - monitors
                - monitors
              scaleIO:
                system: system
                protectionDomain: protectionDomain
                sslEnabled: true
                storageMode: storageMode
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                storagePool: storagePool
                gateway: gateway
              emptyDir:
                sizeLimit: null
                medium: medium
              glusterfs:
                path: path
                endpoints: endpoints
                readOnly: true
              gcePersistentDisk:
                partition: 6
                readOnly: true
                pdName: pdName
                fsType: fsType
              photonPersistentDisk:
                pdID: pdID
                fsType: fsType
              azureDisk:
                diskName: diskName
                kind: kind
                readOnly: true
                cachingMode: cachingMode
                diskURI: diskURI
                fsType: fsType
              cinder:
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              downwardAPI:
                defaultMode: 1
                items:
                - mode: 2
                  path: path
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 2
                  path: path
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              awsElasticBlockStore:
                partition: 6
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              flocker:
                datasetName: datasetName
                datasetUUID: datasetUUID
              iscsi:
                chapAuthSession: true
                iscsiInterface: iscsiInterface
                lun: 5
                chapAuthDiscovery: true
                iqn: iqn
                portals:
                - portals
                - portals
                secretRef:
                  name: name
                initiatorName: initiatorName
                readOnly: true
                fsType: fsType
                targetPortal: targetPortal
              rbd:
                image: image
                pool: pool
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                keyring: keyring
                user: user
                monitors:
                - monitors
                - monitors
              configMap:
                defaultMode: 3
                name: name
                optional: true
                items:
                - mode: 6
                  path: path
                  key: key
                - mode: 6
                  path: path
                  key: key
              storageos:
                volumeNamespace: volumeNamespace
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              persistentVolumeClaim:
                claimName: claimName
                readOnly: true
              gitRepo:
                repository: repository
                directory: directory
                revision: revision
              portworxVolume:
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              vsphereVolume:
                storagePolicyName: storagePolicyName
                storagePolicyID: storagePolicyID
                volumePath: volumePath
                fsType: fsType
              fc:
                lun: 6
                targetWWNs:
                - targetWWNs
                - targetWWNs
                readOnly: true
                wwids:
                - wwids
                - wwids
                fsType: fsType
              hostPath:
                path: path
                type: type
            - quobyte:
                volume: volume
                registry: registry
                readOnly: true
                user: user
                group: group
              azureFile:
                secretName: secretName
                readOnly: true
                shareName: shareName
              flexVolume:
                driver: driver
                options:
                  key: options
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              secret:
                secretName: secretName
                defaultMode: 3
                optional: true
                items:
                - mode: 6
                  path: path
                  key: key
                - mode: 6
                  path: path
                  key: key
              projected:
                sources:
                - downwardAPI:
                    items:
                    - mode: 2
                      path: path
                      resourceFieldRef:
                        divisor: {}
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 2
                      path: path
                      resourceFieldRef:
                        divisor: {}
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 6
                      path: path
                      key: key
                    - mode: 6
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 6
                      path: path
                      key: key
                    - mode: 6
                      path: path
                      key: key
                - downwardAPI:
                    items:
                    - mode: 2
                      path: path
                      resourceFieldRef:
                        divisor: {}
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 2
                      path: path
                      resourceFieldRef:
                        divisor: {}
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 6
                      path: path
                      key: key
                    - mode: 6
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 6
                      path: path
                      key: key
                    - mode: 6
                      path: path
                      key: key
                defaultMode: 6
              cephfs:
                path: path
                secretRef:
                  name: name
                secretFile: secretFile
                readOnly: true
                user: user
                monitors:
                - monitors
                - monitors
              scaleIO:
                system: system
                protectionDomain: protectionDomain
                sslEnabled: true
                storageMode: storageMode
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                storagePool: storagePool
                gateway: gateway
              emptyDir:
                sizeLimit: null
                medium: medium
              glusterfs:
                path: path
                endpoints: endpoints
                readOnly: true
              gcePersistentDisk:
                partition: 6
                readOnly: true
                pdName: pdName
                fsType: fsType
              photonPersistentDisk:
                pdID: pdID
                fsType: fsType
              azureDisk:
                diskName: diskName
                kind: kind
                readOnly: true
                cachingMode: cachingMode
                diskURI: diskURI
                fsType: fsType
              cinder:
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              downwardAPI:
                defaultMode: 1
                items:
                - mode: 2
                  path: path
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 2
                  path: path
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              awsElasticBlockStore:
                partition: 6
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              flocker:
                datasetName: datasetName
                datasetUUID: datasetUUID
              iscsi:
                chapAuthSession: true
                iscsiInterface: iscsiInterface
                lun: 5
                chapAuthDiscovery: true
                iqn: iqn
                portals:
                - portals
                - portals
                secretRef:
                  name: name
                initiatorName: initiatorName
                readOnly: true
                fsType: fsType
                targetPortal: targetPortal
              rbd:
                image: image
                pool: pool
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                keyring: keyring
                user: user
                monitors:
                - monitors
                - monitors
              configMap:
                defaultMode: 3
                name: name
                optional: true
                items:
                - mode: 6
                  path: path
                  key: key
                - mode: 6
                  path: path
                  key: key
              storageos:
                volumeNamespace: volumeNamespace
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              persistentVolumeClaim:
                claimName: claimName
                readOnly: true
              gitRepo:
                repository: repository
                directory: directory
                revision: revision
              portworxVolume:
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              vsphereVolume:
                storagePolicyName: storagePolicyName
                storagePolicyID: storagePolicyID
                volumePath: volumePath
                fsType: fsType
              fc:
                lun: 6
                targetWWNs:
                - targetWWNs
                - targetWWNs
                readOnly: true
                wwids:
                - wwids
                - wwids
                fsType: fsType
              hostPath:
                path: path
                type: type
            serviceAccount: serviceAccount
            priority: 5
            restartPolicy: restartPolicy
            subdomain: subdomain
            containers:
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 7
                periodSeconds: 1
                tcpSocket:
                  port: null
                  host: host
                timeoutSeconds: 6
                successThreshold: 1
                initialDelaySeconds: 1
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: null
                limits:
                  key: null
              securityContext:
                privileged: true
                runAsUser: 4
                capabilities:
                  add:
                  - add
                  - add
                  drop:
                  - drop
                  - drop
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 7
                hostPort: 1
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 7
                hostPort: 1
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: mountPropagation
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: mountPropagation
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: null
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: null
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: null
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: null
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 7
                periodSeconds: 1
                tcpSocket:
                  port: null
                  host: host
                timeoutSeconds: 6
                successThreshold: 1
                initialDelaySeconds: 1
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 7
                periodSeconds: 1
                tcpSocket:
                  port: null
                  host: host
                timeoutSeconds: 6
                successThreshold: 1
                initialDelaySeconds: 1
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: null
                limits:
                  key: null
              securityContext:
                privileged: true
                runAsUser: 4
                capabilities:
                  add:
                  - add
                  - add
                  drop:
                  - drop
                  - drop
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 7
                hostPort: 1
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 7
                hostPort: 1
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: mountPropagation
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: mountPropagation
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: null
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: null
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: null
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: null
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 7
                periodSeconds: 1
                tcpSocket:
                  port: null
                  host: host
                timeoutSeconds: 6
                successThreshold: 1
                initialDelaySeconds: 1
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            initContainers:
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 7
                periodSeconds: 1
                tcpSocket:
                  port: null
                  host: host
                timeoutSeconds: 6
                successThreshold: 1
                initialDelaySeconds: 1
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: null
                limits:
                  key: null
              securityContext:
                privileged: true
                runAsUser: 4
                capabilities:
                  add:
                  - add
                  - add
                  drop:
                  - drop
                  - drop
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 7
                hostPort: 1
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 7
                hostPort: 1
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: mountPropagation
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: mountPropagation
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: null
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: null
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: null
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: null
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 7
                periodSeconds: 1
                tcpSocket:
                  port: null
                  host: host
                timeoutSeconds: 6
                successThreshold: 1
                initialDelaySeconds: 1
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 7
                periodSeconds: 1
                tcpSocket:
                  port: null
                  host: host
                timeoutSeconds: 6
                successThreshold: 1
                initialDelaySeconds: 1
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests:
                  key: null
                limits:
                  key: null
              securityContext:
                privileged: true
                runAsUser: 4
                capabilities:
                  add:
                  - add
                  - add
                  drop:
                  - drop
                  - drop
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 7
                hostPort: 1
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 7
                hostPort: 1
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: mountPropagation
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: mountPropagation
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: null
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: null
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: null
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: null
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 7
                periodSeconds: 1
                tcpSocket:
                  port: null
                  host: host
                timeoutSeconds: 6
                successThreshold: 1
                initialDelaySeconds: 1
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  - matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                preferredDuringSchedulingIgnoredDuringExecution:
                - preference:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  weight: 2
                - preference:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  weight: 2
              podAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 4
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 4
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 4
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 4
            hostPID: true
          status:
            phase: phase
            reason: reason
            podIP: podIP
            containerStatuses:
            - image: image
              imageID: imageID
              restartCount: 0
              ready: true
              name: name
              state:
                running:
                  startedAt: null
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 3
                  startedAt: null
                  containerID: containerID
                  message: message
                  signal: 7
                  finishedAt: null
              containerID: containerID
              lastState:
                running:
                  startedAt: null
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 3
                  startedAt: null
                  containerID: containerID
                  message: message
                  signal: 7
                  finishedAt: null
            - image: image
              imageID: imageID
              restartCount: 0
              ready: true
              name: name
              state:
                running:
                  startedAt: null
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 3
                  startedAt: null
                  containerID: containerID
                  message: message
                  signal: 7
                  finishedAt: null
              containerID: containerID
              lastState:
                running:
                  startedAt: null
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 3
                  startedAt: null
                  containerID: containerID
                  message: message
                  signal: 7
                  finishedAt: null
            hostIP: hostIP
            startTime: null
            qosClass: qosClass
            conditions:
            - reason: reason
              lastTransitionTime: null
              message: message
              type: type
              lastProbeTime: null
              status: status
            - reason: reason
              lastTransitionTime: null
              message: message
              type: type
              lastProbeTime: null
              status: status
            message: message
            initContainerStatuses:
            - image: image
              imageID: imageID
              restartCount: 0
              ready: true
              name: name
              state:
                running:
                  startedAt: null
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 3
                  startedAt: null
                  containerID: containerID
                  message: message
                  signal: 7
                  finishedAt: null
              containerID: containerID
              lastState:
                running:
                  startedAt: null
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 3
                  startedAt: null
                  containerID: containerID
                  message: message
                  signal: 7
                  finishedAt: null
            - image: image
              imageID: imageID
              restartCount: 0
              ready: true
              name: name
              state:
                running:
                  startedAt: null
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 3
                  startedAt: null
                  containerID: containerID
                  message: message
                  signal: 7
                  finishedAt: null
              containerID: containerID
              lastState:
                running:
                  startedAt: null
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 3
                  startedAt: null
                  containerID: containerID
                  message: message
                  signal: 7
                  finishedAt: null
        services:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: null
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: {}
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            healthCheckNodePort: 5
            externalIPs:
            - externalIPs
            - externalIPs
            sessionAffinity: sessionAffinity
            ports:
            - protocol: protocol
              port: 7
              name: name
              nodePort: 2
              targetPort: {}
            - protocol: protocol
              port: 7
              name: name
              nodePort: 2
              targetPort: {}
            type: type
            sessionAffinityConfig:
              clientIP:
                timeoutSeconds: 9
            loadBalancerIP: loadBalancerIP
            externalName: externalName
            loadBalancerSourceRanges:
            - loadBalancerSourceRanges
            - loadBalancerSourceRanges
            externalTrafficPolicy: externalTrafficPolicy
            selector:
              key: selector
            publishNotReadyAddresses: true
            clusterIP: clusterIP
          status:
            loadBalancer:
              ingress:
              - hostname: hostname
                ip: ip
              - hostname: hostname
                ip: ip
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: null
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: {}
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            healthCheckNodePort: 5
            externalIPs:
            - externalIPs
            - externalIPs
            sessionAffinity: sessionAffinity
            ports:
            - protocol: protocol
              port: 7
              name: name
              nodePort: 2
              targetPort: {}
            - protocol: protocol
              port: 7
              name: name
              nodePort: 2
              targetPort: {}
            type: type
            sessionAffinityConfig:
              clientIP:
                timeoutSeconds: 9
            loadBalancerIP: loadBalancerIP
            externalName: externalName
            loadBalancerSourceRanges:
            - loadBalancerSourceRanges
            - loadBalancerSourceRanges
            externalTrafficPolicy: externalTrafficPolicy
            selector:
              key: selector
            publishNotReadyAddresses: true
            clusterIP: clusterIP
          status:
            loadBalancer:
              ingress:
              - hostname: hostname
                ip: ip
              - hostname: hostname
                ip: ip
        version: 1.0.0
        commands:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: null
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: {}
            name: name
            namespace: namespace
          apiVersion: che.eclipse.org/v1
          kind: CheCommand
          spec:
            working-dir: $(project)
            target-label-selector: che.eclipse.org/container-name= theia-maven-sidecar
            command:
            - mvn
            - mvn
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: null
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: {}
            name: name
            namespace: namespace
          apiVersion: che.eclipse.org/v1
          kind: CheCommand
          spec:
            working-dir: $(project)
            target-label-selector: che.eclipse.org/container-name= theia-maven-sidecar
            command:
            - mvn
            - mvn
  CheServiceSpec:
    type: object
    required:
    - commands
    - pods
    - services
    - version
    properties:
      version:
        type: string
        example: 1.0.0
      services:
        type: array
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.Service'
      pods:
        type: array
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.Pod'
      commands:
        type: array
        items:
          $ref: '#/definitions/CheCommand'
    example:
      pods:
      - metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations:
            key: annotations
          generateName: generateName
          deletionTimestamp: null
          labels:
            key: labels
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: {}
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          dnsPolicy: dnsPolicy
          nodeName: nodeName
          terminationGracePeriodSeconds: 8
          dnsConfig:
            searches:
            - searches
            - searches
            nameservers:
            - nameservers
            - nameservers
            options:
            - name: name
              value: value
            - name: name
              value: value
          hostNetwork: true
          serviceAccountName: serviceAccountName
          imagePullSecrets:
          - name: name
          - name: name
          priorityClassName: priorityClassName
          hostAliases:
          - ip: ip
            hostnames:
            - hostnames
            - hostnames
          - ip: ip
            hostnames:
            - hostnames
            - hostnames
          securityContext:
            runAsUser: 9
            seLinuxOptions:
              role: role
              level: level
              type: type
              user: user
            fsGroup: 9
            supplementalGroups:
            - 6
            - 6
            runAsNonRoot: true
          nodeSelector:
            key: nodeSelector
          hostname: hostname
          tolerations:
          - effect: effect
            tolerationSeconds: 9
            value: value
            key: key
            operator: operator
          - effect: effect
            tolerationSeconds: 9
            value: value
            key: key
            operator: operator
          automountServiceAccountToken: true
          schedulerName: schedulerName
          activeDeadlineSeconds: 3
          hostIPC: true
          volumes:
          - quobyte:
              volume: volume
              registry: registry
              readOnly: true
              user: user
              group: group
            azureFile:
              secretName: secretName
              readOnly: true
              shareName: shareName
            flexVolume:
              driver: driver
              options:
                key: options
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
            secret:
              secretName: secretName
              defaultMode: 3
              optional: true
              items:
              - mode: 6
                path: path
                key: key
              - mode: 6
                path: path
                key: key
            projected:
              sources:
              - downwardAPI:
                  items:
                  - mode: 2
                    path: path
                    resourceFieldRef:
                      divisor: {}
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 2
                    path: path
                    resourceFieldRef:
                      divisor: {}
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                configMap:
                  name: name
                  optional: true
                  items:
                  - mode: 6
                    path: path
                    key: key
                  - mode: 6
                    path: path
                    key: key
                secret:
                  name: name
                  optional: true
                  items:
                  - mode: 6
                    path: path
                    key: key
                  - mode: 6
                    path: path
                    key: key
              - downwardAPI:
                  items:
                  - mode: 2
                    path: path
                    resourceFieldRef:
                      divisor: {}
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 2
                    path: path
                    resourceFieldRef:
                      divisor: {}
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                configMap:
                  name: name
                  optional: true
                  items:
                  - mode: 6
                    path: path
                    key: key
                  - mode: 6
                    path: path
                    key: key
                secret:
                  name: name
                  optional: true
                  items:
                  - mode: 6
                    path: path
                    key: key
                  - mode: 6
                    path: path
                    key: key
              defaultMode: 6
            cephfs:
              path: path
              secretRef:
                name: name
              secretFile: secretFile
              readOnly: true
              user: user
              monitors:
              - monitors
              - monitors
            scaleIO:
              system: system
              protectionDomain: protectionDomain
              sslEnabled: true
              storageMode: storageMode
              volumeName: volumeName
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
              storagePool: storagePool
              gateway: gateway
            emptyDir:
              sizeLimit: null
              medium: medium
            glusterfs:
              path: path
              endpoints: endpoints
              readOnly: true
            gcePersistentDisk:
              partition: 6
              readOnly: true
              pdName: pdName
              fsType: fsType
            photonPersistentDisk:
              pdID: pdID
              fsType: fsType
            azureDisk:
              diskName: diskName
              kind: kind
              readOnly: true
              cachingMode: cachingMode
              diskURI: diskURI
              fsType: fsType
            cinder:
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            downwardAPI:
              defaultMode: 1
              items:
              - mode: 2
                path: path
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
              - mode: 2
                path: path
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            awsElasticBlockStore:
              partition: 6
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            flocker:
              datasetName: datasetName
              datasetUUID: datasetUUID
            iscsi:
              chapAuthSession: true
              iscsiInterface: iscsiInterface
              lun: 5
              chapAuthDiscovery: true
              iqn: iqn
              portals:
              - portals
              - portals
              secretRef:
                name: name
              initiatorName: initiatorName
              readOnly: true
              fsType: fsType
              targetPortal: targetPortal
            rbd:
              image: image
              pool: pool
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
              keyring: keyring
              user: user
              monitors:
              - monitors
              - monitors
            configMap:
              defaultMode: 3
              name: name
              optional: true
              items:
              - mode: 6
                path: path
                key: key
              - mode: 6
                path: path
                key: key
            storageos:
              volumeNamespace: volumeNamespace
              volumeName: volumeName
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
            name: name
            nfs:
              path: path
              server: server
              readOnly: true
            persistentVolumeClaim:
              claimName: claimName
              readOnly: true
            gitRepo:
              repository: repository
              directory: directory
              revision: revision
            portworxVolume:
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            vsphereVolume:
              storagePolicyName: storagePolicyName
              storagePolicyID: storagePolicyID
              volumePath: volumePath
              fsType: fsType
            fc:
              lun: 6
              targetWWNs:
              - targetWWNs
              - targetWWNs
              readOnly: true
              wwids:
              - wwids
              - wwids
              fsType: fsType
            hostPath:
              path: path
              type: type
          - quobyte:
              volume: volume
              registry: registry
              readOnly: true
              user: user
              group: group
            azureFile:
              secretName: secretName
              readOnly: true
              shareName: shareName
            flexVolume:
              driver: driver
              options:
                key: options
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
            secret:
              secretName: secretName
              defaultMode: 3
              optional: true
              items:
              - mode: 6
                path: path
                key: key
              - mode: 6
                path: path
                key: key
            projected:
              sources:
              - downwardAPI:
                  items:
                  - mode: 2
                    path: path
                    resourceFieldRef:
                      divisor: {}
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 2
                    path: path
                    resourceFieldRef:
                      divisor: {}
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                configMap:
                  name: name
                  optional: true
                  items:
                  - mode: 6
                    path: path
                    key: key
                  - mode: 6
                    path: path
                    key: key
                secret:
                  name: name
                  optional: true
                  items:
                  - mode: 6
                    path: path
                    key: key
                  - mode: 6
                    path: path
                    key: key
              - downwardAPI:
                  items:
                  - mode: 2
                    path: path
                    resourceFieldRef:
                      divisor: {}
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 2
                    path: path
                    resourceFieldRef:
                      divisor: {}
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                configMap:
                  name: name
                  optional: true
                  items:
                  - mode: 6
                    path: path
                    key: key
                  - mode: 6
                    path: path
                    key: key
                secret:
                  name: name
                  optional: true
                  items:
                  - mode: 6
                    path: path
                    key: key
                  - mode: 6
                    path: path
                    key: key
              defaultMode: 6
            cephfs:
              path: path
              secretRef:
                name: name
              secretFile: secretFile
              readOnly: true
              user: user
              monitors:
              - monitors
              - monitors
            scaleIO:
              system: system
              protectionDomain: protectionDomain
              sslEnabled: true
              storageMode: storageMode
              volumeName: volumeName
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
              storagePool: storagePool
              gateway: gateway
            emptyDir:
              sizeLimit: null
              medium: medium
            glusterfs:
              path: path
              endpoints: endpoints
              readOnly: true
            gcePersistentDisk:
              partition: 6
              readOnly: true
              pdName: pdName
              fsType: fsType
            photonPersistentDisk:
              pdID: pdID
              fsType: fsType
            azureDisk:
              diskName: diskName
              kind: kind
              readOnly: true
              cachingMode: cachingMode
              diskURI: diskURI
              fsType: fsType
            cinder:
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            downwardAPI:
              defaultMode: 1
              items:
              - mode: 2
                path: path
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
              - mode: 2
                path: path
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            awsElasticBlockStore:
              partition: 6
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            flocker:
              datasetName: datasetName
              datasetUUID: datasetUUID
            iscsi:
              chapAuthSession: true
              iscsiInterface: iscsiInterface
              lun: 5
              chapAuthDiscovery: true
              iqn: iqn
              portals:
              - portals
              - portals
              secretRef:
                name: name
              initiatorName: initiatorName
              readOnly: true
              fsType: fsType
              targetPortal: targetPortal
            rbd:
              image: image
              pool: pool
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
              keyring: keyring
              user: user
              monitors:
              - monitors
              - monitors
            configMap:
              defaultMode: 3
              name: name
              optional: true
              items:
              - mode: 6
                path: path
                key: key
              - mode: 6
                path: path
                key: key
            storageos:
              volumeNamespace: volumeNamespace
              volumeName: volumeName
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
            name: name
            nfs:
              path: path
              server: server
              readOnly: true
            persistentVolumeClaim:
              claimName: claimName
              readOnly: true
            gitRepo:
              repository: repository
              directory: directory
              revision: revision
            portworxVolume:
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            vsphereVolume:
              storagePolicyName: storagePolicyName
              storagePolicyID: storagePolicyID
              volumePath: volumePath
              fsType: fsType
            fc:
              lun: 6
              targetWWNs:
              - targetWWNs
              - targetWWNs
              readOnly: true
              wwids:
              - wwids
              - wwids
              fsType: fsType
            hostPath:
              path: path
              type: type
          serviceAccount: serviceAccount
          priority: 5
          restartPolicy: restartPolicy
          subdomain: subdomain
          containers:
          - volumeDevices:
            - devicePath: devicePath
              name: name
            - devicePath: devicePath
              name: name
            image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 7
              periodSeconds: 1
              tcpSocket:
                port: null
                host: host
              timeoutSeconds: 6
              successThreshold: 1
              initialDelaySeconds: 1
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdin: true
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests:
                key: null
              limits:
                key: null
            securityContext:
              privileged: true
              runAsUser: 4
              capabilities:
                add:
                - add
                - add
                drop:
                - drop
                - drop
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              allowPrivilegeEscalation: true
              runAsNonRoot: true
              readOnlyRootFilesystem: true
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            ports:
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 7
              hostPort: 1
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 7
              hostPort: 1
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              mountPropagation: mountPropagation
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              mountPropagation: mountPropagation
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            lifecycle:
              postStart:
                tcpSocket:
                  port: null
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              preStop:
                tcpSocket:
                  port: null
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
            name: name
            tty: true
            readinessProbe:
              failureThreshold: 7
              periodSeconds: 1
              tcpSocket:
                port: null
                host: host
              timeoutSeconds: 6
              successThreshold: 1
              initialDelaySeconds: 1
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdinOnce: true
            envFrom:
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
          - volumeDevices:
            - devicePath: devicePath
              name: name
            - devicePath: devicePath
              name: name
            image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 7
              periodSeconds: 1
              tcpSocket:
                port: null
                host: host
              timeoutSeconds: 6
              successThreshold: 1
              initialDelaySeconds: 1
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdin: true
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests:
                key: null
              limits:
                key: null
            securityContext:
              privileged: true
              runAsUser: 4
              capabilities:
                add:
                - add
                - add
                drop:
                - drop
                - drop
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              allowPrivilegeEscalation: true
              runAsNonRoot: true
              readOnlyRootFilesystem: true
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            ports:
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 7
              hostPort: 1
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 7
              hostPort: 1
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              mountPropagation: mountPropagation
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              mountPropagation: mountPropagation
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            lifecycle:
              postStart:
                tcpSocket:
                  port: null
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              preStop:
                tcpSocket:
                  port: null
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
            name: name
            tty: true
            readinessProbe:
              failureThreshold: 7
              periodSeconds: 1
              tcpSocket:
                port: null
                host: host
              timeoutSeconds: 6
              successThreshold: 1
              initialDelaySeconds: 1
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdinOnce: true
            envFrom:
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
          initContainers:
          - volumeDevices:
            - devicePath: devicePath
              name: name
            - devicePath: devicePath
              name: name
            image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 7
              periodSeconds: 1
              tcpSocket:
                port: null
                host: host
              timeoutSeconds: 6
              successThreshold: 1
              initialDelaySeconds: 1
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdin: true
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests:
                key: null
              limits:
                key: null
            securityContext:
              privileged: true
              runAsUser: 4
              capabilities:
                add:
                - add
                - add
                drop:
                - drop
                - drop
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              allowPrivilegeEscalation: true
              runAsNonRoot: true
              readOnlyRootFilesystem: true
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            ports:
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 7
              hostPort: 1
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 7
              hostPort: 1
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              mountPropagation: mountPropagation
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              mountPropagation: mountPropagation
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            lifecycle:
              postStart:
                tcpSocket:
                  port: null
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              preStop:
                tcpSocket:
                  port: null
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
            name: name
            tty: true
            readinessProbe:
              failureThreshold: 7
              periodSeconds: 1
              tcpSocket:
                port: null
                host: host
              timeoutSeconds: 6
              successThreshold: 1
              initialDelaySeconds: 1
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdinOnce: true
            envFrom:
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
          - volumeDevices:
            - devicePath: devicePath
              name: name
            - devicePath: devicePath
              name: name
            image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 7
              periodSeconds: 1
              tcpSocket:
                port: null
                host: host
              timeoutSeconds: 6
              successThreshold: 1
              initialDelaySeconds: 1
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdin: true
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests:
                key: null
              limits:
                key: null
            securityContext:
              privileged: true
              runAsUser: 4
              capabilities:
                add:
                - add
                - add
                drop:
                - drop
                - drop
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              allowPrivilegeEscalation: true
              runAsNonRoot: true
              readOnlyRootFilesystem: true
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            ports:
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 7
              hostPort: 1
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 7
              hostPort: 1
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              mountPropagation: mountPropagation
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              mountPropagation: mountPropagation
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            lifecycle:
              postStart:
                tcpSocket:
                  port: null
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              preStop:
                tcpSocket:
                  port: null
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
            name: name
            tty: true
            readinessProbe:
              failureThreshold: 7
              periodSeconds: 1
              tcpSocket:
                port: null
                host: host
              timeoutSeconds: 6
              successThreshold: 1
              initialDelaySeconds: 1
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdinOnce: true
            envFrom:
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                - matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                weight: 2
              - preference:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                weight: 2
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              - labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                weight: 4
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                weight: 4
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              - labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                weight: 4
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                weight: 4
          hostPID: true
        status:
          phase: phase
          reason: reason
          podIP: podIP
          containerStatuses:
          - image: image
            imageID: imageID
            restartCount: 0
            ready: true
            name: name
            state:
              running:
                startedAt: null
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 3
                startedAt: null
                containerID: containerID
                message: message
                signal: 7
                finishedAt: null
            containerID: containerID
            lastState:
              running:
                startedAt: null
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 3
                startedAt: null
                containerID: containerID
                message: message
                signal: 7
                finishedAt: null
          - image: image
            imageID: imageID
            restartCount: 0
            ready: true
            name: name
            state:
              running:
                startedAt: null
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 3
                startedAt: null
                containerID: containerID
                message: message
                signal: 7
                finishedAt: null
            containerID: containerID
            lastState:
              running:
                startedAt: null
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 3
                startedAt: null
                containerID: containerID
                message: message
                signal: 7
                finishedAt: null
          hostIP: hostIP
          startTime: null
          qosClass: qosClass
          conditions:
          - reason: reason
            lastTransitionTime: null
            message: message
            type: type
            lastProbeTime: null
            status: status
          - reason: reason
            lastTransitionTime: null
            message: message
            type: type
            lastProbeTime: null
            status: status
          message: message
          initContainerStatuses:
          - image: image
            imageID: imageID
            restartCount: 0
            ready: true
            name: name
            state:
              running:
                startedAt: null
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 3
                startedAt: null
                containerID: containerID
                message: message
                signal: 7
                finishedAt: null
            containerID: containerID
            lastState:
              running:
                startedAt: null
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 3
                startedAt: null
                containerID: containerID
                message: message
                signal: 7
                finishedAt: null
          - image: image
            imageID: imageID
            restartCount: 0
            ready: true
            name: name
            state:
              running:
                startedAt: null
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 3
                startedAt: null
                containerID: containerID
                message: message
                signal: 7
                finishedAt: null
            containerID: containerID
            lastState:
              running:
                startedAt: null
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 3
                startedAt: null
                containerID: containerID
                message: message
                signal: 7
                finishedAt: null
      - metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations:
            key: annotations
          generateName: generateName
          deletionTimestamp: null
          labels:
            key: labels
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: {}
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          dnsPolicy: dnsPolicy
          nodeName: nodeName
          terminationGracePeriodSeconds: 8
          dnsConfig:
            searches:
            - searches
            - searches
            nameservers:
            - nameservers
            - nameservers
            options:
            - name: name
              value: value
            - name: name
              value: value
          hostNetwork: true
          serviceAccountName: serviceAccountName
          imagePullSecrets:
          - name: name
          - name: name
          priorityClassName: priorityClassName
          hostAliases:
          - ip: ip
            hostnames:
            - hostnames
            - hostnames
          - ip: ip
            hostnames:
            - hostnames
            - hostnames
          securityContext:
            runAsUser: 9
            seLinuxOptions:
              role: role
              level: level
              type: type
              user: user
            fsGroup: 9
            supplementalGroups:
            - 6
            - 6
            runAsNonRoot: true
          nodeSelector:
            key: nodeSelector
          hostname: hostname
          tolerations:
          - effect: effect
            tolerationSeconds: 9
            value: value
            key: key
            operator: operator
          - effect: effect
            tolerationSeconds: 9
            value: value
            key: key
            operator: operator
          automountServiceAccountToken: true
          schedulerName: schedulerName
          activeDeadlineSeconds: 3
          hostIPC: true
          volumes:
          - quobyte:
              volume: volume
              registry: registry
              readOnly: true
              user: user
              group: group
            azureFile:
              secretName: secretName
              readOnly: true
              shareName: shareName
            flexVolume:
              driver: driver
              options:
                key: options
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
            secret:
              secretName: secretName
              defaultMode: 3
              optional: true
              items:
              - mode: 6
                path: path
                key: key
              - mode: 6
                path: path
                key: key
            projected:
              sources:
              - downwardAPI:
                  items:
                  - mode: 2
                    path: path
                    resourceFieldRef:
                      divisor: {}
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 2
                    path: path
                    resourceFieldRef:
                      divisor: {}
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                configMap:
                  name: name
                  optional: true
                  items:
                  - mode: 6
                    path: path
                    key: key
                  - mode: 6
                    path: path
                    key: key
                secret:
                  name: name
                  optional: true
                  items:
                  - mode: 6
                    path: path
                    key: key
                  - mode: 6
                    path: path
                    key: key
              - downwardAPI:
                  items:
                  - mode: 2
                    path: path
                    resourceFieldRef:
                      divisor: {}
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 2
                    path: path
                    resourceFieldRef:
                      divisor: {}
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                configMap:
                  name: name
                  optional: true
                  items:
                  - mode: 6
                    path: path
                    key: key
                  - mode: 6
                    path: path
                    key: key
                secret:
                  name: name
                  optional: true
                  items:
                  - mode: 6
                    path: path
                    key: key
                  - mode: 6
                    path: path
                    key: key
              defaultMode: 6
            cephfs:
              path: path
              secretRef:
                name: name
              secretFile: secretFile
              readOnly: true
              user: user
              monitors:
              - monitors
              - monitors
            scaleIO:
              system: system
              protectionDomain: protectionDomain
              sslEnabled: true
              storageMode: storageMode
              volumeName: volumeName
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
              storagePool: storagePool
              gateway: gateway
            emptyDir:
              sizeLimit: null
              medium: medium
            glusterfs:
              path: path
              endpoints: endpoints
              readOnly: true
            gcePersistentDisk:
              partition: 6
              readOnly: true
              pdName: pdName
              fsType: fsType
            photonPersistentDisk:
              pdID: pdID
              fsType: fsType
            azureDisk:
              diskName: diskName
              kind: kind
              readOnly: true
              cachingMode: cachingMode
              diskURI: diskURI
              fsType: fsType
            cinder:
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            downwardAPI:
              defaultMode: 1
              items:
              - mode: 2
                path: path
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
              - mode: 2
                path: path
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            awsElasticBlockStore:
              partition: 6
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            flocker:
              datasetName: datasetName
              datasetUUID: datasetUUID
            iscsi:
              chapAuthSession: true
              iscsiInterface: iscsiInterface
              lun: 5
              chapAuthDiscovery: true
              iqn: iqn
              portals:
              - portals
              - portals
              secretRef:
                name: name
              initiatorName: initiatorName
              readOnly: true
              fsType: fsType
              targetPortal: targetPortal
            rbd:
              image: image
              pool: pool
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
              keyring: keyring
              user: user
              monitors:
              - monitors
              - monitors
            configMap:
              defaultMode: 3
              name: name
              optional: true
              items:
              - mode: 6
                path: path
                key: key
              - mode: 6
                path: path
                key: key
            storageos:
              volumeNamespace: volumeNamespace
              volumeName: volumeName
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
            name: name
            nfs:
              path: path
              server: server
              readOnly: true
            persistentVolumeClaim:
              claimName: claimName
              readOnly: true
            gitRepo:
              repository: repository
              directory: directory
              revision: revision
            portworxVolume:
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            vsphereVolume:
              storagePolicyName: storagePolicyName
              storagePolicyID: storagePolicyID
              volumePath: volumePath
              fsType: fsType
            fc:
              lun: 6
              targetWWNs:
              - targetWWNs
              - targetWWNs
              readOnly: true
              wwids:
              - wwids
              - wwids
              fsType: fsType
            hostPath:
              path: path
              type: type
          - quobyte:
              volume: volume
              registry: registry
              readOnly: true
              user: user
              group: group
            azureFile:
              secretName: secretName
              readOnly: true
              shareName: shareName
            flexVolume:
              driver: driver
              options:
                key: options
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
            secret:
              secretName: secretName
              defaultMode: 3
              optional: true
              items:
              - mode: 6
                path: path
                key: key
              - mode: 6
                path: path
                key: key
            projected:
              sources:
              - downwardAPI:
                  items:
                  - mode: 2
                    path: path
                    resourceFieldRef:
                      divisor: {}
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 2
                    path: path
                    resourceFieldRef:
                      divisor: {}
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                configMap:
                  name: name
                  optional: true
                  items:
                  - mode: 6
                    path: path
                    key: key
                  - mode: 6
                    path: path
                    key: key
                secret:
                  name: name
                  optional: true
                  items:
                  - mode: 6
                    path: path
                    key: key
                  - mode: 6
                    path: path
                    key: key
              - downwardAPI:
                  items:
                  - mode: 2
                    path: path
                    resourceFieldRef:
                      divisor: {}
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 2
                    path: path
                    resourceFieldRef:
                      divisor: {}
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                configMap:
                  name: name
                  optional: true
                  items:
                  - mode: 6
                    path: path
                    key: key
                  - mode: 6
                    path: path
                    key: key
                secret:
                  name: name
                  optional: true
                  items:
                  - mode: 6
                    path: path
                    key: key
                  - mode: 6
                    path: path
                    key: key
              defaultMode: 6
            cephfs:
              path: path
              secretRef:
                name: name
              secretFile: secretFile
              readOnly: true
              user: user
              monitors:
              - monitors
              - monitors
            scaleIO:
              system: system
              protectionDomain: protectionDomain
              sslEnabled: true
              storageMode: storageMode
              volumeName: volumeName
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
              storagePool: storagePool
              gateway: gateway
            emptyDir:
              sizeLimit: null
              medium: medium
            glusterfs:
              path: path
              endpoints: endpoints
              readOnly: true
            gcePersistentDisk:
              partition: 6
              readOnly: true
              pdName: pdName
              fsType: fsType
            photonPersistentDisk:
              pdID: pdID
              fsType: fsType
            azureDisk:
              diskName: diskName
              kind: kind
              readOnly: true
              cachingMode: cachingMode
              diskURI: diskURI
              fsType: fsType
            cinder:
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            downwardAPI:
              defaultMode: 1
              items:
              - mode: 2
                path: path
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
              - mode: 2
                path: path
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            awsElasticBlockStore:
              partition: 6
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            flocker:
              datasetName: datasetName
              datasetUUID: datasetUUID
            iscsi:
              chapAuthSession: true
              iscsiInterface: iscsiInterface
              lun: 5
              chapAuthDiscovery: true
              iqn: iqn
              portals:
              - portals
              - portals
              secretRef:
                name: name
              initiatorName: initiatorName
              readOnly: true
              fsType: fsType
              targetPortal: targetPortal
            rbd:
              image: image
              pool: pool
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
              keyring: keyring
              user: user
              monitors:
              - monitors
              - monitors
            configMap:
              defaultMode: 3
              name: name
              optional: true
              items:
              - mode: 6
                path: path
                key: key
              - mode: 6
                path: path
                key: key
            storageos:
              volumeNamespace: volumeNamespace
              volumeName: volumeName
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
            name: name
            nfs:
              path: path
              server: server
              readOnly: true
            persistentVolumeClaim:
              claimName: claimName
              readOnly: true
            gitRepo:
              repository: repository
              directory: directory
              revision: revision
            portworxVolume:
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            vsphereVolume:
              storagePolicyName: storagePolicyName
              storagePolicyID: storagePolicyID
              volumePath: volumePath
              fsType: fsType
            fc:
              lun: 6
              targetWWNs:
              - targetWWNs
              - targetWWNs
              readOnly: true
              wwids:
              - wwids
              - wwids
              fsType: fsType
            hostPath:
              path: path
              type: type
          serviceAccount: serviceAccount
          priority: 5
          restartPolicy: restartPolicy
          subdomain: subdomain
          containers:
          - volumeDevices:
            - devicePath: devicePath
              name: name
            - devicePath: devicePath
              name: name
            image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 7
              periodSeconds: 1
              tcpSocket:
                port: null
                host: host
              timeoutSeconds: 6
              successThreshold: 1
              initialDelaySeconds: 1
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdin: true
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests:
                key: null
              limits:
                key: null
            securityContext:
              privileged: true
              runAsUser: 4
              capabilities:
                add:
                - add
                - add
                drop:
                - drop
                - drop
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              allowPrivilegeEscalation: true
              runAsNonRoot: true
              readOnlyRootFilesystem: true
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            ports:
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 7
              hostPort: 1
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 7
              hostPort: 1
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              mountPropagation: mountPropagation
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              mountPropagation: mountPropagation
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            lifecycle:
              postStart:
                tcpSocket:
                  port: null
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              preStop:
                tcpSocket:
                  port: null
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
            name: name
            tty: true
            readinessProbe:
              failureThreshold: 7
              periodSeconds: 1
              tcpSocket:
                port: null
                host: host
              timeoutSeconds: 6
              successThreshold: 1
              initialDelaySeconds: 1
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdinOnce: true
            envFrom:
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
          - volumeDevices:
            - devicePath: devicePath
              name: name
            - devicePath: devicePath
              name: name
            image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 7
              periodSeconds: 1
              tcpSocket:
                port: null
                host: host
              timeoutSeconds: 6
              successThreshold: 1
              initialDelaySeconds: 1
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdin: true
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests:
                key: null
              limits:
                key: null
            securityContext:
              privileged: true
              runAsUser: 4
              capabilities:
                add:
                - add
                - add
                drop:
                - drop
                - drop
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              allowPrivilegeEscalation: true
              runAsNonRoot: true
              readOnlyRootFilesystem: true
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            ports:
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 7
              hostPort: 1
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 7
              hostPort: 1
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              mountPropagation: mountPropagation
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              mountPropagation: mountPropagation
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            lifecycle:
              postStart:
                tcpSocket:
                  port: null
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              preStop:
                tcpSocket:
                  port: null
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
            name: name
            tty: true
            readinessProbe:
              failureThreshold: 7
              periodSeconds: 1
              tcpSocket:
                port: null
                host: host
              timeoutSeconds: 6
              successThreshold: 1
              initialDelaySeconds: 1
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdinOnce: true
            envFrom:
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
          initContainers:
          - volumeDevices:
            - devicePath: devicePath
              name: name
            - devicePath: devicePath
              name: name
            image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 7
              periodSeconds: 1
              tcpSocket:
                port: null
                host: host
              timeoutSeconds: 6
              successThreshold: 1
              initialDelaySeconds: 1
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdin: true
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests:
                key: null
              limits:
                key: null
            securityContext:
              privileged: true
              runAsUser: 4
              capabilities:
                add:
                - add
                - add
                drop:
                - drop
                - drop
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              allowPrivilegeEscalation: true
              runAsNonRoot: true
              readOnlyRootFilesystem: true
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            ports:
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 7
              hostPort: 1
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 7
              hostPort: 1
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              mountPropagation: mountPropagation
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              mountPropagation: mountPropagation
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            lifecycle:
              postStart:
                tcpSocket:
                  port: null
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              preStop:
                tcpSocket:
                  port: null
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
            name: name
            tty: true
            readinessProbe:
              failureThreshold: 7
              periodSeconds: 1
              tcpSocket:
                port: null
                host: host
              timeoutSeconds: 6
              successThreshold: 1
              initialDelaySeconds: 1
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdinOnce: true
            envFrom:
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
          - volumeDevices:
            - devicePath: devicePath
              name: name
            - devicePath: devicePath
              name: name
            image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 7
              periodSeconds: 1
              tcpSocket:
                port: null
                host: host
              timeoutSeconds: 6
              successThreshold: 1
              initialDelaySeconds: 1
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdin: true
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests:
                key: null
              limits:
                key: null
            securityContext:
              privileged: true
              runAsUser: 4
              capabilities:
                add:
                - add
                - add
                drop:
                - drop
                - drop
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              allowPrivilegeEscalation: true
              runAsNonRoot: true
              readOnlyRootFilesystem: true
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            ports:
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 7
              hostPort: 1
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 7
              hostPort: 1
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              mountPropagation: mountPropagation
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              mountPropagation: mountPropagation
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            lifecycle:
              postStart:
                tcpSocket:
                  port: null
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              preStop:
                tcpSocket:
                  port: null
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: null
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
            name: name
            tty: true
            readinessProbe:
              failureThreshold: 7
              periodSeconds: 1
              tcpSocket:
                port: null
                host: host
              timeoutSeconds: 6
              successThreshold: 1
              initialDelaySeconds: 1
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdinOnce: true
            envFrom:
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                - matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                weight: 2
              - preference:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                weight: 2
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              - labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                weight: 4
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                weight: 4
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              - labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                weight: 4
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                weight: 4
          hostPID: true
        status:
          phase: phase
          reason: reason
          podIP: podIP
          containerStatuses:
          - image: image
            imageID: imageID
            restartCount: 0
            ready: true
            name: name
            state:
              running:
                startedAt: null
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 3
                startedAt: null
                containerID: containerID
                message: message
                signal: 7
                finishedAt: null
            containerID: containerID
            lastState:
              running:
                startedAt: null
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 3
                startedAt: null
                containerID: containerID
                message: message
                signal: 7
                finishedAt: null
          - image: image
            imageID: imageID
            restartCount: 0
            ready: true
            name: name
            state:
              running:
                startedAt: null
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 3
                startedAt: null
                containerID: containerID
                message: message
                signal: 7
                finishedAt: null
            containerID: containerID
            lastState:
              running:
                startedAt: null
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 3
                startedAt: null
                containerID: containerID
                message: message
                signal: 7
                finishedAt: null
          hostIP: hostIP
          startTime: null
          qosClass: qosClass
          conditions:
          - reason: reason
            lastTransitionTime: null
            message: message
            type: type
            lastProbeTime: null
            status: status
          - reason: reason
            lastTransitionTime: null
            message: message
            type: type
            lastProbeTime: null
            status: status
          message: message
          initContainerStatuses:
          - image: image
            imageID: imageID
            restartCount: 0
            ready: true
            name: name
            state:
              running:
                startedAt: null
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 3
                startedAt: null
                containerID: containerID
                message: message
                signal: 7
                finishedAt: null
            containerID: containerID
            lastState:
              running:
                startedAt: null
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 3
                startedAt: null
                containerID: containerID
                message: message
                signal: 7
                finishedAt: null
          - image: image
            imageID: imageID
            restartCount: 0
            ready: true
            name: name
            state:
              running:
                startedAt: null
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 3
                startedAt: null
                containerID: containerID
                message: message
                signal: 7
                finishedAt: null
            containerID: containerID
            lastState:
              running:
                startedAt: null
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 3
                startedAt: null
                containerID: containerID
                message: message
                signal: 7
                finishedAt: null
      services:
      - metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations:
            key: annotations
          generateName: generateName
          deletionTimestamp: null
          labels:
            key: labels
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: {}
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          healthCheckNodePort: 5
          externalIPs:
          - externalIPs
          - externalIPs
          sessionAffinity: sessionAffinity
          ports:
          - protocol: protocol
            port: 7
            name: name
            nodePort: 2
            targetPort: {}
          - protocol: protocol
            port: 7
            name: name
            nodePort: 2
            targetPort: {}
          type: type
          sessionAffinityConfig:
            clientIP:
              timeoutSeconds: 9
          loadBalancerIP: loadBalancerIP
          externalName: externalName
          loadBalancerSourceRanges:
          - loadBalancerSourceRanges
          - loadBalancerSourceRanges
          externalTrafficPolicy: externalTrafficPolicy
          selector:
            key: selector
          publishNotReadyAddresses: true
          clusterIP: clusterIP
        status:
          loadBalancer:
            ingress:
            - hostname: hostname
              ip: ip
            - hostname: hostname
              ip: ip
      - metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations:
            key: annotations
          generateName: generateName
          deletionTimestamp: null
          labels:
            key: labels
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: {}
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          healthCheckNodePort: 5
          externalIPs:
          - externalIPs
          - externalIPs
          sessionAffinity: sessionAffinity
          ports:
          - protocol: protocol
            port: 7
            name: name
            nodePort: 2
            targetPort: {}
          - protocol: protocol
            port: 7
            name: name
            nodePort: 2
            targetPort: {}
          type: type
          sessionAffinityConfig:
            clientIP:
              timeoutSeconds: 9
          loadBalancerIP: loadBalancerIP
          externalName: externalName
          loadBalancerSourceRanges:
          - loadBalancerSourceRanges
          - loadBalancerSourceRanges
          externalTrafficPolicy: externalTrafficPolicy
          selector:
            key: selector
          publishNotReadyAddresses: true
          clusterIP: clusterIP
        status:
          loadBalancer:
            ingress:
            - hostname: hostname
              ip: ip
            - hostname: hostname
              ip: ip
      version: 1.0.0
      commands:
      - metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations:
            key: annotations
          generateName: generateName
          deletionTimestamp: null
          labels:
            key: labels
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: {}
          name: name
          namespace: namespace
        apiVersion: che.eclipse.org/v1
        kind: CheCommand
        spec:
          working-dir: $(project)
          target-label-selector: che.eclipse.org/container-name= theia-maven-sidecar
          command:
          - mvn
          - mvn
      - metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations:
            key: annotations
          generateName: generateName
          deletionTimestamp: null
          labels:
            key: labels
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: {}
          name: name
          namespace: namespace
        apiVersion: che.eclipse.org/v1
        kind: CheCommand
        spec:
          working-dir: $(project)
          target-label-selector: che.eclipse.org/container-name= theia-maven-sidecar
          command:
          - mvn
          - mvn
  Pod:
    type: object
    description: Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.
  Service:
    type: object
    description: Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.
  CheCommand:
    type: object
    required:
    - apiVersion
    - kind
    - metadata
    - spec
    properties:
      apiVersion:
        type: string
        example: che.eclipse.org/v1
      kind:
        type: string
        example: CheCommand
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/CheCommandSpec'
    example:
      metadata:
        generation: 6
        finalizers:
        - finalizers
        - finalizers
        resourceVersion: resourceVersion
        annotations:
          key: annotations
        generateName: generateName
        deletionTimestamp: null
        labels:
          key: labels
        ownerReferences:
        - uid: uid
          controller: true
          apiVersion: apiVersion
          kind: kind
          name: name
          blockOwnerDeletion: true
        - uid: uid
          controller: true
          apiVersion: apiVersion
          kind: kind
          name: name
          blockOwnerDeletion: true
        selfLink: selfLink
        deletionGracePeriodSeconds: 0
        uid: uid
        initializers:
          result:
            reason: reason
            metadata:
              continue: continue
              resourceVersion: resourceVersion
              selfLink: selfLink
            apiVersion: apiVersion
            code: 1
            kind: kind
            details:
              uid: uid
              kind: kind
              causes:
              - reason: reason
                field: field
                message: message
              - reason: reason
                field: field
                message: message
              retryAfterSeconds: 5
              name: name
              group: group
            message: message
            status: status
          pending:
          - name: name
          - name: name
        clusterName: clusterName
        creationTimestamp: {}
        name: name
        namespace: namespace
      apiVersion: che.eclipse.org/v1
      kind: CheCommand
      spec:
        working-dir: $(project)
        target-label-selector: che.eclipse.org/container-name= theia-maven-sidecar
        command:
        - mvn
        - mvn
  CheCommandSpec:
    type: object
    required:
    - command
    - target-label-selector
    - working-dir
    properties:
      target-label-selector:
        type: string
        example: che.eclipse.org/container-name= theia-maven-sidecar
      working-dir:
        type: string
        example: $(project)
      command:
        type: array
        items:
          type: string
          example: mvn
    example:
      working-dir: $(project)
      target-label-selector: che.eclipse.org/container-name= theia-maven-sidecar
      command:
      - mvn
      - mvn
  CheFeature:
    type: object
    required:
    - apiVersion
    - kind
    - metadata
    - spec
    properties:
      apiVersion:
        type: string
        example: che.eclipse.org/v1
      kind:
        type: string
        example: CheFeature
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        $ref: '#/definitions/CheFeatureSpec'
    example:
      metadata:
        generation: 6
        finalizers:
        - finalizers
        - finalizers
        resourceVersion: resourceVersion
        annotations:
          key: annotations
        generateName: generateName
        deletionTimestamp: null
        labels:
          key: labels
        ownerReferences:
        - uid: uid
          controller: true
          apiVersion: apiVersion
          kind: kind
          name: name
          blockOwnerDeletion: true
        - uid: uid
          controller: true
          apiVersion: apiVersion
          kind: kind
          name: name
          blockOwnerDeletion: true
        selfLink: selfLink
        deletionGracePeriodSeconds: 0
        uid: uid
        initializers:
          result:
            reason: reason
            metadata:
              continue: continue
              resourceVersion: resourceVersion
              selfLink: selfLink
            apiVersion: apiVersion
            code: 1
            kind: kind
            details:
              uid: uid
              kind: kind
              causes:
              - reason: reason
                field: field
                message: message
              - reason: reason
                field: field
                message: message
              retryAfterSeconds: 5
              name: name
              group: group
            message: message
            status: status
          pending:
          - name: name
          - name: name
        clusterName: clusterName
        creationTimestamp: {}
        name: name
        namespace: namespace
      apiVersion: che.eclipse.org/v1
      kind: CheFeature
      spec:
        services:
        - name: o.typefox.theia-ide.che-service.mainpod
          services:
          - name: THEIA_PLUGINS
            value: org.eclipse.che.terminal@latest
          - name: THEIA_PLUGINS
            value: org.eclipse.che.terminal@latest
          version: 51.233
        - name: o.typefox.theia-ide.che-service.mainpod
          services:
          - name: THEIA_PLUGINS
            value: org.eclipse.che.terminal@latest
          - name: THEIA_PLUGINS
            value: org.eclipse.che.terminal@latest
          version: 51.233
        version: 1.0.0
  CheFeatureSpec:
    type: object
    required:
    - services
    - version
    properties:
      version:
        type: string
        example: 1.0.0
      services:
        type: array
        items:
          $ref: '#/definitions/CheServiceReference'
    example:
      services:
      - name: o.typefox.theia-ide.che-service.mainpod
        services:
        - name: THEIA_PLUGINS
          value: org.eclipse.che.terminal@latest
        - name: THEIA_PLUGINS
          value: org.eclipse.che.terminal@latest
        version: 51.233
      - name: o.typefox.theia-ide.che-service.mainpod
        services:
        - name: THEIA_PLUGINS
          value: org.eclipse.che.terminal@latest
        - name: THEIA_PLUGINS
          value: org.eclipse.che.terminal@latest
        version: 51.233
      version: 1.0.0
  CheServiceReference:
    type: object
    required:
    - name
    - version
    properties:
      name:
        type: string
        example: o.typefox.theia-ide.che-service.mainpod
      version:
        type: string
        example: 51.233
      services:
        type: array
        items:
          $ref: '#/definitions/CheServiceParameter'
    example:
      name: o.typefox.theia-ide.che-service.mainpod
      services:
      - name: THEIA_PLUGINS
        value: org.eclipse.che.terminal@latest
      - name: THEIA_PLUGINS
        value: org.eclipse.che.terminal@latest
      version: 51.233
  CheServiceParameter:
    type: object
    required:
    - name
    - value
    properties:
      name:
        type: string
        example: THEIA_PLUGINS
      value:
        type: string
        example: org.eclipse.che.terminal@latest
    example:
      name: THEIA_PLUGINS
      value: org.eclipse.che.terminal@latest
  Error:
    type: object
    required:
    - message
    properties:
      message:
        type: string
  io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta:
    properties:
      annotations:
        type: object
        description: 'Annotations is an unstructured key value map stored with a resource
          that may be set by external tools to store and retrieve arbitrary metadata.
          They are not queryable and should be preserved when modifying objects. More
          info: http://kubernetes.io/docs/user-guide/annotations'
        additionalProperties:
          type: string
      clusterName:
        type: string
        description: The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
      deletionGracePeriodSeconds:
        type: integer
        format: int64
        description: Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
      finalizers:
        type: array
        description: Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.
        items:
          type: string
        x-kubernetes-patch-strategy: merge
      generateName:
        type: string
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

          If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
      generation:
        type: integer
        format: int64
        description: A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
      initializers:
        description: |-
          An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to observe uninitialized objects.

          When an object is created, the system will populate this list with the current set of initializers. Only privileged users may set or modify this list. Once it is empty, it may not be modified further by any user.
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Initializers'
      labels:
        type: object
        description: 'Map of string keys and values that can be used to organize and
          categorize (scope and select) objects. May match selectors of replication
          controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
        additionalProperties:
          type: string
      name:
        type: string
        description: 'Name must be unique within a namespace. Is required when creating
          resources, although some resources may allow a client to request the generation
          of an appropriate name automatically. Name is primarily intended for creation
          idempotence and configuration definition. Cannot be updated. More info:
          http://kubernetes.io/docs/user-guide/identifiers#names'
      namespace:
        type: string
        description: |-
          Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

          Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
      ownerReferences:
        type: array
        description: List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference'
        x-kubernetes-patch-strategy: merge
        x-kubernetes-patch-merge-key: uid
      resourceVersion:
        type: string
        description: |-
          An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

          Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
      selfLink:
        type: string
        description: SelfLink is a URL representing this object. Populated by the system. Read-only.
      uid:
        type: string
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

          Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
    description: ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
    example:
      generation: 6
      finalizers:
      - finalizers
      - finalizers
      resourceVersion: resourceVersion
      annotations:
        key: annotations
      generateName: generateName
      deletionTimestamp: null
      labels:
        key: labels
      ownerReferences:
      - uid: uid
        controller: true
        apiVersion: apiVersion
        kind: kind
        name: name
        blockOwnerDeletion: true
      - uid: uid
        controller: true
        apiVersion: apiVersion
        kind: kind
        name: name
        blockOwnerDeletion: true
      selfLink: selfLink
      deletionGracePeriodSeconds: 0
      uid: uid
      initializers:
        result:
          reason: reason
          metadata:
            continue: continue
            resourceVersion: resourceVersion
            selfLink: selfLink
          apiVersion: apiVersion
          code: 1
          kind: kind
          details:
            uid: uid
            kind: kind
            causes:
            - reason: reason
              field: field
              message: message
            - reason: reason
              field: field
              message: message
            retryAfterSeconds: 5
            name: name
            group: group
          message: message
          status: status
        pending:
        - name: name
        - name: name
      clusterName: clusterName
      creationTimestamp: {}
      name: name
      namespace: namespace
  io.k8s.apimachinery.pkg.apis.meta.v1.Time:
    type: string
    format: date-time
  io.k8s.apimachinery.pkg.apis.meta.v1.Initializers:
    required:
    - pending
    properties:
      pending:
        type: array
        description: Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Initializer'
        x-kubernetes-patch-strategy: merge
        x-kubernetes-patch-merge-key: name
      result:
        description: If result is set with the Failure field, the object will be persisted to storage and then deleted, ensuring that other clients can observe the deletion.
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
    description: Initializers tracks the progress of initialization.
    example:
      result:
        reason: reason
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        code: 1
        kind: kind
        details:
          uid: uid
          kind: kind
          causes:
          - reason: reason
            field: field
            message: message
          - reason: reason
            field: field
            message: message
          retryAfterSeconds: 5
          name: name
          group: group
        message: message
        status: status
      pending:
      - name: name
      - name: name
  io.k8s.apimachinery.pkg.apis.meta.v1.Initializer:
    required:
    - name
    properties:
      name:
        type: string
        description: name of the process that is responsible for initializing this object.
    description: Initializer is information about an initializer that has not yet completed.
    example:
      name: name
  io.k8s.apimachinery.pkg.apis.meta.v1.Status:
    properties:
      apiVersion:
        type: string
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
      code:
        type: integer
        format: int32
        description: Suggested HTTP return code for this status, 0 if not set.
      details:
        description: Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails'
      kind:
        type: string
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
      message:
        type: string
        description: A human-readable description of the status of this operation.
      metadata:
        description: 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
      reason:
        type: string
        description: A machine-readable description of why this operation is in the "Failure" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.
      status:
        type: string
        description: 'Status of the operation. One of: "Success" or "Failure". More
          info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
    description: Status is a return value for calls that don't return other objects.
    example:
      reason: reason
      metadata:
        continue: continue
        resourceVersion: resourceVersion
        selfLink: selfLink
      apiVersion: apiVersion
      code: 1
      kind: kind
      details:
        uid: uid
        kind: kind
        causes:
        - reason: reason
          field: field
          message: message
        - reason: reason
          field: field
          message: message
        retryAfterSeconds: 5
        name: name
        group: group
      message: message
      status: status
    x-kubernetes-group-version-kind:
    - group:
      kind: Status
      version: v1
  io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails:
    properties:
      causes:
        type: array
        description: The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause'
      group:
        type: string
        description: The group attribute of the resource associated with the status StatusReason.
      kind:
        type: string
        description: 'The kind attribute of the resource associated with the status
          StatusReason. On some operations may differ from the requested resource
          Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
      name:
        type: string
        description: The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).
      retryAfterSeconds:
        type: integer
        format: int32
        description: If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.
      uid:
        type: string
        description: 'UID of the resource. (when there is a single resource which
          can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
    description: StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.
    example:
      uid: uid
      kind: kind
      causes:
      - reason: reason
        field: field
        message: message
      - reason: reason
        field: field
        message: message
      retryAfterSeconds: 5
      name: name
      group: group
  io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause:
    properties:
      field:
        type: string
        description: |-
          The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.

          Examples:
            "name" - the field "name" on the current resource
            "items[0].name" - the field "name" on the first array entry in "items"
      message:
        type: string
        description: A human-readable description of the cause of the error.  This field may be presented as-is to a reader.
      reason:
        type: string
        description: A machine-readable description of the cause of the error. If this value is empty there is no information available.
    description: StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.
    example:
      reason: reason
      field: field
      message: message
  io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta:
    properties:
      continue:
        type: string
        description: continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response.
      resourceVersion:
        type: string
        description: 'String that identifies the server''s internal version of this
          object that can be used by clients to determine when objects have changed.
          Value must be treated as opaque by clients and passed unmodified back to
          the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
      selfLink:
        type: string
        description: selfLink is a URL representing this object. Populated by the system. Read-only.
    description: ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
    example:
      continue: continue
      resourceVersion: resourceVersion
      selfLink: selfLink
  io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference:
    required:
    - apiVersion
    - kind
    - name
    - uid
    properties:
      apiVersion:
        type: string
        description: API version of the referent.
      blockOwnerDeletion:
        type: boolean
        description: If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
      controller:
        type: boolean
        description: If true, this reference points to the managing controller.
      kind:
        type: string
        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
      name:
        type: string
        description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
      uid:
        type: string
        description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
    description: OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.
    example:
      uid: uid
      controller: true
      apiVersion: apiVersion
      kind: kind
      name: name
      blockOwnerDeletion: true
  io.k8s.api.core.v1.Service:
    properties:
      apiVersion:
        type: string
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
      kind:
        type: string
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
      metadata:
        description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        description: Spec defines the behavior of a service. https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
        $ref: '#/definitions/io.k8s.api.core.v1.ServiceSpec'
      status:
        description: 'Most recently observed status of the service. Populated by the
          system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
        $ref: '#/definitions/io.k8s.api.core.v1.ServiceStatus'
    description: Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.
    example:
      metadata:
        generation: 6
        finalizers:
        - finalizers
        - finalizers
        resourceVersion: resourceVersion
        annotations:
          key: annotations
        generateName: generateName
        deletionTimestamp: null
        labels:
          key: labels
        ownerReferences:
        - uid: uid
          controller: true
          apiVersion: apiVersion
          kind: kind
          name: name
          blockOwnerDeletion: true
        - uid: uid
          controller: true
          apiVersion: apiVersion
          kind: kind
          name: name
          blockOwnerDeletion: true
        selfLink: selfLink
        deletionGracePeriodSeconds: 0
        uid: uid
        initializers:
          result:
            reason: reason
            metadata:
              continue: continue
              resourceVersion: resourceVersion
              selfLink: selfLink
            apiVersion: apiVersion
            code: 1
            kind: kind
            details:
              uid: uid
              kind: kind
              causes:
              - reason: reason
                field: field
                message: message
              - reason: reason
                field: field
                message: message
              retryAfterSeconds: 5
              name: name
              group: group
            message: message
            status: status
          pending:
          - name: name
          - name: name
        clusterName: clusterName
        creationTimestamp: {}
        name: name
        namespace: namespace
      apiVersion: apiVersion
      kind: kind
      spec:
        healthCheckNodePort: 5
        externalIPs:
        - externalIPs
        - externalIPs
        sessionAffinity: sessionAffinity
        ports:
        - protocol: protocol
          port: 7
          name: name
          nodePort: 2
          targetPort: {}
        - protocol: protocol
          port: 7
          name: name
          nodePort: 2
          targetPort: {}
        type: type
        sessionAffinityConfig:
          clientIP:
            timeoutSeconds: 9
        loadBalancerIP: loadBalancerIP
        externalName: externalName
        loadBalancerSourceRanges:
        - loadBalancerSourceRanges
        - loadBalancerSourceRanges
        externalTrafficPolicy: externalTrafficPolicy
        selector:
          key: selector
        publishNotReadyAddresses: true
        clusterIP: clusterIP
      status:
        loadBalancer:
          ingress:
          - hostname: hostname
            ip: ip
          - hostname: hostname
            ip: ip
    x-kubernetes-group-version-kind:
    - group:
      kind: Service
      version: v1
  io.k8s.api.core.v1.ServiceSpec:
    properties:
      clusterIP:
        type: string
        description: 'clusterIP is the IP address of the service and is usually assigned
          randomly by the master. If an address is specified manually and is not in
          use by others, it will be allocated to the service; otherwise, creation
          of the service will fail. This field can not be changed through updates.
          Valid values are "None", empty string (""), or a valid IP address. "None"
          can be specified for headless services when proxying is not required. Only
          applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type
          is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
      externalIPs:
        type: array
        description: externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.
        items:
          type: string
      externalName:
        type: string
        description: externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.
      externalTrafficPolicy:
        type: string
        description: externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. "Local" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. "Cluster" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.
      healthCheckNodePort:
        type: integer
        format: int32
        description: healthCheckNodePort specifies the healthcheck nodePort for the service. If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.
      loadBalancerIP:
        type: string
        description: 'Only applies to Service Type: LoadBalancer LoadBalancer will
          get created with the IP specified in this field. This feature depends on
          whether the underlying cloud-provider supports specifying the loadBalancerIP
          when a load balancer is created. This field will be ignored if the cloud-provider
          does not support the feature.'
      loadBalancerSourceRanges:
        type: array
        description: 'If specified and supported by the platform, this will restrict
          traffic through the cloud-provider load-balancer will be restricted to the
          specified client IPs. This field will be ignored if the cloud-provider does
          not support the feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/'
        items:
          type: string
      ports:
        type: array
        description: 'The list of ports that are exposed by this service. More info:
          https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.ServicePort'
        x-kubernetes-patch-strategy: merge
        x-kubernetes-patch-merge-key: port
      publishNotReadyAddresses:
        type: boolean
        description: publishNotReadyAddresses, when set to true, indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service. The default value is false. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate SRV records for its Pods without respect to their readiness for purpose of peer discovery. This field will replace the service.alpha.kubernetes.io/tolerate-unready-endpoints when that annotation is deprecated and all clients have been converted to use this field.
      selector:
        type: object
        description: 'Route service traffic to pods with label keys and values matching
          this selector. If empty or not present, the service is assumed to have an
          external process managing its endpoints, which Kubernetes will not modify.
          Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if
          type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/'
        additionalProperties:
          type: string
      sessionAffinity:
        type: string
        description: 'Supports "ClientIP" and "None". Used to maintain session affinity.
          Enable client IP based session affinity. Must be ClientIP or None. Defaults
          to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
      sessionAffinityConfig:
        description: sessionAffinityConfig contains the configurations of session affinity.
        $ref: '#/definitions/io.k8s.api.core.v1.SessionAffinityConfig'
      type:
        type: string
        description: 'type determines how the Service is exposed. Defaults to ClusterIP.
          Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. "ExternalName"
          maps to the specified externalName. "ClusterIP" allocates a cluster-internal
          IP address for load-balancing to endpoints. Endpoints are determined by
          the selector or if that is not specified, by manual construction of an Endpoints
          object. If clusterIP is "None", no virtual IP is allocated and the endpoints
          are published as a set of endpoints rather than a stable IP. "NodePort"
          builds on ClusterIP and allocates a port on every node which routes to the
          clusterIP. "LoadBalancer" builds on NodePort and creates an external load-balancer
          (if supported in the current cloud) which routes to the clusterIP. More
          info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services---service-types'
    description: ServiceSpec describes the attributes that a user creates on a service.
    example:
      healthCheckNodePort: 5
      externalIPs:
      - externalIPs
      - externalIPs
      sessionAffinity: sessionAffinity
      ports:
      - protocol: protocol
        port: 7
        name: name
        nodePort: 2
        targetPort: {}
      - protocol: protocol
        port: 7
        name: name
        nodePort: 2
        targetPort: {}
      type: type
      sessionAffinityConfig:
        clientIP:
          timeoutSeconds: 9
      loadBalancerIP: loadBalancerIP
      externalName: externalName
      loadBalancerSourceRanges:
      - loadBalancerSourceRanges
      - loadBalancerSourceRanges
      externalTrafficPolicy: externalTrafficPolicy
      selector:
        key: selector
      publishNotReadyAddresses: true
      clusterIP: clusterIP
  io.k8s.api.core.v1.ServicePort:
    required:
    - port
    properties:
      name:
        type: string
        description: The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. This maps to the 'Name' field in EndpointPort objects. Optional if only one ServicePort is defined on this service.
      nodePort:
        type: integer
        format: int32
        description: 'The port on each node on which this service is exposed when
          type=NodePort or LoadBalancer. Usually assigned by the system. If specified,
          it will be allocated to the service if unused or else creation of the service
          will fail. Default is to auto-allocate a port if the ServiceType of this
          Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
      port:
        type: integer
        format: int32
        description: The port that will be exposed by this service.
      protocol:
        type: string
        description: The IP protocol for this port. Supports "TCP" and "UDP". Default is TCP.
      targetPort:
        description: 'Number or name of the port to access on the pods targeted by
          the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
          If this is a string, it will be looked up as a named port in the target
          Pod''s container ports. If this is not specified, the value of the ''port''
          field is used (an identity map). This field is ignored for services with
          clusterIP=None, and should be omitted or set equal to the ''port'' field.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString'
    description: ServicePort contains information on service's port.
    example:
      protocol: protocol
      port: 7
      name: name
      nodePort: 2
      targetPort: {}
  io.k8s.apimachinery.pkg.util.intstr.IntOrString:
    type: string
    format: int-or-string
  io.k8s.api.core.v1.SessionAffinityConfig:
    properties:
      clientIP:
        description: clientIP contains the configurations of Client IP based session affinity.
        $ref: '#/definitions/io.k8s.api.core.v1.ClientIPConfig'
    description: SessionAffinityConfig represents the configurations of session affinity.
    example:
      clientIP:
        timeoutSeconds: 9
  io.k8s.api.core.v1.ClientIPConfig:
    properties:
      timeoutSeconds:
        type: integer
        format: int32
        description: timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
    description: ClientIPConfig represents the configurations of Client IP based session affinity.
    example:
      timeoutSeconds: 9
  io.k8s.api.core.v1.ServiceStatus:
    properties:
      loadBalancer:
        description: LoadBalancer contains the current status of the load-balancer, if one is present.
        $ref: '#/definitions/io.k8s.api.core.v1.LoadBalancerStatus'
    description: ServiceStatus represents the current status of a service.
    example:
      loadBalancer:
        ingress:
        - hostname: hostname
          ip: ip
        - hostname: hostname
          ip: ip
  io.k8s.api.core.v1.LoadBalancerStatus:
    properties:
      ingress:
        type: array
        description: Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.LoadBalancerIngress'
    description: LoadBalancerStatus represents the status of a load-balancer.
    example:
      ingress:
      - hostname: hostname
        ip: ip
      - hostname: hostname
        ip: ip
  io.k8s.api.core.v1.LoadBalancerIngress:
    properties:
      hostname:
        type: string
        description: Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)
      ip:
        type: string
        description: IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)
    description: 'LoadBalancerIngress represents the status of a load-balancer ingress
      point: traffic intended for the service should be sent to an ingress point.'
    example:
      hostname: hostname
      ip: ip
  io.k8s.api.core.v1.Pod:
    properties:
      apiVersion:
        type: string
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
      kind:
        type: string
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
      metadata:
        description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        description: 'Specification of the desired behavior of the pod. More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
        $ref: '#/definitions/io.k8s.api.core.v1.PodSpec'
      status:
        description: 'Most recently observed status of the pod. This data may not
          be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
        $ref: '#/definitions/io.k8s.api.core.v1.PodStatus'
    description: Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.
    example:
      metadata:
        generation: 6
        finalizers:
        - finalizers
        - finalizers
        resourceVersion: resourceVersion
        annotations:
          key: annotations
        generateName: generateName
        deletionTimestamp: null
        labels:
          key: labels
        ownerReferences:
        - uid: uid
          controller: true
          apiVersion: apiVersion
          kind: kind
          name: name
          blockOwnerDeletion: true
        - uid: uid
          controller: true
          apiVersion: apiVersion
          kind: kind
          name: name
          blockOwnerDeletion: true
        selfLink: selfLink
        deletionGracePeriodSeconds: 0
        uid: uid
        initializers:
          result:
            reason: reason
            metadata:
              continue: continue
              resourceVersion: resourceVersion
              selfLink: selfLink
            apiVersion: apiVersion
            code: 1
            kind: kind
            details:
              uid: uid
              kind: kind
              causes:
              - reason: reason
                field: field
                message: message
              - reason: reason
                field: field
                message: message
              retryAfterSeconds: 5
              name: name
              group: group
            message: message
            status: status
          pending:
          - name: name
          - name: name
        clusterName: clusterName
        creationTimestamp: {}
        name: name
        namespace: namespace
      apiVersion: apiVersion
      kind: kind
      spec:
        dnsPolicy: dnsPolicy
        nodeName: nodeName
        terminationGracePeriodSeconds: 8
        dnsConfig:
          searches:
          - searches
          - searches
          nameservers:
          - nameservers
          - nameservers
          options:
          - name: name
            value: value
          - name: name
            value: value
        hostNetwork: true
        serviceAccountName: serviceAccountName
        imagePullSecrets:
        - name: name
        - name: name
        priorityClassName: priorityClassName
        hostAliases:
        - ip: ip
          hostnames:
          - hostnames
          - hostnames
        - ip: ip
          hostnames:
          - hostnames
          - hostnames
        securityContext:
          runAsUser: 9
          seLinuxOptions:
            role: role
            level: level
            type: type
            user: user
          fsGroup: 9
          supplementalGroups:
          - 6
          - 6
          runAsNonRoot: true
        nodeSelector:
          key: nodeSelector
        hostname: hostname
        tolerations:
        - effect: effect
          tolerationSeconds: 9
          value: value
          key: key
          operator: operator
        - effect: effect
          tolerationSeconds: 9
          value: value
          key: key
          operator: operator
        automountServiceAccountToken: true
        schedulerName: schedulerName
        activeDeadlineSeconds: 3
        hostIPC: true
        volumes:
        - quobyte:
            volume: volume
            registry: registry
            readOnly: true
            user: user
            group: group
          azureFile:
            secretName: secretName
            readOnly: true
            shareName: shareName
          flexVolume:
            driver: driver
            options:
              key: options
            secretRef:
              name: name
            readOnly: true
            fsType: fsType
          secret:
            secretName: secretName
            defaultMode: 3
            optional: true
            items:
            - mode: 6
              path: path
              key: key
            - mode: 6
              path: path
              key: key
          projected:
            sources:
            - downwardAPI:
                items:
                - mode: 2
                  path: path
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 2
                  path: path
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              configMap:
                name: name
                optional: true
                items:
                - mode: 6
                  path: path
                  key: key
                - mode: 6
                  path: path
                  key: key
              secret:
                name: name
                optional: true
                items:
                - mode: 6
                  path: path
                  key: key
                - mode: 6
                  path: path
                  key: key
            - downwardAPI:
                items:
                - mode: 2
                  path: path
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 2
                  path: path
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              configMap:
                name: name
                optional: true
                items:
                - mode: 6
                  path: path
                  key: key
                - mode: 6
                  path: path
                  key: key
              secret:
                name: name
                optional: true
                items:
                - mode: 6
                  path: path
                  key: key
                - mode: 6
                  path: path
                  key: key
            defaultMode: 6
          cephfs:
            path: path
            secretRef:
              name: name
            secretFile: secretFile
            readOnly: true
            user: user
            monitors:
            - monitors
            - monitors
          scaleIO:
            system: system
            protectionDomain: protectionDomain
            sslEnabled: true
            storageMode: storageMode
            volumeName: volumeName
            secretRef:
              name: name
            readOnly: true
            fsType: fsType
            storagePool: storagePool
            gateway: gateway
          emptyDir:
            sizeLimit: null
            medium: medium
          glusterfs:
            path: path
            endpoints: endpoints
            readOnly: true
          gcePersistentDisk:
            partition: 6
            readOnly: true
            pdName: pdName
            fsType: fsType
          photonPersistentDisk:
            pdID: pdID
            fsType: fsType
          azureDisk:
            diskName: diskName
            kind: kind
            readOnly: true
            cachingMode: cachingMode
            diskURI: diskURI
            fsType: fsType
          cinder:
            volumeID: volumeID
            readOnly: true
            fsType: fsType
          downwardAPI:
            defaultMode: 1
            items:
            - mode: 2
              path: path
              resourceFieldRef:
                divisor: {}
                resource: resource
                containerName: containerName
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
            - mode: 2
              path: path
              resourceFieldRef:
                divisor: {}
                resource: resource
                containerName: containerName
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          awsElasticBlockStore:
            partition: 6
            volumeID: volumeID
            readOnly: true
            fsType: fsType
          flocker:
            datasetName: datasetName
            datasetUUID: datasetUUID
          iscsi:
            chapAuthSession: true
            iscsiInterface: iscsiInterface
            lun: 5
            chapAuthDiscovery: true
            iqn: iqn
            portals:
            - portals
            - portals
            secretRef:
              name: name
            initiatorName: initiatorName
            readOnly: true
            fsType: fsType
            targetPortal: targetPortal
          rbd:
            image: image
            pool: pool
            secretRef:
              name: name
            readOnly: true
            fsType: fsType
            keyring: keyring
            user: user
            monitors:
            - monitors
            - monitors
          configMap:
            defaultMode: 3
            name: name
            optional: true
            items:
            - mode: 6
              path: path
              key: key
            - mode: 6
              path: path
              key: key
          storageos:
            volumeNamespace: volumeNamespace
            volumeName: volumeName
            secretRef:
              name: name
            readOnly: true
            fsType: fsType
          name: name
          nfs:
            path: path
            server: server
            readOnly: true
          persistentVolumeClaim:
            claimName: claimName
            readOnly: true
          gitRepo:
            repository: repository
            directory: directory
            revision: revision
          portworxVolume:
            volumeID: volumeID
            readOnly: true
            fsType: fsType
          vsphereVolume:
            storagePolicyName: storagePolicyName
            storagePolicyID: storagePolicyID
            volumePath: volumePath
            fsType: fsType
          fc:
            lun: 6
            targetWWNs:
            - targetWWNs
            - targetWWNs
            readOnly: true
            wwids:
            - wwids
            - wwids
            fsType: fsType
          hostPath:
            path: path
            type: type
        - quobyte:
            volume: volume
            registry: registry
            readOnly: true
            user: user
            group: group
          azureFile:
            secretName: secretName
            readOnly: true
            shareName: shareName
          flexVolume:
            driver: driver
            options:
              key: options
            secretRef:
              name: name
            readOnly: true
            fsType: fsType
          secret:
            secretName: secretName
            defaultMode: 3
            optional: true
            items:
            - mode: 6
              path: path
              key: key
            - mode: 6
              path: path
              key: key
          projected:
            sources:
            - downwardAPI:
                items:
                - mode: 2
                  path: path
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 2
                  path: path
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              configMap:
                name: name
                optional: true
                items:
                - mode: 6
                  path: path
                  key: key
                - mode: 6
                  path: path
                  key: key
              secret:
                name: name
                optional: true
                items:
                - mode: 6
                  path: path
                  key: key
                - mode: 6
                  path: path
                  key: key
            - downwardAPI:
                items:
                - mode: 2
                  path: path
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 2
                  path: path
                  resourceFieldRef:
                    divisor: {}
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              configMap:
                name: name
                optional: true
                items:
                - mode: 6
                  path: path
                  key: key
                - mode: 6
                  path: path
                  key: key
              secret:
                name: name
                optional: true
                items:
                - mode: 6
                  path: path
                  key: key
                - mode: 6
                  path: path
                  key: key
            defaultMode: 6
          cephfs:
            path: path
            secretRef:
              name: name
            secretFile: secretFile
            readOnly: true
            user: user
            monitors:
            - monitors
            - monitors
          scaleIO:
            system: system
            protectionDomain: protectionDomain
            sslEnabled: true
            storageMode: storageMode
            volumeName: volumeName
            secretRef:
              name: name
            readOnly: true
            fsType: fsType
            storagePool: storagePool
            gateway: gateway
          emptyDir:
            sizeLimit: null
            medium: medium
          glusterfs:
            path: path
            endpoints: endpoints
            readOnly: true
          gcePersistentDisk:
            partition: 6
            readOnly: true
            pdName: pdName
            fsType: fsType
          photonPersistentDisk:
            pdID: pdID
            fsType: fsType
          azureDisk:
            diskName: diskName
            kind: kind
            readOnly: true
            cachingMode: cachingMode
            diskURI: diskURI
            fsType: fsType
          cinder:
            volumeID: volumeID
            readOnly: true
            fsType: fsType
          downwardAPI:
            defaultMode: 1
            items:
            - mode: 2
              path: path
              resourceFieldRef:
                divisor: {}
                resource: resource
                containerName: containerName
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
            - mode: 2
              path: path
              resourceFieldRef:
                divisor: {}
                resource: resource
                containerName: containerName
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          awsElasticBlockStore:
            partition: 6
            volumeID: volumeID
            readOnly: true
            fsType: fsType
          flocker:
            datasetName: datasetName
            datasetUUID: datasetUUID
          iscsi:
            chapAuthSession: true
            iscsiInterface: iscsiInterface
            lun: 5
            chapAuthDiscovery: true
            iqn: iqn
            portals:
            - portals
            - portals
            secretRef:
              name: name
            initiatorName: initiatorName
            readOnly: true
            fsType: fsType
            targetPortal: targetPortal
          rbd:
            image: image
            pool: pool
            secretRef:
              name: name
            readOnly: true
            fsType: fsType
            keyring: keyring
            user: user
            monitors:
            - monitors
            - monitors
          configMap:
            defaultMode: 3
            name: name
            optional: true
            items:
            - mode: 6
              path: path
              key: key
            - mode: 6
              path: path
              key: key
          storageos:
            volumeNamespace: volumeNamespace
            volumeName: volumeName
            secretRef:
              name: name
            readOnly: true
            fsType: fsType
          name: name
          nfs:
            path: path
            server: server
            readOnly: true
          persistentVolumeClaim:
            claimName: claimName
            readOnly: true
          gitRepo:
            repository: repository
            directory: directory
            revision: revision
          portworxVolume:
            volumeID: volumeID
            readOnly: true
            fsType: fsType
          vsphereVolume:
            storagePolicyName: storagePolicyName
            storagePolicyID: storagePolicyID
            volumePath: volumePath
            fsType: fsType
          fc:
            lun: 6
            targetWWNs:
            - targetWWNs
            - targetWWNs
            readOnly: true
            wwids:
            - wwids
            - wwids
            fsType: fsType
          hostPath:
            path: path
            type: type
        serviceAccount: serviceAccount
        priority: 5
        restartPolicy: restartPolicy
        subdomain: subdomain
        containers:
        - volumeDevices:
          - devicePath: devicePath
            name: name
          - devicePath: devicePath
            name: name
          image: image
          imagePullPolicy: imagePullPolicy
          livenessProbe:
            failureThreshold: 7
            periodSeconds: 1
            tcpSocket:
              port: null
              host: host
            timeoutSeconds: 6
            successThreshold: 1
            initialDelaySeconds: 1
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: null
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          stdin: true
          terminationMessagePolicy: terminationMessagePolicy
          terminationMessagePath: terminationMessagePath
          workingDir: workingDir
          resources:
            requests:
              key: null
            limits:
              key: null
          securityContext:
            privileged: true
            runAsUser: 4
            capabilities:
              add:
              - add
              - add
              drop:
              - drop
              - drop
            seLinuxOptions:
              role: role
              level: level
              type: type
              user: user
            allowPrivilegeEscalation: true
            runAsNonRoot: true
            readOnlyRootFilesystem: true
          env:
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: {}
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: {}
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          ports:
          - protocol: protocol
            hostIP: hostIP
            name: name
            containerPort: 7
            hostPort: 1
          - protocol: protocol
            hostIP: hostIP
            name: name
            containerPort: 7
            hostPort: 1
          command:
          - command
          - command
          volumeMounts:
          - mountPath: mountPath
            mountPropagation: mountPropagation
            name: name
            readOnly: true
            subPath: subPath
          - mountPath: mountPath
            mountPropagation: mountPropagation
            name: name
            readOnly: true
            subPath: subPath
          args:
          - args
          - args
          lifecycle:
            postStart:
              tcpSocket:
                port: null
                host: host
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            preStop:
              tcpSocket:
                port: null
                host: host
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
          name: name
          tty: true
          readinessProbe:
            failureThreshold: 7
            periodSeconds: 1
            tcpSocket:
              port: null
              host: host
            timeoutSeconds: 6
            successThreshold: 1
            initialDelaySeconds: 1
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: null
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          stdinOnce: true
          envFrom:
          - configMapRef:
              name: name
              optional: true
            prefix: prefix
            secretRef:
              name: name
              optional: true
          - configMapRef:
              name: name
              optional: true
            prefix: prefix
            secretRef:
              name: name
              optional: true
        - volumeDevices:
          - devicePath: devicePath
            name: name
          - devicePath: devicePath
            name: name
          image: image
          imagePullPolicy: imagePullPolicy
          livenessProbe:
            failureThreshold: 7
            periodSeconds: 1
            tcpSocket:
              port: null
              host: host
            timeoutSeconds: 6
            successThreshold: 1
            initialDelaySeconds: 1
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: null
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          stdin: true
          terminationMessagePolicy: terminationMessagePolicy
          terminationMessagePath: terminationMessagePath
          workingDir: workingDir
          resources:
            requests:
              key: null
            limits:
              key: null
          securityContext:
            privileged: true
            runAsUser: 4
            capabilities:
              add:
              - add
              - add
              drop:
              - drop
              - drop
            seLinuxOptions:
              role: role
              level: level
              type: type
              user: user
            allowPrivilegeEscalation: true
            runAsNonRoot: true
            readOnlyRootFilesystem: true
          env:
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: {}
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: {}
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          ports:
          - protocol: protocol
            hostIP: hostIP
            name: name
            containerPort: 7
            hostPort: 1
          - protocol: protocol
            hostIP: hostIP
            name: name
            containerPort: 7
            hostPort: 1
          command:
          - command
          - command
          volumeMounts:
          - mountPath: mountPath
            mountPropagation: mountPropagation
            name: name
            readOnly: true
            subPath: subPath
          - mountPath: mountPath
            mountPropagation: mountPropagation
            name: name
            readOnly: true
            subPath: subPath
          args:
          - args
          - args
          lifecycle:
            postStart:
              tcpSocket:
                port: null
                host: host
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            preStop:
              tcpSocket:
                port: null
                host: host
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
          name: name
          tty: true
          readinessProbe:
            failureThreshold: 7
            periodSeconds: 1
            tcpSocket:
              port: null
              host: host
            timeoutSeconds: 6
            successThreshold: 1
            initialDelaySeconds: 1
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: null
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          stdinOnce: true
          envFrom:
          - configMapRef:
              name: name
              optional: true
            prefix: prefix
            secretRef:
              name: name
              optional: true
          - configMapRef:
              name: name
              optional: true
            prefix: prefix
            secretRef:
              name: name
              optional: true
        initContainers:
        - volumeDevices:
          - devicePath: devicePath
            name: name
          - devicePath: devicePath
            name: name
          image: image
          imagePullPolicy: imagePullPolicy
          livenessProbe:
            failureThreshold: 7
            periodSeconds: 1
            tcpSocket:
              port: null
              host: host
            timeoutSeconds: 6
            successThreshold: 1
            initialDelaySeconds: 1
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: null
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          stdin: true
          terminationMessagePolicy: terminationMessagePolicy
          terminationMessagePath: terminationMessagePath
          workingDir: workingDir
          resources:
            requests:
              key: null
            limits:
              key: null
          securityContext:
            privileged: true
            runAsUser: 4
            capabilities:
              add:
              - add
              - add
              drop:
              - drop
              - drop
            seLinuxOptions:
              role: role
              level: level
              type: type
              user: user
            allowPrivilegeEscalation: true
            runAsNonRoot: true
            readOnlyRootFilesystem: true
          env:
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: {}
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: {}
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          ports:
          - protocol: protocol
            hostIP: hostIP
            name: name
            containerPort: 7
            hostPort: 1
          - protocol: protocol
            hostIP: hostIP
            name: name
            containerPort: 7
            hostPort: 1
          command:
          - command
          - command
          volumeMounts:
          - mountPath: mountPath
            mountPropagation: mountPropagation
            name: name
            readOnly: true
            subPath: subPath
          - mountPath: mountPath
            mountPropagation: mountPropagation
            name: name
            readOnly: true
            subPath: subPath
          args:
          - args
          - args
          lifecycle:
            postStart:
              tcpSocket:
                port: null
                host: host
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            preStop:
              tcpSocket:
                port: null
                host: host
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
          name: name
          tty: true
          readinessProbe:
            failureThreshold: 7
            periodSeconds: 1
            tcpSocket:
              port: null
              host: host
            timeoutSeconds: 6
            successThreshold: 1
            initialDelaySeconds: 1
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: null
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          stdinOnce: true
          envFrom:
          - configMapRef:
              name: name
              optional: true
            prefix: prefix
            secretRef:
              name: name
              optional: true
          - configMapRef:
              name: name
              optional: true
            prefix: prefix
            secretRef:
              name: name
              optional: true
        - volumeDevices:
          - devicePath: devicePath
            name: name
          - devicePath: devicePath
            name: name
          image: image
          imagePullPolicy: imagePullPolicy
          livenessProbe:
            failureThreshold: 7
            periodSeconds: 1
            tcpSocket:
              port: null
              host: host
            timeoutSeconds: 6
            successThreshold: 1
            initialDelaySeconds: 1
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: null
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          stdin: true
          terminationMessagePolicy: terminationMessagePolicy
          terminationMessagePath: terminationMessagePath
          workingDir: workingDir
          resources:
            requests:
              key: null
            limits:
              key: null
          securityContext:
            privileged: true
            runAsUser: 4
            capabilities:
              add:
              - add
              - add
              drop:
              - drop
              - drop
            seLinuxOptions:
              role: role
              level: level
              type: type
              user: user
            allowPrivilegeEscalation: true
            runAsNonRoot: true
            readOnlyRootFilesystem: true
          env:
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: {}
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: {}
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          ports:
          - protocol: protocol
            hostIP: hostIP
            name: name
            containerPort: 7
            hostPort: 1
          - protocol: protocol
            hostIP: hostIP
            name: name
            containerPort: 7
            hostPort: 1
          command:
          - command
          - command
          volumeMounts:
          - mountPath: mountPath
            mountPropagation: mountPropagation
            name: name
            readOnly: true
            subPath: subPath
          - mountPath: mountPath
            mountPropagation: mountPropagation
            name: name
            readOnly: true
            subPath: subPath
          args:
          - args
          - args
          lifecycle:
            postStart:
              tcpSocket:
                port: null
                host: host
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            preStop:
              tcpSocket:
                port: null
                host: host
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: null
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
          name: name
          tty: true
          readinessProbe:
            failureThreshold: 7
            periodSeconds: 1
            tcpSocket:
              port: null
              host: host
            timeoutSeconds: 6
            successThreshold: 1
            initialDelaySeconds: 1
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: null
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          stdinOnce: true
          envFrom:
          - configMapRef:
              name: name
              optional: true
            prefix: prefix
            secretRef:
              name: name
              optional: true
          - configMapRef:
              name: name
              optional: true
            prefix: prefix
            secretRef:
              name: name
              optional: true
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
              - matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
              weight: 2
            - preference:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
              weight: 2
          podAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            - labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              weight: 4
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              weight: 4
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            - labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              weight: 4
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              weight: 4
        hostPID: true
      status:
        phase: phase
        reason: reason
        podIP: podIP
        containerStatuses:
        - image: image
          imageID: imageID
          restartCount: 0
          ready: true
          name: name
          state:
            running:
              startedAt: null
            waiting:
              reason: reason
              message: message
            terminated:
              reason: reason
              exitCode: 3
              startedAt: null
              containerID: containerID
              message: message
              signal: 7
              finishedAt: null
          containerID: containerID
          lastState:
            running:
              startedAt: null
            waiting:
              reason: reason
              message: message
            terminated:
              reason: reason
              exitCode: 3
              startedAt: null
              containerID: containerID
              message: message
              signal: 7
              finishedAt: null
        - image: image
          imageID: imageID
          restartCount: 0
          ready: true
          name: name
          state:
            running:
              startedAt: null
            waiting:
              reason: reason
              message: message
            terminated:
              reason: reason
              exitCode: 3
              startedAt: null
              containerID: containerID
              message: message
              signal: 7
              finishedAt: null
          containerID: containerID
          lastState:
            running:
              startedAt: null
            waiting:
              reason: reason
              message: message
            terminated:
              reason: reason
              exitCode: 3
              startedAt: null
              containerID: containerID
              message: message
              signal: 7
              finishedAt: null
        hostIP: hostIP
        startTime: null
        qosClass: qosClass
        conditions:
        - reason: reason
          lastTransitionTime: null
          message: message
          type: type
          lastProbeTime: null
          status: status
        - reason: reason
          lastTransitionTime: null
          message: message
          type: type
          lastProbeTime: null
          status: status
        message: message
        initContainerStatuses:
        - image: image
          imageID: imageID
          restartCount: 0
          ready: true
          name: name
          state:
            running:
              startedAt: null
            waiting:
              reason: reason
              message: message
            terminated:
              reason: reason
              exitCode: 3
              startedAt: null
              containerID: containerID
              message: message
              signal: 7
              finishedAt: null
          containerID: containerID
          lastState:
            running:
              startedAt: null
            waiting:
              reason: reason
              message: message
            terminated:
              reason: reason
              exitCode: 3
              startedAt: null
              containerID: containerID
              message: message
              signal: 7
              finishedAt: null
        - image: image
          imageID: imageID
          restartCount: 0
          ready: true
          name: name
          state:
            running:
              startedAt: null
            waiting:
              reason: reason
              message: message
            terminated:
              reason: reason
              exitCode: 3
              startedAt: null
              containerID: containerID
              message: message
              signal: 7
              finishedAt: null
          containerID: containerID
          lastState:
            running:
              startedAt: null
            waiting:
              reason: reason
              message: message
            terminated:
              reason: reason
              exitCode: 3
              startedAt: null
              containerID: containerID
              message: message
              signal: 7
              finishedAt: null
    x-kubernetes-group-version-kind:
    - group:
      kind: Pod
      version: v1
  io.k8s.api.core.v1.PodSpec:
    required:
    - containers
    properties:
      activeDeadlineSeconds:
        type: integer
        format: int64
        description: Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.
      affinity:
        description: If specified, the pod's scheduling constraints
        $ref: '#/definitions/io.k8s.api.core.v1.Affinity'
      automountServiceAccountToken:
        type: boolean
        description: AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.
      containers:
        type: array
        description: List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.Container'
        x-kubernetes-patch-strategy: merge
        x-kubernetes-patch-merge-key: name
      dnsConfig:
        description: Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy. This is an alpha feature introduced in v1.9 and CustomPodDNS feature gate must be enabled to use it.
        $ref: '#/definitions/io.k8s.api.core.v1.PodDNSConfig'
      dnsPolicy:
        type: string
        description: Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'. Note that 'None' policy is an alpha feature introduced in v1.9 and CustomPodDNS feature gate must be enabled to use it.
      hostAliases:
        type: array
        description: HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.HostAlias'
        x-kubernetes-patch-strategy: merge
        x-kubernetes-patch-merge-key: ip
      hostIPC:
        type: boolean
        description: 'Use the host''s ipc namespace. Optional: Default to false.'
      hostNetwork:
        type: boolean
        description: Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.
      hostPID:
        type: boolean
        description: 'Use the host''s pid namespace. Optional: Default to false.'
      hostname:
        type: string
        description: Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.
      imagePullSecrets:
        type: array
        description: 'ImagePullSecrets is an optional list of references to secrets
          in the same namespace to use for pulling any of the images used by this
          PodSpec. If specified, these secrets will be passed to individual puller
          implementations for them to use. For example, in the case of docker, only
          DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.LocalObjectReference'
        x-kubernetes-patch-strategy: merge
        x-kubernetes-patch-merge-key: name
      initContainers:
        type: array
        description: 'List of initialization containers belonging to the pod. Init
          containers are executed in order prior to containers being started. If any
          init container fails, the pod is considered to have failed and is handled
          according to its restartPolicy. The name for an init container or normal
          container must be unique among all containers. Init containers may not have
          Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements
          of an init container are taken into account during scheduling by finding
          the highest request/limit for each resource type, and then using the max
          of of that value or the sum of the normal containers. Limits are applied
          to init containers in a similar fashion. Init containers cannot currently
          be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/'
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.Container'
        x-kubernetes-patch-strategy: merge
        x-kubernetes-patch-merge-key: name
      nodeName:
        type: string
        description: NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.
      nodeSelector:
        type: object
        description: 'NodeSelector is a selector which must be true for the pod to
          fit on a node. Selector which must match a node''s labels for the pod to
          be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
        additionalProperties:
          type: string
      priority:
        type: integer
        format: int32
        description: The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.
      priorityClassName:
        type: string
        description: If specified, indicates the pod's priority. "SYSTEM" is a special keyword which indicates the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.
      restartPolicy:
        type: string
        description: 'Restart policy for all containers within the pod. One of Always,
          OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy'
      schedulerName:
        type: string
        description: If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.
      securityContext:
        description: 'SecurityContext holds pod-level security attributes and common
          container settings. Optional: Defaults to empty.  See type description for
          default values of each field.'
        $ref: '#/definitions/io.k8s.api.core.v1.PodSecurityContext'
      serviceAccount:
        type: string
        description: 'DeprecatedServiceAccount is a depreciated alias for ServiceAccountName.
          Deprecated: Use serviceAccountName instead.'
      serviceAccountName:
        type: string
        description: 'ServiceAccountName is the name of the ServiceAccount to use
          to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
      subdomain:
        type: string
        description: If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>". If not specified, the pod will not have a domainname at all.
      terminationGracePeriodSeconds:
        type: integer
        format: int64
        description: Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.
      tolerations:
        type: array
        description: If specified, the pod's tolerations.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.Toleration'
      volumes:
        type: array
        description: 'List of volumes that can be mounted by containers belonging
          to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes'
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.Volume'
        x-kubernetes-patch-strategy: merge,retainKeys
        x-kubernetes-patch-merge-key: name
    description: PodSpec is a description of a pod.
    example:
      dnsPolicy: dnsPolicy
      nodeName: nodeName
      terminationGracePeriodSeconds: 8
      dnsConfig:
        searches:
        - searches
        - searches
        nameservers:
        - nameservers
        - nameservers
        options:
        - name: name
          value: value
        - name: name
          value: value
      hostNetwork: true
      serviceAccountName: serviceAccountName
      imagePullSecrets:
      - name: name
      - name: name
      priorityClassName: priorityClassName
      hostAliases:
      - ip: ip
        hostnames:
        - hostnames
        - hostnames
      - ip: ip
        hostnames:
        - hostnames
        - hostnames
      securityContext:
        runAsUser: 9
        seLinuxOptions:
          role: role
          level: level
          type: type
          user: user
        fsGroup: 9
        supplementalGroups:
        - 6
        - 6
        runAsNonRoot: true
      nodeSelector:
        key: nodeSelector
      hostname: hostname
      tolerations:
      - effect: effect
        tolerationSeconds: 9
        value: value
        key: key
        operator: operator
      - effect: effect
        tolerationSeconds: 9
        value: value
        key: key
        operator: operator
      automountServiceAccountToken: true
      schedulerName: schedulerName
      activeDeadlineSeconds: 3
      hostIPC: true
      volumes:
      - quobyte:
          volume: volume
          registry: registry
          readOnly: true
          user: user
          group: group
        azureFile:
          secretName: secretName
          readOnly: true
          shareName: shareName
        flexVolume:
          driver: driver
          options:
            key: options
          secretRef:
            name: name
          readOnly: true
          fsType: fsType
        secret:
          secretName: secretName
          defaultMode: 3
          optional: true
          items:
          - mode: 6
            path: path
            key: key
          - mode: 6
            path: path
            key: key
        projected:
          sources:
          - downwardAPI:
              items:
              - mode: 2
                path: path
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
              - mode: 2
                path: path
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            configMap:
              name: name
              optional: true
              items:
              - mode: 6
                path: path
                key: key
              - mode: 6
                path: path
                key: key
            secret:
              name: name
              optional: true
              items:
              - mode: 6
                path: path
                key: key
              - mode: 6
                path: path
                key: key
          - downwardAPI:
              items:
              - mode: 2
                path: path
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
              - mode: 2
                path: path
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            configMap:
              name: name
              optional: true
              items:
              - mode: 6
                path: path
                key: key
              - mode: 6
                path: path
                key: key
            secret:
              name: name
              optional: true
              items:
              - mode: 6
                path: path
                key: key
              - mode: 6
                path: path
                key: key
          defaultMode: 6
        cephfs:
          path: path
          secretRef:
            name: name
          secretFile: secretFile
          readOnly: true
          user: user
          monitors:
          - monitors
          - monitors
        scaleIO:
          system: system
          protectionDomain: protectionDomain
          sslEnabled: true
          storageMode: storageMode
          volumeName: volumeName
          secretRef:
            name: name
          readOnly: true
          fsType: fsType
          storagePool: storagePool
          gateway: gateway
        emptyDir:
          sizeLimit: null
          medium: medium
        glusterfs:
          path: path
          endpoints: endpoints
          readOnly: true
        gcePersistentDisk:
          partition: 6
          readOnly: true
          pdName: pdName
          fsType: fsType
        photonPersistentDisk:
          pdID: pdID
          fsType: fsType
        azureDisk:
          diskName: diskName
          kind: kind
          readOnly: true
          cachingMode: cachingMode
          diskURI: diskURI
          fsType: fsType
        cinder:
          volumeID: volumeID
          readOnly: true
          fsType: fsType
        downwardAPI:
          defaultMode: 1
          items:
          - mode: 2
            path: path
            resourceFieldRef:
              divisor: {}
              resource: resource
              containerName: containerName
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
          - mode: 2
            path: path
            resourceFieldRef:
              divisor: {}
              resource: resource
              containerName: containerName
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        awsElasticBlockStore:
          partition: 6
          volumeID: volumeID
          readOnly: true
          fsType: fsType
        flocker:
          datasetName: datasetName
          datasetUUID: datasetUUID
        iscsi:
          chapAuthSession: true
          iscsiInterface: iscsiInterface
          lun: 5
          chapAuthDiscovery: true
          iqn: iqn
          portals:
          - portals
          - portals
          secretRef:
            name: name
          initiatorName: initiatorName
          readOnly: true
          fsType: fsType
          targetPortal: targetPortal
        rbd:
          image: image
          pool: pool
          secretRef:
            name: name
          readOnly: true
          fsType: fsType
          keyring: keyring
          user: user
          monitors:
          - monitors
          - monitors
        configMap:
          defaultMode: 3
          name: name
          optional: true
          items:
          - mode: 6
            path: path
            key: key
          - mode: 6
            path: path
            key: key
        storageos:
          volumeNamespace: volumeNamespace
          volumeName: volumeName
          secretRef:
            name: name
          readOnly: true
          fsType: fsType
        name: name
        nfs:
          path: path
          server: server
          readOnly: true
        persistentVolumeClaim:
          claimName: claimName
          readOnly: true
        gitRepo:
          repository: repository
          directory: directory
          revision: revision
        portworxVolume:
          volumeID: volumeID
          readOnly: true
          fsType: fsType
        vsphereVolume:
          storagePolicyName: storagePolicyName
          storagePolicyID: storagePolicyID
          volumePath: volumePath
          fsType: fsType
        fc:
          lun: 6
          targetWWNs:
          - targetWWNs
          - targetWWNs
          readOnly: true
          wwids:
          - wwids
          - wwids
          fsType: fsType
        hostPath:
          path: path
          type: type
      - quobyte:
          volume: volume
          registry: registry
          readOnly: true
          user: user
          group: group
        azureFile:
          secretName: secretName
          readOnly: true
          shareName: shareName
        flexVolume:
          driver: driver
          options:
            key: options
          secretRef:
            name: name
          readOnly: true
          fsType: fsType
        secret:
          secretName: secretName
          defaultMode: 3
          optional: true
          items:
          - mode: 6
            path: path
            key: key
          - mode: 6
            path: path
            key: key
        projected:
          sources:
          - downwardAPI:
              items:
              - mode: 2
                path: path
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
              - mode: 2
                path: path
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            configMap:
              name: name
              optional: true
              items:
              - mode: 6
                path: path
                key: key
              - mode: 6
                path: path
                key: key
            secret:
              name: name
              optional: true
              items:
              - mode: 6
                path: path
                key: key
              - mode: 6
                path: path
                key: key
          - downwardAPI:
              items:
              - mode: 2
                path: path
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
              - mode: 2
                path: path
                resourceFieldRef:
                  divisor: {}
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            configMap:
              name: name
              optional: true
              items:
              - mode: 6
                path: path
                key: key
              - mode: 6
                path: path
                key: key
            secret:
              name: name
              optional: true
              items:
              - mode: 6
                path: path
                key: key
              - mode: 6
                path: path
                key: key
          defaultMode: 6
        cephfs:
          path: path
          secretRef:
            name: name
          secretFile: secretFile
          readOnly: true
          user: user
          monitors:
          - monitors
          - monitors
        scaleIO:
          system: system
          protectionDomain: protectionDomain
          sslEnabled: true
          storageMode: storageMode
          volumeName: volumeName
          secretRef:
            name: name
          readOnly: true
          fsType: fsType
          storagePool: storagePool
          gateway: gateway
        emptyDir:
          sizeLimit: null
          medium: medium
        glusterfs:
          path: path
          endpoints: endpoints
          readOnly: true
        gcePersistentDisk:
          partition: 6
          readOnly: true
          pdName: pdName
          fsType: fsType
        photonPersistentDisk:
          pdID: pdID
          fsType: fsType
        azureDisk:
          diskName: diskName
          kind: kind
          readOnly: true
          cachingMode: cachingMode
          diskURI: diskURI
          fsType: fsType
        cinder:
          volumeID: volumeID
          readOnly: true
          fsType: fsType
        downwardAPI:
          defaultMode: 1
          items:
          - mode: 2
            path: path
            resourceFieldRef:
              divisor: {}
              resource: resource
              containerName: containerName
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
          - mode: 2
            path: path
            resourceFieldRef:
              divisor: {}
              resource: resource
              containerName: containerName
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        awsElasticBlockStore:
          partition: 6
          volumeID: volumeID
          readOnly: true
          fsType: fsType
        flocker:
          datasetName: datasetName
          datasetUUID: datasetUUID
        iscsi:
          chapAuthSession: true
          iscsiInterface: iscsiInterface
          lun: 5
          chapAuthDiscovery: true
          iqn: iqn
          portals:
          - portals
          - portals
          secretRef:
            name: name
          initiatorName: initiatorName
          readOnly: true
          fsType: fsType
          targetPortal: targetPortal
        rbd:
          image: image
          pool: pool
          secretRef:
            name: name
          readOnly: true
          fsType: fsType
          keyring: keyring
          user: user
          monitors:
          - monitors
          - monitors
        configMap:
          defaultMode: 3
          name: name
          optional: true
          items:
          - mode: 6
            path: path
            key: key
          - mode: 6
            path: path
            key: key
        storageos:
          volumeNamespace: volumeNamespace
          volumeName: volumeName
          secretRef:
            name: name
          readOnly: true
          fsType: fsType
        name: name
        nfs:
          path: path
          server: server
          readOnly: true
        persistentVolumeClaim:
          claimName: claimName
          readOnly: true
        gitRepo:
          repository: repository
          directory: directory
          revision: revision
        portworxVolume:
          volumeID: volumeID
          readOnly: true
          fsType: fsType
        vsphereVolume:
          storagePolicyName: storagePolicyName
          storagePolicyID: storagePolicyID
          volumePath: volumePath
          fsType: fsType
        fc:
          lun: 6
          targetWWNs:
          - targetWWNs
          - targetWWNs
          readOnly: true
          wwids:
          - wwids
          - wwids
          fsType: fsType
        hostPath:
          path: path
          type: type
      serviceAccount: serviceAccount
      priority: 5
      restartPolicy: restartPolicy
      subdomain: subdomain
      containers:
      - volumeDevices:
        - devicePath: devicePath
          name: name
        - devicePath: devicePath
          name: name
        image: image
        imagePullPolicy: imagePullPolicy
        livenessProbe:
          failureThreshold: 7
          periodSeconds: 1
          tcpSocket:
            port: null
            host: host
          timeoutSeconds: 6
          successThreshold: 1
          initialDelaySeconds: 1
          exec:
            command:
            - command
            - command
          httpGet:
            path: path
            scheme: scheme
            port: null
            host: host
            httpHeaders:
            - name: name
              value: value
            - name: name
              value: value
        stdin: true
        terminationMessagePolicy: terminationMessagePolicy
        terminationMessagePath: terminationMessagePath
        workingDir: workingDir
        resources:
          requests:
            key: null
          limits:
            key: null
        securityContext:
          privileged: true
          runAsUser: 4
          capabilities:
            add:
            - add
            - add
            drop:
            - drop
            - drop
          seLinuxOptions:
            role: role
            level: level
            type: type
            user: user
          allowPrivilegeEscalation: true
          runAsNonRoot: true
          readOnlyRootFilesystem: true
        env:
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              name: name
              optional: true
              key: key
            resourceFieldRef:
              divisor: {}
              resource: resource
              containerName: containerName
            configMapKeyRef:
              name: name
              optional: true
              key: key
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              name: name
              optional: true
              key: key
            resourceFieldRef:
              divisor: {}
              resource: resource
              containerName: containerName
            configMapKeyRef:
              name: name
              optional: true
              key: key
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        ports:
        - protocol: protocol
          hostIP: hostIP
          name: name
          containerPort: 7
          hostPort: 1
        - protocol: protocol
          hostIP: hostIP
          name: name
          containerPort: 7
          hostPort: 1
        command:
        - command
        - command
        volumeMounts:
        - mountPath: mountPath
          mountPropagation: mountPropagation
          name: name
          readOnly: true
          subPath: subPath
        - mountPath: mountPath
          mountPropagation: mountPropagation
          name: name
          readOnly: true
          subPath: subPath
        args:
        - args
        - args
        lifecycle:
          postStart:
            tcpSocket:
              port: null
              host: host
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: null
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          preStop:
            tcpSocket:
              port: null
              host: host
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: null
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
        name: name
        tty: true
        readinessProbe:
          failureThreshold: 7
          periodSeconds: 1
          tcpSocket:
            port: null
            host: host
          timeoutSeconds: 6
          successThreshold: 1
          initialDelaySeconds: 1
          exec:
            command:
            - command
            - command
          httpGet:
            path: path
            scheme: scheme
            port: null
            host: host
            httpHeaders:
            - name: name
              value: value
            - name: name
              value: value
        stdinOnce: true
        envFrom:
        - configMapRef:
            name: name
            optional: true
          prefix: prefix
          secretRef:
            name: name
            optional: true
        - configMapRef:
            name: name
            optional: true
          prefix: prefix
          secretRef:
            name: name
            optional: true
      - volumeDevices:
        - devicePath: devicePath
          name: name
        - devicePath: devicePath
          name: name
        image: image
        imagePullPolicy: imagePullPolicy
        livenessProbe:
          failureThreshold: 7
          periodSeconds: 1
          tcpSocket:
            port: null
            host: host
          timeoutSeconds: 6
          successThreshold: 1
          initialDelaySeconds: 1
          exec:
            command:
            - command
            - command
          httpGet:
            path: path
            scheme: scheme
            port: null
            host: host
            httpHeaders:
            - name: name
              value: value
            - name: name
              value: value
        stdin: true
        terminationMessagePolicy: terminationMessagePolicy
        terminationMessagePath: terminationMessagePath
        workingDir: workingDir
        resources:
          requests:
            key: null
          limits:
            key: null
        securityContext:
          privileged: true
          runAsUser: 4
          capabilities:
            add:
            - add
            - add
            drop:
            - drop
            - drop
          seLinuxOptions:
            role: role
            level: level
            type: type
            user: user
          allowPrivilegeEscalation: true
          runAsNonRoot: true
          readOnlyRootFilesystem: true
        env:
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              name: name
              optional: true
              key: key
            resourceFieldRef:
              divisor: {}
              resource: resource
              containerName: containerName
            configMapKeyRef:
              name: name
              optional: true
              key: key
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              name: name
              optional: true
              key: key
            resourceFieldRef:
              divisor: {}
              resource: resource
              containerName: containerName
            configMapKeyRef:
              name: name
              optional: true
              key: key
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        ports:
        - protocol: protocol
          hostIP: hostIP
          name: name
          containerPort: 7
          hostPort: 1
        - protocol: protocol
          hostIP: hostIP
          name: name
          containerPort: 7
          hostPort: 1
        command:
        - command
        - command
        volumeMounts:
        - mountPath: mountPath
          mountPropagation: mountPropagation
          name: name
          readOnly: true
          subPath: subPath
        - mountPath: mountPath
          mountPropagation: mountPropagation
          name: name
          readOnly: true
          subPath: subPath
        args:
        - args
        - args
        lifecycle:
          postStart:
            tcpSocket:
              port: null
              host: host
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: null
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          preStop:
            tcpSocket:
              port: null
              host: host
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: null
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
        name: name
        tty: true
        readinessProbe:
          failureThreshold: 7
          periodSeconds: 1
          tcpSocket:
            port: null
            host: host
          timeoutSeconds: 6
          successThreshold: 1
          initialDelaySeconds: 1
          exec:
            command:
            - command
            - command
          httpGet:
            path: path
            scheme: scheme
            port: null
            host: host
            httpHeaders:
            - name: name
              value: value
            - name: name
              value: value
        stdinOnce: true
        envFrom:
        - configMapRef:
            name: name
            optional: true
          prefix: prefix
          secretRef:
            name: name
            optional: true
        - configMapRef:
            name: name
            optional: true
          prefix: prefix
          secretRef:
            name: name
            optional: true
      initContainers:
      - volumeDevices:
        - devicePath: devicePath
          name: name
        - devicePath: devicePath
          name: name
        image: image
        imagePullPolicy: imagePullPolicy
        livenessProbe:
          failureThreshold: 7
          periodSeconds: 1
          tcpSocket:
            port: null
            host: host
          timeoutSeconds: 6
          successThreshold: 1
          initialDelaySeconds: 1
          exec:
            command:
            - command
            - command
          httpGet:
            path: path
            scheme: scheme
            port: null
            host: host
            httpHeaders:
            - name: name
              value: value
            - name: name
              value: value
        stdin: true
        terminationMessagePolicy: terminationMessagePolicy
        terminationMessagePath: terminationMessagePath
        workingDir: workingDir
        resources:
          requests:
            key: null
          limits:
            key: null
        securityContext:
          privileged: true
          runAsUser: 4
          capabilities:
            add:
            - add
            - add
            drop:
            - drop
            - drop
          seLinuxOptions:
            role: role
            level: level
            type: type
            user: user
          allowPrivilegeEscalation: true
          runAsNonRoot: true
          readOnlyRootFilesystem: true
        env:
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              name: name
              optional: true
              key: key
            resourceFieldRef:
              divisor: {}
              resource: resource
              containerName: containerName
            configMapKeyRef:
              name: name
              optional: true
              key: key
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              name: name
              optional: true
              key: key
            resourceFieldRef:
              divisor: {}
              resource: resource
              containerName: containerName
            configMapKeyRef:
              name: name
              optional: true
              key: key
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        ports:
        - protocol: protocol
          hostIP: hostIP
          name: name
          containerPort: 7
          hostPort: 1
        - protocol: protocol
          hostIP: hostIP
          name: name
          containerPort: 7
          hostPort: 1
        command:
        - command
        - command
        volumeMounts:
        - mountPath: mountPath
          mountPropagation: mountPropagation
          name: name
          readOnly: true
          subPath: subPath
        - mountPath: mountPath
          mountPropagation: mountPropagation
          name: name
          readOnly: true
          subPath: subPath
        args:
        - args
        - args
        lifecycle:
          postStart:
            tcpSocket:
              port: null
              host: host
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: null
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          preStop:
            tcpSocket:
              port: null
              host: host
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: null
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
        name: name
        tty: true
        readinessProbe:
          failureThreshold: 7
          periodSeconds: 1
          tcpSocket:
            port: null
            host: host
          timeoutSeconds: 6
          successThreshold: 1
          initialDelaySeconds: 1
          exec:
            command:
            - command
            - command
          httpGet:
            path: path
            scheme: scheme
            port: null
            host: host
            httpHeaders:
            - name: name
              value: value
            - name: name
              value: value
        stdinOnce: true
        envFrom:
        - configMapRef:
            name: name
            optional: true
          prefix: prefix
          secretRef:
            name: name
            optional: true
        - configMapRef:
            name: name
            optional: true
          prefix: prefix
          secretRef:
            name: name
            optional: true
      - volumeDevices:
        - devicePath: devicePath
          name: name
        - devicePath: devicePath
          name: name
        image: image
        imagePullPolicy: imagePullPolicy
        livenessProbe:
          failureThreshold: 7
          periodSeconds: 1
          tcpSocket:
            port: null
            host: host
          timeoutSeconds: 6
          successThreshold: 1
          initialDelaySeconds: 1
          exec:
            command:
            - command
            - command
          httpGet:
            path: path
            scheme: scheme
            port: null
            host: host
            httpHeaders:
            - name: name
              value: value
            - name: name
              value: value
        stdin: true
        terminationMessagePolicy: terminationMessagePolicy
        terminationMessagePath: terminationMessagePath
        workingDir: workingDir
        resources:
          requests:
            key: null
          limits:
            key: null
        securityContext:
          privileged: true
          runAsUser: 4
          capabilities:
            add:
            - add
            - add
            drop:
            - drop
            - drop
          seLinuxOptions:
            role: role
            level: level
            type: type
            user: user
          allowPrivilegeEscalation: true
          runAsNonRoot: true
          readOnlyRootFilesystem: true
        env:
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              name: name
              optional: true
              key: key
            resourceFieldRef:
              divisor: {}
              resource: resource
              containerName: containerName
            configMapKeyRef:
              name: name
              optional: true
              key: key
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              name: name
              optional: true
              key: key
            resourceFieldRef:
              divisor: {}
              resource: resource
              containerName: containerName
            configMapKeyRef:
              name: name
              optional: true
              key: key
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        ports:
        - protocol: protocol
          hostIP: hostIP
          name: name
          containerPort: 7
          hostPort: 1
        - protocol: protocol
          hostIP: hostIP
          name: name
          containerPort: 7
          hostPort: 1
        command:
        - command
        - command
        volumeMounts:
        - mountPath: mountPath
          mountPropagation: mountPropagation
          name: name
          readOnly: true
          subPath: subPath
        - mountPath: mountPath
          mountPropagation: mountPropagation
          name: name
          readOnly: true
          subPath: subPath
        args:
        - args
        - args
        lifecycle:
          postStart:
            tcpSocket:
              port: null
              host: host
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: null
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          preStop:
            tcpSocket:
              port: null
              host: host
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: null
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
        name: name
        tty: true
        readinessProbe:
          failureThreshold: 7
          periodSeconds: 1
          tcpSocket:
            port: null
            host: host
          timeoutSeconds: 6
          successThreshold: 1
          initialDelaySeconds: 1
          exec:
            command:
            - command
            - command
          httpGet:
            path: path
            scheme: scheme
            port: null
            host: host
            httpHeaders:
            - name: name
              value: value
            - name: name
              value: value
        stdinOnce: true
        envFrom:
        - configMapRef:
            name: name
            optional: true
          prefix: prefix
          secretRef:
            name: name
            optional: true
        - configMapRef:
            name: name
            optional: true
          prefix: prefix
          secretRef:
            name: name
            optional: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
            - matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
            weight: 2
          - preference:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
            weight: 2
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          - labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            weight: 4
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            weight: 4
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          - labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            weight: 4
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            weight: 4
      hostPID: true
  io.k8s.api.core.v1.Affinity:
    properties:
      nodeAffinity:
        description: Describes node affinity scheduling rules for the pod.
        $ref: '#/definitions/io.k8s.api.core.v1.NodeAffinity'
      podAffinity:
        description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
        $ref: '#/definitions/io.k8s.api.core.v1.PodAffinity'
      podAntiAffinity:
        description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
        $ref: '#/definitions/io.k8s.api.core.v1.PodAntiAffinity'
    description: Affinity is a group of affinity scheduling rules.
    example:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
          - matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
          weight: 2
        - preference:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
          weight: 2
      podAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        - labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          weight: 4
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          weight: 4
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        - labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          weight: 4
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          weight: 4
  io.k8s.api.core.v1.NodeAffinity:
    properties:
      preferredDuringSchedulingIgnoredDuringExecution:
        type: array
        description: The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.PreferredSchedulingTerm'
      requiredDuringSchedulingIgnoredDuringExecution:
        description: If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
        $ref: '#/definitions/io.k8s.api.core.v1.NodeSelector'
    description: Node affinity is a group of node affinity scheduling rules.
    example:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
        - matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
      preferredDuringSchedulingIgnoredDuringExecution:
      - preference:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
        weight: 2
      - preference:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
        weight: 2
  io.k8s.api.core.v1.PreferredSchedulingTerm:
    required:
    - preference
    - weight
    properties:
      preference:
        description: A node selector term, associated with the corresponding weight.
        $ref: '#/definitions/io.k8s.api.core.v1.NodeSelectorTerm'
      weight:
        type: integer
        format: int32
        description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
    description: An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
    example:
      preference:
        matchExpressions:
        - values:
          - values
          - values
          key: key
          operator: operator
        - values:
          - values
          - values
          key: key
          operator: operator
      weight: 2
  io.k8s.api.core.v1.NodeSelectorTerm:
    required:
    - matchExpressions
    properties:
      matchExpressions:
        type: array
        description: Required. A list of node selector requirements. The requirements are ANDed.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement'
    description: A null or empty node selector term matches no objects.
    example:
      matchExpressions:
      - values:
        - values
        - values
        key: key
        operator: operator
      - values:
        - values
        - values
        key: key
        operator: operator
  io.k8s.api.core.v1.NodeSelectorRequirement:
    required:
    - key
    - operator
    properties:
      key:
        type: string
        description: The label key that the selector applies to.
      operator:
        type: string
        description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
      values:
        type: array
        description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
        items:
          type: string
    description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
    example:
      values:
      - values
      - values
      key: key
      operator: operator
  io.k8s.api.core.v1.NodeSelector:
    required:
    - nodeSelectorTerms
    properties:
      nodeSelectorTerms:
        type: array
        description: Required. A list of node selector terms. The terms are ORed.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.NodeSelectorTerm'
    description: A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
    example:
      nodeSelectorTerms:
      - matchExpressions:
        - values:
          - values
          - values
          key: key
          operator: operator
        - values:
          - values
          - values
          key: key
          operator: operator
      - matchExpressions:
        - values:
          - values
          - values
          key: key
          operator: operator
        - values:
          - values
          - values
          key: key
          operator: operator
  io.k8s.api.core.v1.PodAffinity:
    properties:
      preferredDuringSchedulingIgnoredDuringExecution:
        type: array
        description: The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm'
      requiredDuringSchedulingIgnoredDuringExecution:
        type: array
        description: If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.PodAffinityTerm'
    description: Pod affinity is a group of inter pod affinity scheduling rules.
    example:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchLabels:
            key: matchLabels
        topologyKey: topologyKey
        namespaces:
        - namespaces
        - namespaces
      - labelSelector:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchLabels:
            key: matchLabels
        topologyKey: topologyKey
        namespaces:
        - namespaces
        - namespaces
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        weight: 4
      - podAffinityTerm:
          labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        weight: 4
  io.k8s.api.core.v1.WeightedPodAffinityTerm:
    required:
    - podAffinityTerm
    - weight
    properties:
      podAffinityTerm:
        description: Required. A pod affinity term, associated with the corresponding weight.
        $ref: '#/definitions/io.k8s.api.core.v1.PodAffinityTerm'
      weight:
        type: integer
        format: int32
        description: weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
    example:
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchLabels:
            key: matchLabels
        topologyKey: topologyKey
        namespaces:
        - namespaces
        - namespaces
      weight: 4
  io.k8s.api.core.v1.PodAffinityTerm:
    required:
    - topologyKey
    properties:
      labelSelector:
        description: A label query over a set of resources, in this case pods.
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector'
      namespaces:
        type: array
        description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
        items:
          type: string
      topologyKey:
        type: string
        description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    description: Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
    example:
      labelSelector:
        matchExpressions:
        - values:
          - values
          - values
          key: key
          operator: operator
        - values:
          - values
          - values
          key: key
          operator: operator
        matchLabels:
          key: matchLabels
      topologyKey: topologyKey
      namespaces:
      - namespaces
      - namespaces
  io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector:
    properties:
      matchExpressions:
        type: array
        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement'
      matchLabels:
        type: object
        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
        additionalProperties:
          type: string
    description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
    example:
      matchExpressions:
      - values:
        - values
        - values
        key: key
        operator: operator
      - values:
        - values
        - values
        key: key
        operator: operator
      matchLabels:
        key: matchLabels
  io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement:
    required:
    - key
    - operator
    properties:
      key:
        type: string
        description: key is the label key that the selector applies to.
        x-kubernetes-patch-strategy: merge
        x-kubernetes-patch-merge-key: key
      operator:
        type: string
        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
      values:
        type: array
        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
        items:
          type: string
    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
    example:
      values:
      - values
      - values
      key: key
      operator: operator
  io.k8s.api.core.v1.PodAntiAffinity:
    properties:
      preferredDuringSchedulingIgnoredDuringExecution:
        type: array
        description: The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm'
      requiredDuringSchedulingIgnoredDuringExecution:
        type: array
        description: If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.PodAffinityTerm'
    description: Pod anti affinity is a group of inter pod anti affinity scheduling rules.
    example:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchLabels:
            key: matchLabels
        topologyKey: topologyKey
        namespaces:
        - namespaces
        - namespaces
      - labelSelector:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchLabels:
            key: matchLabels
        topologyKey: topologyKey
        namespaces:
        - namespaces
        - namespaces
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        weight: 4
      - podAffinityTerm:
          labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        weight: 4
  io.k8s.api.core.v1.Container:
    required:
    - name
    properties:
      args:
        type: array
        description: 'Arguments to the entrypoint. The docker image''s CMD is used
          if this is not provided. Variable references $(VAR_NAME) are expanded using
          the container''s environment. If a variable cannot be resolved, the reference
          in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped
          with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
          regardless of whether the variable exists or not. Cannot be updated. More
          info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
        items:
          type: string
      command:
        type: array
        description: 'Entrypoint array. Not executed within a shell. The docker image''s
          ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME)
          are expanded using the container''s environment. If a variable cannot be
          resolved, the reference in the input string will be unchanged. The $(VAR_NAME)
          syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references
          will never be expanded, regardless of whether the variable exists or not.
          Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
        items:
          type: string
      env:
        type: array
        description: List of environment variables to set in the container. Cannot be updated.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.EnvVar'
        x-kubernetes-patch-strategy: merge
        x-kubernetes-patch-merge-key: name
      envFrom:
        type: array
        description: List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.EnvFromSource'
      image:
        type: string
        description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
          This field is optional to allow higher level config management to default
          or override container images in workload controllers like Deployments and
          StatefulSets.'
      imagePullPolicy:
        type: string
        description: 'Image pull policy. One of Always, Never, IfNotPresent. Defaults
          to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot
          be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
      lifecycle:
        description: Actions that the management system should take in response to container lifecycle events. Cannot be updated.
        $ref: '#/definitions/io.k8s.api.core.v1.Lifecycle'
      livenessProbe:
        description: 'Periodic probe of container liveness. Container will be restarted
          if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
        $ref: '#/definitions/io.k8s.api.core.v1.Probe'
      name:
        type: string
        description: Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
      ports:
        type: array
        description: List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.ContainerPort'
        x-kubernetes-patch-strategy: merge
        x-kubernetes-patch-merge-key: containerPort
      readinessProbe:
        description: 'Periodic probe of container service readiness. Container will
          be removed from service endpoints if the probe fails. Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
        $ref: '#/definitions/io.k8s.api.core.v1.Probe'
      resources:
        description: 'Compute Resources required by this container. Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
        $ref: '#/definitions/io.k8s.api.core.v1.ResourceRequirements'
      securityContext:
        description: 'Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/
          More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
        $ref: '#/definitions/io.k8s.api.core.v1.SecurityContext'
      stdin:
        type: boolean
        description: Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
      stdinOnce:
        type: boolean
        description: Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
      terminationMessagePath:
        type: string
        description: 'Optional: Path at which the file to which the container''s termination
          message will be written is mounted into the container''s filesystem. Message
          written is intended to be brief final status, such as an assertion failure
          message. Will be truncated by the node if greater than 4096 bytes. The total
          message length across all containers will be limited to 12kb. Defaults to
          /dev/termination-log. Cannot be updated.'
      terminationMessagePolicy:
        type: string
        description: Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
      tty:
        type: boolean
        description: Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
      volumeDevices:
        type: array
        description: volumeDevices is the list of block devices to be used by the container. This is an alpha feature and may change in the future.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.VolumeDevice'
        x-kubernetes-patch-strategy: merge
        x-kubernetes-patch-merge-key: devicePath
      volumeMounts:
        type: array
        description: Pod volumes to mount into the container's filesystem. Cannot be updated.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.VolumeMount'
        x-kubernetes-patch-strategy: merge
        x-kubernetes-patch-merge-key: mountPath
      workingDir:
        type: string
        description: Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
    description: A single application container that you want to run within a pod.
    example:
      volumeDevices:
      - devicePath: devicePath
        name: name
      - devicePath: devicePath
        name: name
      image: image
      imagePullPolicy: imagePullPolicy
      livenessProbe:
        failureThreshold: 7
        periodSeconds: 1
        tcpSocket:
          port: null
          host: host
        timeoutSeconds: 6
        successThreshold: 1
        initialDelaySeconds: 1
        exec:
          command:
          - command
          - command
        httpGet:
          path: path
          scheme: scheme
          port: null
          host: host
          httpHeaders:
          - name: name
            value: value
          - name: name
            value: value
      stdin: true
      terminationMessagePolicy: terminationMessagePolicy
      terminationMessagePath: terminationMessagePath
      workingDir: workingDir
      resources:
        requests:
          key: null
        limits:
          key: null
      securityContext:
        privileged: true
        runAsUser: 4
        capabilities:
          add:
          - add
          - add
          drop:
          - drop
          - drop
        seLinuxOptions:
          role: role
          level: level
          type: type
          user: user
        allowPrivilegeEscalation: true
        runAsNonRoot: true
        readOnlyRootFilesystem: true
      env:
      - name: name
        value: value
        valueFrom:
          secretKeyRef:
            name: name
            optional: true
            key: key
          resourceFieldRef:
            divisor: {}
            resource: resource
            containerName: containerName
          configMapKeyRef:
            name: name
            optional: true
            key: key
          fieldRef:
            apiVersion: apiVersion
            fieldPath: fieldPath
      - name: name
        value: value
        valueFrom:
          secretKeyRef:
            name: name
            optional: true
            key: key
          resourceFieldRef:
            divisor: {}
            resource: resource
            containerName: containerName
          configMapKeyRef:
            name: name
            optional: true
            key: key
          fieldRef:
            apiVersion: apiVersion
            fieldPath: fieldPath
      ports:
      - protocol: protocol
        hostIP: hostIP
        name: name
        containerPort: 7
        hostPort: 1
      - protocol: protocol
        hostIP: hostIP
        name: name
        containerPort: 7
        hostPort: 1
      command:
      - command
      - command
      volumeMounts:
      - mountPath: mountPath
        mountPropagation: mountPropagation
        name: name
        readOnly: true
        subPath: subPath
      - mountPath: mountPath
        mountPropagation: mountPropagation
        name: name
        readOnly: true
        subPath: subPath
      args:
      - args
      - args
      lifecycle:
        postStart:
          tcpSocket:
            port: null
            host: host
          exec:
            command:
            - command
            - command
          httpGet:
            path: path
            scheme: scheme
            port: null
            host: host
            httpHeaders:
            - name: name
              value: value
            - name: name
              value: value
        preStop:
          tcpSocket:
            port: null
            host: host
          exec:
            command:
            - command
            - command
          httpGet:
            path: path
            scheme: scheme
            port: null
            host: host
            httpHeaders:
            - name: name
              value: value
            - name: name
              value: value
      name: name
      tty: true
      readinessProbe:
        failureThreshold: 7
        periodSeconds: 1
        tcpSocket:
          port: null
          host: host
        timeoutSeconds: 6
        successThreshold: 1
        initialDelaySeconds: 1
        exec:
          command:
          - command
          - command
        httpGet:
          path: path
          scheme: scheme
          port: null
          host: host
          httpHeaders:
          - name: name
            value: value
          - name: name
            value: value
      stdinOnce: true
      envFrom:
      - configMapRef:
          name: name
          optional: true
        prefix: prefix
        secretRef:
          name: name
          optional: true
      - configMapRef:
          name: name
          optional: true
        prefix: prefix
        secretRef:
          name: name
          optional: true
  io.k8s.api.core.v1.EnvVar:
    required:
    - name
    properties:
      name:
        type: string
        description: Name of the environment variable. Must be a C_IDENTIFIER.
      value:
        type: string
        description: 'Variable references $(VAR_NAME) are expanded using the previous
          defined environment variables in the container and any service environment
          variables. If a variable cannot be resolved, the reference in the input
          string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double
          $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless
          of whether the variable exists or not. Defaults to "".'
      valueFrom:
        description: Source for the environment variable's value. Cannot be used if value is not empty.
        $ref: '#/definitions/io.k8s.api.core.v1.EnvVarSource'
    description: EnvVar represents an environment variable present in a Container.
    example:
      name: name
      value: value
      valueFrom:
        secretKeyRef:
          name: name
          optional: true
          key: key
        resourceFieldRef:
          divisor: {}
          resource: resource
          containerName: containerName
        configMapKeyRef:
          name: name
          optional: true
          key: key
        fieldRef:
          apiVersion: apiVersion
          fieldPath: fieldPath
  io.k8s.api.core.v1.EnvVarSource:
    properties:
      configMapKeyRef:
        description: Selects a key of a ConfigMap.
        $ref: '#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector'
      fieldRef:
        description: 'Selects a field of the pod: supports metadata.name, metadata.namespace,
          metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName,
          status.hostIP, status.podIP.'
        $ref: '#/definitions/io.k8s.api.core.v1.ObjectFieldSelector'
      resourceFieldRef:
        description: 'Selects a resource of the container: only resources limits and
          requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu,
          requests.memory and requests.ephemeral-storage) are currently supported.'
        $ref: '#/definitions/io.k8s.api.core.v1.ResourceFieldSelector'
      secretKeyRef:
        description: Selects a key of a secret in the pod's namespace
        $ref: '#/definitions/io.k8s.api.core.v1.SecretKeySelector'
    description: EnvVarSource represents a source for the value of an EnvVar.
    example:
      secretKeyRef:
        name: name
        optional: true
        key: key
      resourceFieldRef:
        divisor: {}
        resource: resource
        containerName: containerName
      configMapKeyRef:
        name: name
        optional: true
        key: key
      fieldRef:
        apiVersion: apiVersion
        fieldPath: fieldPath
  io.k8s.api.core.v1.ConfigMapKeySelector:
    required:
    - key
    properties:
      key:
        type: string
        description: The key to select.
      name:
        type: string
        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
      optional:
        type: boolean
        description: Specify whether the ConfigMap or it's key must be defined
    description: Selects a key from a ConfigMap.
    example:
      name: name
      optional: true
      key: key
  io.k8s.api.core.v1.ObjectFieldSelector:
    required:
    - fieldPath
    properties:
      apiVersion:
        type: string
        description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
      fieldPath:
        type: string
        description: Path of the field to select in the specified API version.
    description: ObjectFieldSelector selects an APIVersioned field of an object.
    example:
      apiVersion: apiVersion
      fieldPath: fieldPath
  io.k8s.api.core.v1.ResourceFieldSelector:
    required:
    - resource
    properties:
      containerName:
        type: string
        description: 'Container name: required for volumes, optional for env vars'
      divisor:
        description: Specifies the output format of the exposed resources, defaults to "1"
        $ref: '#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity'
      resource:
        type: string
        description: 'Required: resource to select'
    description: ResourceFieldSelector represents container resources (cpu, memory) and their output format
    example:
      divisor: {}
      resource: resource
      containerName: containerName
  io.k8s.apimachinery.pkg.api.resource.Quantity:
    type: string
  io.k8s.api.core.v1.SecretKeySelector:
    required:
    - key
    properties:
      key:
        type: string
        description: The key of the secret to select from.  Must be a valid secret key.
      name:
        type: string
        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
      optional:
        type: boolean
        description: Specify whether the Secret or it's key must be defined
    description: SecretKeySelector selects a key of a Secret.
    example:
      name: name
      optional: true
      key: key
  io.k8s.api.core.v1.EnvFromSource:
    properties:
      configMapRef:
        description: The ConfigMap to select from
        $ref: '#/definitions/io.k8s.api.core.v1.ConfigMapEnvSource'
      prefix:
        type: string
        description: An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
      secretRef:
        description: The Secret to select from
        $ref: '#/definitions/io.k8s.api.core.v1.SecretEnvSource'
    description: EnvFromSource represents the source of a set of ConfigMaps
    example:
      configMapRef:
        name: name
        optional: true
      prefix: prefix
      secretRef:
        name: name
        optional: true
  io.k8s.api.core.v1.ConfigMapEnvSource:
    properties:
      name:
        type: string
        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
      optional:
        type: boolean
        description: Specify whether the ConfigMap must be defined
    description: |-
      ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

      The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
    example:
      name: name
      optional: true
  io.k8s.api.core.v1.SecretEnvSource:
    properties:
      name:
        type: string
        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
      optional:
        type: boolean
        description: Specify whether the Secret must be defined
    description: |-
      SecretEnvSource selects a Secret to populate the environment variables with.

      The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
    example:
      name: name
      optional: true
  io.k8s.api.core.v1.Lifecycle:
    properties:
      postStart:
        description: 'PostStart is called immediately after a container is created.
          If the handler fails, the container is terminated and restarted according
          to its restart policy. Other management of the container blocks until the
          hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
        $ref: '#/definitions/io.k8s.api.core.v1.Handler'
      preStop:
        description: 'PreStop is called immediately before a container is terminated.
          The container is terminated after the handler completes. The reason for
          termination is passed to the handler. Regardless of the outcome of the handler,
          the container is eventually terminated. Other management of the container
          blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
        $ref: '#/definitions/io.k8s.api.core.v1.Handler'
    description: Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
    example:
      postStart:
        tcpSocket:
          port: null
          host: host
        exec:
          command:
          - command
          - command
        httpGet:
          path: path
          scheme: scheme
          port: null
          host: host
          httpHeaders:
          - name: name
            value: value
          - name: name
            value: value
      preStop:
        tcpSocket:
          port: null
          host: host
        exec:
          command:
          - command
          - command
        httpGet:
          path: path
          scheme: scheme
          port: null
          host: host
          httpHeaders:
          - name: name
            value: value
          - name: name
            value: value
  io.k8s.api.core.v1.Handler:
    properties:
      exec:
        description: One and only one of the following should be specified. Exec specifies the action to take.
        $ref: '#/definitions/io.k8s.api.core.v1.ExecAction'
      httpGet:
        description: HTTPGet specifies the http request to perform.
        $ref: '#/definitions/io.k8s.api.core.v1.HTTPGetAction'
      tcpSocket:
        description: TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported
        $ref: '#/definitions/io.k8s.api.core.v1.TCPSocketAction'
    description: Handler defines a specific action that should be taken
    example:
      tcpSocket:
        port: null
        host: host
      exec:
        command:
        - command
        - command
      httpGet:
        path: path
        scheme: scheme
        port: null
        host: host
        httpHeaders:
        - name: name
          value: value
        - name: name
          value: value
  io.k8s.api.core.v1.ExecAction:
    properties:
      command:
        type: array
        description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
        items:
          type: string
    description: ExecAction describes a "run in container" action.
    example:
      command:
      - command
      - command
  io.k8s.api.core.v1.HTTPGetAction:
    required:
    - port
    properties:
      host:
        type: string
        description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
      httpHeaders:
        type: array
        description: Custom headers to set in the request. HTTP allows repeated headers.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.HTTPHeader'
      path:
        type: string
        description: Path to access on the HTTP server.
      port:
        description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
        $ref: '#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString'
      scheme:
        type: string
        description: Scheme to use for connecting to the host. Defaults to HTTP.
    description: HTTPGetAction describes an action based on HTTP Get requests.
    example:
      path: path
      scheme: scheme
      port: null
      host: host
      httpHeaders:
      - name: name
        value: value
      - name: name
        value: value
  io.k8s.api.core.v1.HTTPHeader:
    required:
    - name
    - value
    properties:
      name:
        type: string
        description: The header field name
      value:
        type: string
        description: The header field value
    description: HTTPHeader describes a custom header to be used in HTTP probes
    example:
      name: name
      value: value
  io.k8s.api.core.v1.TCPSocketAction:
    required:
    - port
    properties:
      host:
        type: string
        description: 'Optional: Host name to connect to, defaults to the pod IP.'
      port:
        description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
        $ref: '#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString'
    description: TCPSocketAction describes an action based on opening a socket
    example:
      port: null
      host: host
  io.k8s.api.core.v1.Probe:
    properties:
      exec:
        description: One and only one of the following should be specified. Exec specifies the action to take.
        $ref: '#/definitions/io.k8s.api.core.v1.ExecAction'
      failureThreshold:
        type: integer
        format: int32
        description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
      httpGet:
        description: HTTPGet specifies the http request to perform.
        $ref: '#/definitions/io.k8s.api.core.v1.HTTPGetAction'
      initialDelaySeconds:
        type: integer
        format: int32
        description: 'Number of seconds after the container has started before liveness
          probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
      periodSeconds:
        type: integer
        format: int32
        description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
      successThreshold:
        type: integer
        format: int32
        description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
      tcpSocket:
        description: TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported
        $ref: '#/definitions/io.k8s.api.core.v1.TCPSocketAction'
      timeoutSeconds:
        type: integer
        format: int32
        description: 'Number of seconds after which the probe times out. Defaults
          to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
    description: Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
    example:
      failureThreshold: 7
      periodSeconds: 1
      tcpSocket:
        port: null
        host: host
      timeoutSeconds: 6
      successThreshold: 1
      initialDelaySeconds: 1
      exec:
        command:
        - command
        - command
      httpGet:
        path: path
        scheme: scheme
        port: null
        host: host
        httpHeaders:
        - name: name
          value: value
        - name: name
          value: value
  io.k8s.api.core.v1.ContainerPort:
    required:
    - containerPort
    properties:
      containerPort:
        type: integer
        format: int32
        description: Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
      hostIP:
        type: string
        description: What host IP to bind the external port to.
      hostPort:
        type: integer
        format: int32
        description: Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
      name:
        type: string
        description: If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
      protocol:
        type: string
        description: Protocol for port. Must be UDP or TCP. Defaults to "TCP".
    description: ContainerPort represents a network port in a single container.
    example:
      protocol: protocol
      hostIP: hostIP
      name: name
      containerPort: 7
      hostPort: 1
  io.k8s.api.core.v1.ResourceRequirements:
    properties:
      limits:
        type: object
        description: 'Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        additionalProperties:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity'
      requests:
        type: object
        description: 'Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is
          explicitly specified, otherwise to an implementation-defined value. More
          info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
        additionalProperties:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity'
    description: ResourceRequirements describes the compute resource requirements.
    example:
      requests:
        key: null
      limits:
        key: null
  io.k8s.api.core.v1.SecurityContext:
    properties:
      allowPrivilegeEscalation:
        type: boolean
        description: 'AllowPrivilegeEscalation controls whether a process can gain
          more privileges than its parent process. This bool directly controls if
          the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation
          is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN'
      capabilities:
        description: The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
        $ref: '#/definitions/io.k8s.api.core.v1.Capabilities'
      privileged:
        type: boolean
        description: Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
      readOnlyRootFilesystem:
        type: boolean
        description: Whether this container has a read-only root filesystem. Default is false.
      runAsNonRoot:
        type: boolean
        description: Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
      runAsUser:
        type: integer
        format: int64
        description: The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
      seLinuxOptions:
        description: The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
        $ref: '#/definitions/io.k8s.api.core.v1.SELinuxOptions'
    description: SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
    example:
      privileged: true
      runAsUser: 4
      capabilities:
        add:
        - add
        - add
        drop:
        - drop
        - drop
      seLinuxOptions:
        role: role
        level: level
        type: type
        user: user
      allowPrivilegeEscalation: true
      runAsNonRoot: true
      readOnlyRootFilesystem: true
  io.k8s.api.core.v1.Capabilities:
    properties:
      add:
        type: array
        description: Added capabilities
        items:
          type: string
      drop:
        type: array
        description: Removed capabilities
        items:
          type: string
    description: Adds and removes POSIX capabilities from running containers.
    example:
      add:
      - add
      - add
      drop:
      - drop
      - drop
  io.k8s.api.core.v1.SELinuxOptions:
    properties:
      level:
        type: string
        description: Level is SELinux level label that applies to the container.
      role:
        type: string
        description: Role is a SELinux role label that applies to the container.
      type:
        type: string
        description: Type is a SELinux type label that applies to the container.
      user:
        type: string
        description: User is a SELinux user label that applies to the container.
    description: SELinuxOptions are the labels to be applied to the container
    example:
      role: role
      level: level
      type: type
      user: user
  io.k8s.api.core.v1.VolumeDevice:
    required:
    - devicePath
    - name
    properties:
      devicePath:
        type: string
        description: devicePath is the path inside of the container that the device will be mapped to.
      name:
        type: string
        description: name must match the name of a persistentVolumeClaim in the pod
    description: volumeDevice describes a mapping of a raw block device within a container.
    example:
      devicePath: devicePath
      name: name
  io.k8s.api.core.v1.VolumeMount:
    required:
    - mountPath
    - name
    properties:
      mountPath:
        type: string
        description: Path within the container at which the volume should be mounted.  Must not contain ':'.
      mountPropagation:
        type: string
        description: mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationHostToContainer is used. This field is alpha in 1.8 and can be reworked or removed in a future release.
      name:
        type: string
        description: This must match the Name of a Volume.
      readOnly:
        type: boolean
        description: Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
      subPath:
        type: string
        description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    description: VolumeMount describes a mounting of a Volume within a container.
    example:
      mountPath: mountPath
      mountPropagation: mountPropagation
      name: name
      readOnly: true
      subPath: subPath
  io.k8s.api.core.v1.PodDNSConfig:
    properties:
      nameservers:
        type: array
        description: A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
        items:
          type: string
      options:
        type: array
        description: A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.PodDNSConfigOption'
      searches:
        type: array
        description: A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
        items:
          type: string
    description: PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
    example:
      searches:
      - searches
      - searches
      nameservers:
      - nameservers
      - nameservers
      options:
      - name: name
        value: value
      - name: name
        value: value
  io.k8s.api.core.v1.PodDNSConfigOption:
    properties:
      name:
        type: string
        description: Required.
      value:
        type: string
    description: PodDNSConfigOption defines DNS resolver options of a pod.
    example:
      name: name
      value: value
  io.k8s.api.core.v1.HostAlias:
    properties:
      hostnames:
        type: array
        description: Hostnames for the above IP address.
        items:
          type: string
      ip:
        type: string
        description: IP address of the host file entry.
    description: HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.
    example:
      ip: ip
      hostnames:
      - hostnames
      - hostnames
  io.k8s.api.core.v1.LocalObjectReference:
    properties:
      name:
        type: string
        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
    description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
    example:
      name: name
  io.k8s.api.core.v1.PodSecurityContext:
    properties:
      fsGroup:
        type: integer
        format: int64
        description: |-
          A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

          1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

          If unset, the Kubelet will not modify the ownership and permissions of any volume.
      runAsNonRoot:
        type: boolean
        description: Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
      runAsUser:
        type: integer
        format: int64
        description: The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
      seLinuxOptions:
        description: The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
        $ref: '#/definitions/io.k8s.api.core.v1.SELinuxOptions'
      supplementalGroups:
        type: array
        description: A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.
        items:
          type: integer
          format: int64
    description: PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
    example:
      runAsUser: 9
      seLinuxOptions:
        role: role
        level: level
        type: type
        user: user
      fsGroup: 9
      supplementalGroups:
      - 6
      - 6
      runAsNonRoot: true
  io.k8s.api.core.v1.Toleration:
    properties:
      effect:
        type: string
        description: Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
      key:
        type: string
        description: Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
      operator:
        type: string
        description: Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
      tolerationSeconds:
        type: integer
        format: int64
        description: TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
      value:
        type: string
        description: Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
    description: The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
    example:
      effect: effect
      tolerationSeconds: 9
      value: value
      key: key
      operator: operator
  io.k8s.api.core.v1.Volume:
    required:
    - name
    properties:
      awsElasticBlockStore:
        description: 'AWSElasticBlockStore represents an AWS Disk resource that is
          attached to a kubelet''s host machine and then exposed to the pod. More
          info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
        $ref: '#/definitions/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource'
      azureDisk:
        description: AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
        $ref: '#/definitions/io.k8s.api.core.v1.AzureDiskVolumeSource'
      azureFile:
        description: AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
        $ref: '#/definitions/io.k8s.api.core.v1.AzureFileVolumeSource'
      cephfs:
        description: CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
        $ref: '#/definitions/io.k8s.api.core.v1.CephFSVolumeSource'
      cinder:
        description: 'Cinder represents a cinder volume attached and mounted on kubelets
          host machine More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md'
        $ref: '#/definitions/io.k8s.api.core.v1.CinderVolumeSource'
      configMap:
        description: ConfigMap represents a configMap that should populate this volume
        $ref: '#/definitions/io.k8s.api.core.v1.ConfigMapVolumeSource'
      downwardAPI:
        description: DownwardAPI represents downward API about the pod that should populate this volume
        $ref: '#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeSource'
      emptyDir:
        description: 'EmptyDir represents a temporary directory that shares a pod''s
          lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
        $ref: '#/definitions/io.k8s.api.core.v1.EmptyDirVolumeSource'
      fc:
        description: FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
        $ref: '#/definitions/io.k8s.api.core.v1.FCVolumeSource'
      flexVolume:
        description: FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
        $ref: '#/definitions/io.k8s.api.core.v1.FlexVolumeSource'
      flocker:
        description: Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
        $ref: '#/definitions/io.k8s.api.core.v1.FlockerVolumeSource'
      gcePersistentDisk:
        description: 'GCEPersistentDisk represents a GCE Disk resource that is attached
          to a kubelet''s host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
        $ref: '#/definitions/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource'
      gitRepo:
        description: GitRepo represents a git repository at a particular revision.
        $ref: '#/definitions/io.k8s.api.core.v1.GitRepoVolumeSource'
      glusterfs:
        description: 'Glusterfs represents a Glusterfs mount on the host that shares
          a pod''s lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md'
        $ref: '#/definitions/io.k8s.api.core.v1.GlusterfsVolumeSource'
      hostPath:
        description: 'HostPath represents a pre-existing file or directory on the
          host machine that is directly exposed to the container. This is generally
          used for system agents or other privileged things that are allowed to see
          the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
        $ref: '#/definitions/io.k8s.api.core.v1.HostPathVolumeSource'
      iscsi:
        description: 'ISCSI represents an ISCSI Disk resource that is attached to
          a kubelet''s host machine and then exposed to the pod. More info: https://releases.k8s.io/HEAD/examples/volumes/iscsi/README.md'
        $ref: '#/definitions/io.k8s.api.core.v1.ISCSIVolumeSource'
      name:
        type: string
        description: 'Volume''s name. Must be a DNS_LABEL and unique within the pod.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
      nfs:
        description: 'NFS represents an NFS mount on the host that shares a pod''s
          lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
        $ref: '#/definitions/io.k8s.api.core.v1.NFSVolumeSource'
      persistentVolumeClaim:
        description: 'PersistentVolumeClaimVolumeSource represents a reference to
          a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
        $ref: '#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource'
      photonPersistentDisk:
        description: PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
        $ref: '#/definitions/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource'
      portworxVolume:
        description: PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
        $ref: '#/definitions/io.k8s.api.core.v1.PortworxVolumeSource'
      projected:
        description: Items for all in one resources secrets, configmaps, and downward API
        $ref: '#/definitions/io.k8s.api.core.v1.ProjectedVolumeSource'
      quobyte:
        description: Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
        $ref: '#/definitions/io.k8s.api.core.v1.QuobyteVolumeSource'
      rbd:
        description: 'RBD represents a Rados Block Device mount on the host that shares
          a pod''s lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md'
        $ref: '#/definitions/io.k8s.api.core.v1.RBDVolumeSource'
      scaleIO:
        description: ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
        $ref: '#/definitions/io.k8s.api.core.v1.ScaleIOVolumeSource'
      secret:
        description: 'Secret represents a secret that should populate this volume.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
        $ref: '#/definitions/io.k8s.api.core.v1.SecretVolumeSource'
      storageos:
        description: StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
        $ref: '#/definitions/io.k8s.api.core.v1.StorageOSVolumeSource'
      vsphereVolume:
        description: VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
        $ref: '#/definitions/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource'
    description: Volume represents a named volume in a pod that may be accessed by any container in the pod.
    example:
      quobyte:
        volume: volume
        registry: registry
        readOnly: true
        user: user
        group: group
      azureFile:
        secretName: secretName
        readOnly: true
        shareName: shareName
      flexVolume:
        driver: driver
        options:
          key: options
        secretRef:
          name: name
        readOnly: true
        fsType: fsType
      secret:
        secretName: secretName
        defaultMode: 3
        optional: true
        items:
        - mode: 6
          path: path
          key: key
        - mode: 6
          path: path
          key: key
      projected:
        sources:
        - downwardAPI:
            items:
            - mode: 2
              path: path
              resourceFieldRef:
                divisor: {}
                resource: resource
                containerName: containerName
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
            - mode: 2
              path: path
              resourceFieldRef:
                divisor: {}
                resource: resource
                containerName: containerName
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          configMap:
            name: name
            optional: true
            items:
            - mode: 6
              path: path
              key: key
            - mode: 6
              path: path
              key: key
          secret:
            name: name
            optional: true
            items:
            - mode: 6
              path: path
              key: key
            - mode: 6
              path: path
              key: key
        - downwardAPI:
            items:
            - mode: 2
              path: path
              resourceFieldRef:
                divisor: {}
                resource: resource
                containerName: containerName
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
            - mode: 2
              path: path
              resourceFieldRef:
                divisor: {}
                resource: resource
                containerName: containerName
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          configMap:
            name: name
            optional: true
            items:
            - mode: 6
              path: path
              key: key
            - mode: 6
              path: path
              key: key
          secret:
            name: name
            optional: true
            items:
            - mode: 6
              path: path
              key: key
            - mode: 6
              path: path
              key: key
        defaultMode: 6
      cephfs:
        path: path
        secretRef:
          name: name
        secretFile: secretFile
        readOnly: true
        user: user
        monitors:
        - monitors
        - monitors
      scaleIO:
        system: system
        protectionDomain: protectionDomain
        sslEnabled: true
        storageMode: storageMode
        volumeName: volumeName
        secretRef:
          name: name
        readOnly: true
        fsType: fsType
        storagePool: storagePool
        gateway: gateway
      emptyDir:
        sizeLimit: null
        medium: medium
      glusterfs:
        path: path
        endpoints: endpoints
        readOnly: true
      gcePersistentDisk:
        partition: 6
        readOnly: true
        pdName: pdName
        fsType: fsType
      photonPersistentDisk:
        pdID: pdID
        fsType: fsType
      azureDisk:
        diskName: diskName
        kind: kind
        readOnly: true
        cachingMode: cachingMode
        diskURI: diskURI
        fsType: fsType
      cinder:
        volumeID: volumeID
        readOnly: true
        fsType: fsType
      downwardAPI:
        defaultMode: 1
        items:
        - mode: 2
          path: path
          resourceFieldRef:
            divisor: {}
            resource: resource
            containerName: containerName
          fieldRef:
            apiVersion: apiVersion
            fieldPath: fieldPath
        - mode: 2
          path: path
          resourceFieldRef:
            divisor: {}
            resource: resource
            containerName: containerName
          fieldRef:
            apiVersion: apiVersion
            fieldPath: fieldPath
      awsElasticBlockStore:
        partition: 6
        volumeID: volumeID
        readOnly: true
        fsType: fsType
      flocker:
        datasetName: datasetName
        datasetUUID: datasetUUID
      iscsi:
        chapAuthSession: true
        iscsiInterface: iscsiInterface
        lun: 5
        chapAuthDiscovery: true
        iqn: iqn
        portals:
        - portals
        - portals
        secretRef:
          name: name
        initiatorName: initiatorName
        readOnly: true
        fsType: fsType
        targetPortal: targetPortal
      rbd:
        image: image
        pool: pool
        secretRef:
          name: name
        readOnly: true
        fsType: fsType
        keyring: keyring
        user: user
        monitors:
        - monitors
        - monitors
      configMap:
        defaultMode: 3
        name: name
        optional: true
        items:
        - mode: 6
          path: path
          key: key
        - mode: 6
          path: path
          key: key
      storageos:
        volumeNamespace: volumeNamespace
        volumeName: volumeName
        secretRef:
          name: name
        readOnly: true
        fsType: fsType
      name: name
      nfs:
        path: path
        server: server
        readOnly: true
      persistentVolumeClaim:
        claimName: claimName
        readOnly: true
      gitRepo:
        repository: repository
        directory: directory
        revision: revision
      portworxVolume:
        volumeID: volumeID
        readOnly: true
        fsType: fsType
      vsphereVolume:
        storagePolicyName: storagePolicyName
        storagePolicyID: storagePolicyID
        volumePath: volumePath
        fsType: fsType
      fc:
        lun: 6
        targetWWNs:
        - targetWWNs
        - targetWWNs
        readOnly: true
        wwids:
        - wwids
        - wwids
        fsType: fsType
      hostPath:
        path: path
        type: type
  io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource:
    required:
    - volumeID
    properties:
      fsType:
        type: string
        description: 'Filesystem type of the volume that you want to mount. Tip: Ensure
          that the filesystem type is supported by the host operating system. Examples:
          "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
      partition:
        type: integer
        format: int32
        description: 'The partition in the volume that you want to mount. If omitted,
          the default is to mount by volume name. Examples: For volume /dev/sda1,
          you specify the partition as "1". Similarly, the volume partition for /dev/sda
          is "0" (or you can leave the property empty).'
      readOnly:
        type: boolean
        description: 'Specify "true" to force and set the ReadOnly property in VolumeMounts
          to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
      volumeID:
        type: string
        description: 'Unique ID of the persistent disk resource in AWS (Amazon EBS
          volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
    description: |-
      Represents a Persistent Disk resource in AWS.

      An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
    example:
      partition: 6
      volumeID: volumeID
      readOnly: true
      fsType: fsType
  io.k8s.api.core.v1.AzureDiskVolumeSource:
    required:
    - diskName
    - diskURI
    properties:
      cachingMode:
        type: string
        description: 'Host Caching mode: None, Read Only, Read Write.'
      diskName:
        type: string
        description: The Name of the data disk in the blob storage
      diskURI:
        type: string
        description: The URI the data disk in the blob storage
      fsType:
        type: string
        description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
      kind:
        type: string
        description: 'Expected values Shared: multiple blob disks per storage account  Dedicated:
          single blob disk per storage account  Managed: azure managed data disk (only
          in managed availability set). defaults to shared'
      readOnly:
        type: boolean
        description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    description: AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
    example:
      diskName: diskName
      kind: kind
      readOnly: true
      cachingMode: cachingMode
      diskURI: diskURI
      fsType: fsType
  io.k8s.api.core.v1.AzureFileVolumeSource:
    required:
    - secretName
    - shareName
    properties:
      readOnly:
        type: boolean
        description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
      secretName:
        type: string
        description: the name of secret that contains Azure Storage Account Name and Key
      shareName:
        type: string
        description: Share Name
    description: AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
    example:
      secretName: secretName
      readOnly: true
      shareName: shareName
  io.k8s.api.core.v1.CephFSVolumeSource:
    required:
    - monitors
    properties:
      monitors:
        type: array
        description: 'Required: Monitors is a collection of Ceph monitors More info:
          https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it'
        items:
          type: string
      path:
        type: string
        description: 'Optional: Used as the mounted root, rather than the full Ceph
          tree, default is /'
      readOnly:
        type: boolean
        description: 'Optional: Defaults to false (read/write). ReadOnly here will
          force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it'
      secretFile:
        type: string
        description: 'Optional: SecretFile is the path to key ring for User, default
          is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it'
      secretRef:
        description: 'Optional: SecretRef is reference to the authentication secret
          for User, default is empty. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it'
        $ref: '#/definitions/io.k8s.api.core.v1.LocalObjectReference'
      user:
        type: string
        description: 'Optional: User is the rados user name, default is admin More
          info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it'
    description: Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
    example:
      path: path
      secretRef:
        name: name
      secretFile: secretFile
      readOnly: true
      user: user
      monitors:
      - monitors
      - monitors
  io.k8s.api.core.v1.CinderVolumeSource:
    required:
    - volumeID
    properties:
      fsType:
        type: string
        description: 'Filesystem type to mount. Must be a filesystem type supported
          by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly
          inferred to be "ext4" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md'
      readOnly:
        type: boolean
        description: 'Optional: Defaults to false (read/write). ReadOnly here will
          force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md'
      volumeID:
        type: string
        description: 'volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md'
    description: Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
    example:
      volumeID: volumeID
      readOnly: true
      fsType: fsType
  io.k8s.api.core.v1.ConfigMapVolumeSource:
    properties:
      defaultMode:
        type: integer
        format: int32
        description: 'Optional: mode bits to use on created files by default. Must
          be a value between 0 and 0777. Defaults to 0644. Directories within the
          path are not affected by this setting. This might be in conflict with other
          options that affect the file mode, like fsGroup, and the result can be other
          mode bits set.'
      items:
        type: array
        description: If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.KeyToPath'
      name:
        type: string
        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
      optional:
        type: boolean
        description: Specify whether the ConfigMap or it's keys must be defined
    description: |-
      Adapts a ConfigMap into a volume.

      The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
    example:
      defaultMode: 3
      name: name
      optional: true
      items:
      - mode: 6
        path: path
        key: key
      - mode: 6
        path: path
        key: key
  io.k8s.api.core.v1.KeyToPath:
    required:
    - key
    - path
    properties:
      key:
        type: string
        description: The key to project.
      mode:
        type: integer
        format: int32
        description: 'Optional: mode bits to use on this file, must be a value between
          0 and 0777. If not specified, the volume defaultMode will be used. This
          might be in conflict with other options that affect the file mode, like
          fsGroup, and the result can be other mode bits set.'
      path:
        type: string
        description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    description: Maps a string key to a path within a volume.
    example:
      mode: 6
      path: path
      key: key
  io.k8s.api.core.v1.DownwardAPIVolumeSource:
    properties:
      defaultMode:
        type: integer
        format: int32
        description: 'Optional: mode bits to use on created files by default. Must
          be a value between 0 and 0777. Defaults to 0644. Directories within the
          path are not affected by this setting. This might be in conflict with other
          options that affect the file mode, like fsGroup, and the result can be other
          mode bits set.'
      items:
        type: array
        description: Items is a list of downward API volume file
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeFile'
    description: DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
    example:
      defaultMode: 1
      items:
      - mode: 2
        path: path
        resourceFieldRef:
          divisor: {}
          resource: resource
          containerName: containerName
        fieldRef:
          apiVersion: apiVersion
          fieldPath: fieldPath
      - mode: 2
        path: path
        resourceFieldRef:
          divisor: {}
          resource: resource
          containerName: containerName
        fieldRef:
          apiVersion: apiVersion
          fieldPath: fieldPath
  io.k8s.api.core.v1.DownwardAPIVolumeFile:
    required:
    - path
    properties:
      fieldRef:
        description: 'Required: Selects a field of the pod: only annotations, labels,
          name and namespace are supported.'
        $ref: '#/definitions/io.k8s.api.core.v1.ObjectFieldSelector'
      mode:
        type: integer
        format: int32
        description: 'Optional: mode bits to use on this file, must be a value between
          0 and 0777. If not specified, the volume defaultMode will be used. This
          might be in conflict with other options that affect the file mode, like
          fsGroup, and the result can be other mode bits set.'
      path:
        type: string
        description: 'Required: Path is  the relative path name of the file to be
          created. Must not be absolute or contain the ''..'' path. Must be utf-8
          encoded. The first item of the relative path must not start with ''..'''
      resourceFieldRef:
        description: 'Selects a resource of the container: only resources limits and
          requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are
          currently supported.'
        $ref: '#/definitions/io.k8s.api.core.v1.ResourceFieldSelector'
    description: DownwardAPIVolumeFile represents information to create the file containing the pod field
    example:
      mode: 2
      path: path
      resourceFieldRef:
        divisor: {}
        resource: resource
        containerName: containerName
      fieldRef:
        apiVersion: apiVersion
        fieldPath: fieldPath
  io.k8s.api.core.v1.EmptyDirVolumeSource:
    properties:
      medium:
        type: string
        description: 'What type of storage medium should back this directory. The
          default is "" which means to use the node''s default medium. Must be an
          empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
      sizeLimit:
        description: 'Total amount of local storage required for this EmptyDir volume.
          The size limit is also applicable for memory medium. The maximum usage on
          memory medium EmptyDir would be the minimum value between the SizeLimit
          specified here and the sum of memory limits of all containers in a pod.
          The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity'
    description: Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
    example:
      sizeLimit: null
      medium: medium
  io.k8s.api.core.v1.FCVolumeSource:
    properties:
      fsType:
        type: string
        description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
      lun:
        type: integer
        format: int32
        description: 'Optional: FC target lun number'
      readOnly:
        type: boolean
        description: 'Optional: Defaults to false (read/write). ReadOnly here will
          force the ReadOnly setting in VolumeMounts.'
      targetWWNs:
        type: array
        description: 'Optional: FC target worldwide names (WWNs)'
        items:
          type: string
      wwids:
        type: array
        description: 'Optional: FC volume world wide identifiers (wwids) Either wwids
          or combination of targetWWNs and lun must be set, but not both simultaneously.'
        items:
          type: string
    description: Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
    example:
      lun: 6
      targetWWNs:
      - targetWWNs
      - targetWWNs
      readOnly: true
      wwids:
      - wwids
      - wwids
      fsType: fsType
  io.k8s.api.core.v1.FlexVolumeSource:
    required:
    - driver
    properties:
      driver:
        type: string
        description: Driver is the name of the driver to use for this volume.
      fsType:
        type: string
        description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
      options:
        type: object
        description: 'Optional: Extra command options if any.'
        additionalProperties:
          type: string
      readOnly:
        type: boolean
        description: 'Optional: Defaults to false (read/write). ReadOnly here will
          force the ReadOnly setting in VolumeMounts.'
      secretRef:
        description: 'Optional: SecretRef is reference to the secret object containing
          sensitive information to pass to the plugin scripts. This may be empty if
          no secret object is specified. If the secret object contains more than one
          secret, all secrets are passed to the plugin scripts.'
        $ref: '#/definitions/io.k8s.api.core.v1.LocalObjectReference'
    description: FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
    example:
      driver: driver
      options:
        key: options
      secretRef:
        name: name
      readOnly: true
      fsType: fsType
  io.k8s.api.core.v1.FlockerVolumeSource:
    properties:
      datasetName:
        type: string
        description: Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
      datasetUUID:
        type: string
        description: UUID of the dataset. This is unique identifier of a Flocker dataset
    description: Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
    example:
      datasetName: datasetName
      datasetUUID: datasetUUID
  io.k8s.api.core.v1.GCEPersistentDiskVolumeSource:
    required:
    - pdName
    properties:
      fsType:
        type: string
        description: 'Filesystem type of the volume that you want to mount. Tip: Ensure
          that the filesystem type is supported by the host operating system. Examples:
          "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
      partition:
        type: integer
        format: int32
        description: 'The partition in the volume that you want to mount. If omitted,
          the default is to mount by volume name. Examples: For volume /dev/sda1,
          you specify the partition as "1". Similarly, the volume partition for /dev/sda
          is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
      pdName:
        type: string
        description: 'Unique name of the PD resource in GCE. Used to identify the
          disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
      readOnly:
        type: boolean
        description: 'ReadOnly here will force the ReadOnly setting in VolumeMounts.
          Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
    description: |-
      Represents a Persistent Disk resource in Google Compute Engine.

      A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
    example:
      partition: 6
      readOnly: true
      pdName: pdName
      fsType: fsType
  io.k8s.api.core.v1.GitRepoVolumeSource:
    required:
    - repository
    properties:
      directory:
        type: string
        description: Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
      repository:
        type: string
        description: Repository URL
      revision:
        type: string
        description: Commit hash for the specified revision.
    description: Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.
    example:
      repository: repository
      directory: directory
      revision: revision
  io.k8s.api.core.v1.GlusterfsVolumeSource:
    required:
    - endpoints
    - path
    properties:
      endpoints:
        type: string
        description: 'EndpointsName is the endpoint name that details Glusterfs topology.
          More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod'
      path:
        type: string
        description: 'Path is the Glusterfs volume path. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod'
      readOnly:
        type: boolean
        description: 'ReadOnly here will force the Glusterfs volume to be mounted
          with read-only permissions. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod'
    description: Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
    example:
      path: path
      endpoints: endpoints
      readOnly: true
  io.k8s.api.core.v1.HostPathVolumeSource:
    required:
    - path
    properties:
      path:
        type: string
        description: 'Path of the directory on the host. If the path is a symlink,
          it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
      type:
        type: string
        description: 'Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
    description: Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
    example:
      path: path
      type: type
  io.k8s.api.core.v1.ISCSIVolumeSource:
    required:
    - iqn
    - lun
    - targetPortal
    properties:
      chapAuthDiscovery:
        type: boolean
        description: whether support iSCSI Discovery CHAP authentication
      chapAuthSession:
        type: boolean
        description: whether support iSCSI Session CHAP authentication
      fsType:
        type: string
        description: 'Filesystem type of the volume that you want to mount. Tip: Ensure
          that the filesystem type is supported by the host operating system. Examples:
          "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi'
      initiatorName:
        type: string
        description: Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
      iqn:
        type: string
        description: Target iSCSI Qualified Name.
      iscsiInterface:
        type: string
        description: iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
      lun:
        type: integer
        format: int32
        description: iSCSI Target Lun number.
      portals:
        type: array
        description: iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
        items:
          type: string
      readOnly:
        type: boolean
        description: ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
      secretRef:
        description: CHAP Secret for iSCSI target and initiator authentication
        $ref: '#/definitions/io.k8s.api.core.v1.LocalObjectReference'
      targetPortal:
        type: string
        description: iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
    description: Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
    example:
      chapAuthSession: true
      iscsiInterface: iscsiInterface
      lun: 5
      chapAuthDiscovery: true
      iqn: iqn
      portals:
      - portals
      - portals
      secretRef:
        name: name
      initiatorName: initiatorName
      readOnly: true
      fsType: fsType
      targetPortal: targetPortal
  io.k8s.api.core.v1.NFSVolumeSource:
    required:
    - path
    - server
    properties:
      path:
        type: string
        description: 'Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
      readOnly:
        type: boolean
        description: 'ReadOnly here will force the NFS export to be mounted with read-only
          permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
      server:
        type: string
        description: 'Server is the hostname or IP address of the NFS server. More
          info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
    description: Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
    example:
      path: path
      server: server
      readOnly: true
  io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource:
    required:
    - claimName
    properties:
      claimName:
        type: string
        description: 'ClaimName is the name of a PersistentVolumeClaim in the same
          namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
      readOnly:
        type: boolean
        description: Will force the ReadOnly setting in VolumeMounts. Default false.
    description: PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
    example:
      claimName: claimName
      readOnly: true
  io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource:
    required:
    - pdID
    properties:
      fsType:
        type: string
        description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
      pdID:
        type: string
        description: ID that identifies Photon Controller persistent disk
    description: Represents a Photon Controller persistent disk resource.
    example:
      pdID: pdID
      fsType: fsType
  io.k8s.api.core.v1.PortworxVolumeSource:
    required:
    - volumeID
    properties:
      fsType:
        type: string
        description: FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
      readOnly:
        type: boolean
        description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
      volumeID:
        type: string
        description: VolumeID uniquely identifies a Portworx volume
    description: PortworxVolumeSource represents a Portworx volume resource.
    example:
      volumeID: volumeID
      readOnly: true
      fsType: fsType
  io.k8s.api.core.v1.ProjectedVolumeSource:
    required:
    - sources
    properties:
      defaultMode:
        type: integer
        format: int32
        description: Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
      sources:
        type: array
        description: list of volume projections
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.VolumeProjection'
    description: Represents a projected volume source
    example:
      sources:
      - downwardAPI:
          items:
          - mode: 2
            path: path
            resourceFieldRef:
              divisor: {}
              resource: resource
              containerName: containerName
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
          - mode: 2
            path: path
            resourceFieldRef:
              divisor: {}
              resource: resource
              containerName: containerName
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        configMap:
          name: name
          optional: true
          items:
          - mode: 6
            path: path
            key: key
          - mode: 6
            path: path
            key: key
        secret:
          name: name
          optional: true
          items:
          - mode: 6
            path: path
            key: key
          - mode: 6
            path: path
            key: key
      - downwardAPI:
          items:
          - mode: 2
            path: path
            resourceFieldRef:
              divisor: {}
              resource: resource
              containerName: containerName
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
          - mode: 2
            path: path
            resourceFieldRef:
              divisor: {}
              resource: resource
              containerName: containerName
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        configMap:
          name: name
          optional: true
          items:
          - mode: 6
            path: path
            key: key
          - mode: 6
            path: path
            key: key
        secret:
          name: name
          optional: true
          items:
          - mode: 6
            path: path
            key: key
          - mode: 6
            path: path
            key: key
      defaultMode: 6
  io.k8s.api.core.v1.VolumeProjection:
    properties:
      configMap:
        description: information about the configMap data to project
        $ref: '#/definitions/io.k8s.api.core.v1.ConfigMapProjection'
      downwardAPI:
        description: information about the downwardAPI data to project
        $ref: '#/definitions/io.k8s.api.core.v1.DownwardAPIProjection'
      secret:
        description: information about the secret data to project
        $ref: '#/definitions/io.k8s.api.core.v1.SecretProjection'
    description: Projection that may be projected along with other supported volume types
    example:
      downwardAPI:
        items:
        - mode: 2
          path: path
          resourceFieldRef:
            divisor: {}
            resource: resource
            containerName: containerName
          fieldRef:
            apiVersion: apiVersion
            fieldPath: fieldPath
        - mode: 2
          path: path
          resourceFieldRef:
            divisor: {}
            resource: resource
            containerName: containerName
          fieldRef:
            apiVersion: apiVersion
            fieldPath: fieldPath
      configMap:
        name: name
        optional: true
        items:
        - mode: 6
          path: path
          key: key
        - mode: 6
          path: path
          key: key
      secret:
        name: name
        optional: true
        items:
        - mode: 6
          path: path
          key: key
        - mode: 6
          path: path
          key: key
  io.k8s.api.core.v1.ConfigMapProjection:
    properties:
      items:
        type: array
        description: If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.KeyToPath'
      name:
        type: string
        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
      optional:
        type: boolean
        description: Specify whether the ConfigMap or it's keys must be defined
    description: |-
      Adapts a ConfigMap into a projected volume.

      The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
    example:
      name: name
      optional: true
      items:
      - mode: 6
        path: path
        key: key
      - mode: 6
        path: path
        key: key
  io.k8s.api.core.v1.DownwardAPIProjection:
    properties:
      items:
        type: array
        description: Items is a list of DownwardAPIVolume file
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeFile'
    description: Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
    example:
      items:
      - mode: 2
        path: path
        resourceFieldRef:
          divisor: {}
          resource: resource
          containerName: containerName
        fieldRef:
          apiVersion: apiVersion
          fieldPath: fieldPath
      - mode: 2
        path: path
        resourceFieldRef:
          divisor: {}
          resource: resource
          containerName: containerName
        fieldRef:
          apiVersion: apiVersion
          fieldPath: fieldPath
  io.k8s.api.core.v1.SecretProjection:
    properties:
      items:
        type: array
        description: If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.KeyToPath'
      name:
        type: string
        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
      optional:
        type: boolean
        description: Specify whether the Secret or its key must be defined
    description: |-
      Adapts a secret into a projected volume.

      The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
    example:
      name: name
      optional: true
      items:
      - mode: 6
        path: path
        key: key
      - mode: 6
        path: path
        key: key
  io.k8s.api.core.v1.QuobyteVolumeSource:
    required:
    - registry
    - volume
    properties:
      group:
        type: string
        description: Group to map volume access to Default is no group
      readOnly:
        type: boolean
        description: ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
      registry:
        type: string
        description: Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
      user:
        type: string
        description: User to map volume access to Defaults to serivceaccount user
      volume:
        type: string
        description: Volume is a string that references an already created Quobyte volume by name.
    description: Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
    example:
      volume: volume
      registry: registry
      readOnly: true
      user: user
      group: group
  io.k8s.api.core.v1.RBDVolumeSource:
    required:
    - image
    - monitors
    properties:
      fsType:
        type: string
        description: 'Filesystem type of the volume that you want to mount. Tip: Ensure
          that the filesystem type is supported by the host operating system. Examples:
          "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd'
      image:
        type: string
        description: 'The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it'
      keyring:
        type: string
        description: 'Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring.
          More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it'
      monitors:
        type: array
        description: 'A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it'
        items:
          type: string
      pool:
        type: string
        description: 'The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it'
      readOnly:
        type: boolean
        description: 'ReadOnly here will force the ReadOnly setting in VolumeMounts.
          Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it'
      secretRef:
        description: 'SecretRef is name of the authentication secret for RBDUser.
          If provided overrides keyring. Default is nil. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it'
        $ref: '#/definitions/io.k8s.api.core.v1.LocalObjectReference'
      user:
        type: string
        description: 'The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it'
    description: Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
    example:
      image: image
      pool: pool
      secretRef:
        name: name
      readOnly: true
      fsType: fsType
      keyring: keyring
      user: user
      monitors:
      - monitors
      - monitors
  io.k8s.api.core.v1.ScaleIOVolumeSource:
    required:
    - gateway
    - secretRef
    - system
    properties:
      fsType:
        type: string
        description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
      gateway:
        type: string
        description: The host address of the ScaleIO API Gateway.
      protectionDomain:
        type: string
        description: The name of the ScaleIO Protection Domain for the configured storage.
      readOnly:
        type: boolean
        description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
      secretRef:
        description: SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
        $ref: '#/definitions/io.k8s.api.core.v1.LocalObjectReference'
      sslEnabled:
        type: boolean
        description: Flag to enable/disable SSL communication with Gateway, default false
      storageMode:
        type: string
        description: Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
      storagePool:
        type: string
        description: The ScaleIO Storage Pool associated with the protection domain.
      system:
        type: string
        description: The name of the storage system as configured in ScaleIO.
      volumeName:
        type: string
        description: The name of a volume already created in the ScaleIO system that is associated with this volume source.
    description: ScaleIOVolumeSource represents a persistent ScaleIO volume
    example:
      system: system
      protectionDomain: protectionDomain
      sslEnabled: true
      storageMode: storageMode
      volumeName: volumeName
      secretRef:
        name: name
      readOnly: true
      fsType: fsType
      storagePool: storagePool
      gateway: gateway
  io.k8s.api.core.v1.SecretVolumeSource:
    properties:
      defaultMode:
        type: integer
        format: int32
        description: 'Optional: mode bits to use on created files by default. Must
          be a value between 0 and 0777. Defaults to 0644. Directories within the
          path are not affected by this setting. This might be in conflict with other
          options that affect the file mode, like fsGroup, and the result can be other
          mode bits set.'
      items:
        type: array
        description: If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.KeyToPath'
      optional:
        type: boolean
        description: Specify whether the Secret or it's keys must be defined
      secretName:
        type: string
        description: 'Name of the secret in the pod''s namespace to use. More info:
          https://kubernetes.io/docs/concepts/storage/volumes#secret'
    description: |-
      Adapts a Secret into a volume.

      The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
    example:
      secretName: secretName
      defaultMode: 3
      optional: true
      items:
      - mode: 6
        path: path
        key: key
      - mode: 6
        path: path
        key: key
  io.k8s.api.core.v1.StorageOSVolumeSource:
    properties:
      fsType:
        type: string
        description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
      readOnly:
        type: boolean
        description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
      secretRef:
        description: SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
        $ref: '#/definitions/io.k8s.api.core.v1.LocalObjectReference'
      volumeName:
        type: string
        description: VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
      volumeNamespace:
        type: string
        description: VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
    description: Represents a StorageOS persistent volume resource.
    example:
      volumeNamespace: volumeNamespace
      volumeName: volumeName
      secretRef:
        name: name
      readOnly: true
      fsType: fsType
  io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource:
    required:
    - volumePath
    properties:
      fsType:
        type: string
        description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
      storagePolicyID:
        type: string
        description: Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
      storagePolicyName:
        type: string
        description: Storage Policy Based Management (SPBM) profile name.
      volumePath:
        type: string
        description: Path that identifies vSphere volume vmdk
    description: Represents a vSphere volume resource.
    example:
      storagePolicyName: storagePolicyName
      storagePolicyID: storagePolicyID
      volumePath: volumePath
      fsType: fsType
  io.k8s.api.core.v1.PodStatus:
    properties:
      conditions:
        type: array
        description: 'Current service state of pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions'
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.PodCondition'
        x-kubernetes-patch-strategy: merge
        x-kubernetes-patch-merge-key: type
      containerStatuses:
        type: array
        description: 'The list has one entry per container in the manifest. Each entry
          is currently the output of `docker inspect`. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status'
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.ContainerStatus'
      hostIP:
        type: string
        description: IP address of the host to which the pod is assigned. Empty if not yet scheduled.
      initContainerStatuses:
        type: array
        description: 'The list has one entry per init container in the manifest. The
          most recent successful init container will have ready = true, the most recently
          started container will have startTime set. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status'
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.ContainerStatus'
      message:
        type: string
        description: A human readable message indicating details about why the pod is in this condition.
      phase:
        type: string
        description: 'Current condition of the pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase'
      podIP:
        type: string
        description: IP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated.
      qosClass:
        type: string
        description: 'The Quality of Service (QOS) classification assigned to the
          pod based on resource requirements See PodQOSClass type for available QOS
          classes More info: https://github.com/kubernetes/kubernetes/blob/master/docs/design/resource-qos.md'
      reason:
        type: string
        description: A brief CamelCase message indicating details about why the pod is in this state. e.g. 'Evicted'
      startTime:
        description: RFC 3339 date and time at which the object was acknowledged by the Kubelet. This is before the Kubelet pulled the container image(s) for the pod.
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
    description: PodStatus represents information about the status of a pod. Status may trail the actual state of a system.
    example:
      phase: phase
      reason: reason
      podIP: podIP
      containerStatuses:
      - image: image
        imageID: imageID
        restartCount: 0
        ready: true
        name: name
        state:
          running:
            startedAt: null
          waiting:
            reason: reason
            message: message
          terminated:
            reason: reason
            exitCode: 3
            startedAt: null
            containerID: containerID
            message: message
            signal: 7
            finishedAt: null
        containerID: containerID
        lastState:
          running:
            startedAt: null
          waiting:
            reason: reason
            message: message
          terminated:
            reason: reason
            exitCode: 3
            startedAt: null
            containerID: containerID
            message: message
            signal: 7
            finishedAt: null
      - image: image
        imageID: imageID
        restartCount: 0
        ready: true
        name: name
        state:
          running:
            startedAt: null
          waiting:
            reason: reason
            message: message
          terminated:
            reason: reason
            exitCode: 3
            startedAt: null
            containerID: containerID
            message: message
            signal: 7
            finishedAt: null
        containerID: containerID
        lastState:
          running:
            startedAt: null
          waiting:
            reason: reason
            message: message
          terminated:
            reason: reason
            exitCode: 3
            startedAt: null
            containerID: containerID
            message: message
            signal: 7
            finishedAt: null
      hostIP: hostIP
      startTime: null
      qosClass: qosClass
      conditions:
      - reason: reason
        lastTransitionTime: null
        message: message
        type: type
        lastProbeTime: null
        status: status
      - reason: reason
        lastTransitionTime: null
        message: message
        type: type
        lastProbeTime: null
        status: status
      message: message
      initContainerStatuses:
      - image: image
        imageID: imageID
        restartCount: 0
        ready: true
        name: name
        state:
          running:
            startedAt: null
          waiting:
            reason: reason
            message: message
          terminated:
            reason: reason
            exitCode: 3
            startedAt: null
            containerID: containerID
            message: message
            signal: 7
            finishedAt: null
        containerID: containerID
        lastState:
          running:
            startedAt: null
          waiting:
            reason: reason
            message: message
          terminated:
            reason: reason
            exitCode: 3
            startedAt: null
            containerID: containerID
            message: message
            signal: 7
            finishedAt: null
      - image: image
        imageID: imageID
        restartCount: 0
        ready: true
        name: name
        state:
          running:
            startedAt: null
          waiting:
            reason: reason
            message: message
          terminated:
            reason: reason
            exitCode: 3
            startedAt: null
            containerID: containerID
            message: message
            signal: 7
            finishedAt: null
        containerID: containerID
        lastState:
          running:
            startedAt: null
          waiting:
            reason: reason
            message: message
          terminated:
            reason: reason
            exitCode: 3
            startedAt: null
            containerID: containerID
            message: message
            signal: 7
            finishedAt: null
  io.k8s.api.core.v1.PodCondition:
    required:
    - status
    - type
    properties:
      lastProbeTime:
        description: Last time we probed the condition.
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
      lastTransitionTime:
        description: Last time the condition transitioned from one status to another.
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
      message:
        type: string
        description: Human-readable message indicating details about last transition.
      reason:
        type: string
        description: Unique, one-word, CamelCase reason for the condition's last transition.
      status:
        type: string
        description: 'Status is the status of the condition. Can be True, False, Unknown.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions'
      type:
        type: string
        description: 'Type is the type of the condition. Currently only Ready. More
          info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions'
    description: PodCondition contains details for the current condition of this pod.
    example:
      reason: reason
      lastTransitionTime: null
      message: message
      type: type
      lastProbeTime: null
      status: status
  io.k8s.api.core.v1.ContainerStatus:
    required:
    - image
    - imageID
    - name
    - ready
    - restartCount
    properties:
      containerID:
        type: string
        description: Container's ID in the format 'docker://<container_id>'.
      image:
        type: string
        description: 'The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images'
      imageID:
        type: string
        description: ImageID of the container's image.
      lastState:
        description: Details about the container's last termination condition.
        $ref: '#/definitions/io.k8s.api.core.v1.ContainerState'
      name:
        type: string
        description: This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.
      ready:
        type: boolean
        description: Specifies whether the container has passed its readiness probe.
      restartCount:
        type: integer
        format: int32
        description: The number of times the container has been restarted, currently based on the number of dead containers that have not yet been removed. Note that this is calculated from dead containers. But those containers are subject to garbage collection. This value will get capped at 5 by GC.
      state:
        description: Details about the container's current condition.
        $ref: '#/definitions/io.k8s.api.core.v1.ContainerState'
    description: ContainerStatus contains details for the current status of this container.
    example:
      image: image
      imageID: imageID
      restartCount: 0
      ready: true
      name: name
      state:
        running:
          startedAt: null
        waiting:
          reason: reason
          message: message
        terminated:
          reason: reason
          exitCode: 3
          startedAt: null
          containerID: containerID
          message: message
          signal: 7
          finishedAt: null
      containerID: containerID
      lastState:
        running:
          startedAt: null
        waiting:
          reason: reason
          message: message
        terminated:
          reason: reason
          exitCode: 3
          startedAt: null
          containerID: containerID
          message: message
          signal: 7
          finishedAt: null
  io.k8s.api.core.v1.ContainerState:
    properties:
      running:
        description: Details about a running container
        $ref: '#/definitions/io.k8s.api.core.v1.ContainerStateRunning'
      terminated:
        description: Details about a terminated container
        $ref: '#/definitions/io.k8s.api.core.v1.ContainerStateTerminated'
      waiting:
        description: Details about a waiting container
        $ref: '#/definitions/io.k8s.api.core.v1.ContainerStateWaiting'
    description: ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
    example:
      running:
        startedAt: null
      waiting:
        reason: reason
        message: message
      terminated:
        reason: reason
        exitCode: 3
        startedAt: null
        containerID: containerID
        message: message
        signal: 7
        finishedAt: null
  io.k8s.api.core.v1.ContainerStateRunning:
    properties:
      startedAt:
        description: Time at which the container was last (re-)started
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
    description: ContainerStateRunning is a running state of a container.
    example:
      startedAt: null
  io.k8s.api.core.v1.ContainerStateTerminated:
    required:
    - exitCode
    properties:
      containerID:
        type: string
        description: Container's ID in the format 'docker://<container_id>'
      exitCode:
        type: integer
        format: int32
        description: Exit status from the last termination of the container
      finishedAt:
        description: Time at which the container last terminated
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
      message:
        type: string
        description: Message regarding the last termination of the container
      reason:
        type: string
        description: (brief) reason from the last termination of the container
      signal:
        type: integer
        format: int32
        description: Signal from the last termination of the container
      startedAt:
        description: Time at which previous execution of the container started
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
    description: ContainerStateTerminated is a terminated state of a container.
    example:
      reason: reason
      exitCode: 3
      startedAt: null
      containerID: containerID
      message: message
      signal: 7
      finishedAt: null
  io.k8s.api.core.v1.ContainerStateWaiting:
    properties:
      message:
        type: string
        description: Message regarding why the container is not yet running.
      reason:
        type: string
        description: (brief) reason the container is not yet running.
    description: ContainerStateWaiting is a waiting state of a container.
    example:
      reason: reason
      message: message
responses:
  BadRequestException:
    description: 400 Server receives invalid input parameter
    schema:
      $ref: '#/definitions/Error'
  ForbiddenException:
    description: 403 The user does not have access to update resource
    schema:
      $ref: '#/definitions/Error'
  NotFoundException:
    description: 404 The specified resource was not found
    schema:
      $ref: '#/definitions/Error'
  ConflictException:
    description: 409 Operation could not be performed because of conflict with prior state.
    schema:
      $ref: '#/definitions/Error'
  ServerException:
    description: 500 Internal server error occurred
    schema:
      $ref: '#/definitions/Error'
